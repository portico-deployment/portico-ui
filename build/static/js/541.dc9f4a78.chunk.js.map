{"version":3,"file":"static/js/541.dc9f4a78.chunk.js","mappings":"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","sources":["views/dashboard/exportWasm.js","views/dashboard/blockTableConfig.js","views/dashboard/collatorTableConfig.js","utilities/handleHash.js","views/dashboard/Dashboard.js","views/dashboard/cancelDeployment.js","views/theme/colors/Colors.js","views/theme/typography/Typography.js","views/coretime/GetMore.js","views/coretime/Coretime.js","views/runtime-upgrade/RuntimeUpgrade.js","views/empty/Empty.js","views/configurator/submit.js","views/configurator/Configurator.js","views/configurator-runtime/ConfiguratorRuntime.js","views/configurator-runtime/ConfiguratorRuntimeSpecs.js","routes.js","views/configurator-collators/ConfiguratorCollators.js","views/configurator-coretime/ConfiguratorCoretime.js","components/AppBreadcrumb.js","components/AppContent.js","components/AppFooter.js","assets/brand/portico-logo-blue.svg","components/AppHeader.js","components/AppSidebarNav.js","assets/brand/portico-logo-white.svg","_nav.js","components/AppSidebar.js","components/DocsLink.js","layout/DefaultLayout.js"],"sourcesContent":["//This component will help export a wasm given a particular hash.\n\nimport { CButton } from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilCloudDownload } from '@coreui/icons'\n\n//CONTEXT\nimport { useApiContextRC } from '../../contexts/ConnectRelayContext'\n\n\nconst ExportWasm = ({wasmHash, paraID}) => {\n    \n    const apiContextRC = useApiContextRC()\n    const rcApi = apiContextRC.api\n\n    const exportWasm = async () => {\n        const element = document.createElement(\"a\");\n        const wasm = await (await rcApi.query.paras.codeByHash(wasmHash)).toHuman();\n        const file = new Blob([wasm], {type: 'text/plain;charset=utf-8'});\n        element.href = URL.createObjectURL(file);\n        element.download = `[PORTICO] wasm-paraID-${paraID}.txt`;\n        document.body.appendChild(element);\n        element.click();\n    }\n\n\n    return (\n        <CButton color=\"link\" className='text-nowrap pe-1 d-inline-flex' >\n            <CIcon onClick={() => exportWasm()} className='me-2 text-dark'  size='lg' icon={cilCloudDownload}/>\n        </CButton>\n    );\n\n}\n\n\nexport default ExportWasm;","export const blockColumns = [\n    {\n      key: 'head',\n      label: 'Number',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'headHash',\n      label:'Block Hash',\n      _props: { scope: 'col' },\n    },\n]","export const collatorsColumns = [\n    {\n      key: 'name',\n      label: 'Name',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'wsUri',\n      label:'WebSocket URI',\n      _props: { scope: 'col' },\n    },\n    {\n      key: 'address',\n      label:'Address',\n      _props: { scope: 'col' },\n    }\n]","export const cutHash = (hash) => {\n    const start = hash.slice(0,8)\n    const end = hash.slice(hash.length-8,hash.length)\n    return `${start}...${end}`\n}","import React, {useState, useRef, useCallback} from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {\n  CCard,\n  CCardBody,\n  CCardTitle,\n  CCardText,\n  CCol,\n  CRow,\n  CTable,\n  CToaster,\n  CToast,\n  CToastClose,\n  CToastBody,\n  CContainer,\n  CPopover,\n  CButton\n} from '@coreui/react'\n\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus, cilCog, cilExitToApp, cilCopy } from '@coreui/icons'\nimport ExportWasm from './exportWasm'\nimport { blockColumns } from './blockTableConfig'\nimport { collatorsColumns } from './collatorTableConfig'\n\n\n//CONTEXT\nimport { useApiContextRC } from '../../contexts/ConnectRelayContext'\nimport { useApiContextPara } from '../../contexts/ConnectParaContext'\nimport { useLocalStorageContext } from 'src/contexts/LocalStorageContext'\nimport { useConfiguratorFormContext } from 'src/contexts/ConfiguratorFormContext'\n\n//UTILITIES\nimport { cutHash } from '../../utilities/handleHash'\nimport { cancelDeployment } from './cancelDeployment'\n\nconst Dashboard = () => {\n  \n  const configurationContext = useConfiguratorFormContext();\n  const localStorageContext = useLocalStorageContext();\n  const apiContextPara = useApiContextPara()\n  const apiContextRC = useApiContextRC()\n\n  const {paraID, paraHeadInfo} =apiContextPara;\n  const {coretimeSchedule, paraHead, paraCodeHash, paraStatus} = apiContextRC;\n\n  const coretimeLeft = coretimeSchedule.filter(val => val.paraId = paraID).reduce((acc, val) => acc + val.amount, 0)\n\n  const paraNodes = localStorageContext.network?.paras?.[paraID]?.map(node =>{\n    return {...node, address: node.account.address}\n  }).sort((node1, node2) => node1.name > node2.name)\n\n  // STATE MANAGEMENT\n  const [toast, setToast] = useState(0)\n  const toaster = useRef()\n\n  const handleCopyClick = () => {\n    navigator.clipboard.writeText(paraHead)\n    const message = (\n      <CToast autohide={true} visible={true} color=\"success\" className=\"text-white align-items-center\">\n        <div className=\"d-flex\">\n          <CToastBody>Copied to Clipboard!</CToastBody>\n          <CToastClose className=\"me-2 m-auto\" white />\n        </div>\n      </CToast>\n    )\n    setToast(message)\n  }\n\n  const handleCancelDeployment = useCallback(() => {\n    //this is not hooked to the UI\n    cancelDeployment({configurationContext, localStorageContext, apiContextPara, apiContextRC})\n  })\n\n\n  const blockItems = paraHeadInfo ? paraHeadInfo.slice(0,10) : []\n\n  return (\n    <CContainer>\n      <CRow className='d-flex align-items-center mb-4'>\n        <CCol xl={{span : 10}}>\n          <h3>Project X</h3>\n        </CCol>\n        <CCol xl={{span: 2}} className='d-flex justify-content-end pe-5'>\n          <CIcon className=\"text-danger\" size=\"xl\" icon={cilExitToApp} />\n        </CCol>\n      </CRow>\n      <CRow className='d-flex' xl={{ gutterX: 5 }}>\n        <CCol className='mb-2' xl={{ span: 5}}>\n          <CRow className='d-flex justify-content-between mb-2'>\n              <CCard style={{width:\"49%\"}}>\n                <CCardBody>\n                  <CCardTitle>ParachainID</CCardTitle>\n                  <CCardText>\n                    {paraID ? paraID : \"\"}\n                  </CCardText>\n                </CCardBody>\n              </CCard>\n              <CCard style={{width:\"49%\"}}>\n                <CCardBody>\n                  <CCardTitle className='d-flex align-items-center'>\n                    <CCol md={10}>\n                      <CPopover className={'fw-lighter'} content=\"Remaining Coretime credits\" placement=\"top\" trigger={['hover', 'focus']}>\n                        <span className=\"d-inline-block\" tabIndex={0}>\n                          Coretime\n                        </span>\n                      </CPopover>\n                    </CCol>\n                    <CCol md={2} className='d-flex justify-content-end'>\n                      <Link to='/coretime'>\n                        <CIcon size='lg' className=\"text-dark\" icon={cilPlus} />\n                      </Link>\n                    </CCol>\n                  </CCardTitle>\n                  <CCardText>\n                    {paraStatus === 'Onboarding'? paraStatus : coretimeLeft ? coretimeLeft : \"\"}\n                  </CCardText>\n                </CCardBody>\n              </CCard>\n          </CRow>\n          <CRow className='mb-2'>\n            <CCard>\n              <CCardBody>\n                <CCardTitle className='d-flex align-items-center'>\n                  <CCol md={10}>\n                    <CPopover className={'fw-lighter'} content=\"Latest head of the parachain stored on the relaychain.\" placement=\"top\" trigger={['hover', 'focus']}>\n                      <span className=\"d-inline-block \" tabIndex={0}>\n                        Parachain Head\n                      </span>\n                    </CPopover>\n                  </CCol>\n                  <CCol md={2} className='d-flex justify-content-end align-items-center align-items-center'>\n                      <CButton color=\"link\" className='text-nowrap pe-0' onClick={() => handleCopyClick()}>\n                        <CIcon size='lg' className=\"text-dark\" icon={cilCopy} />\n                      </CButton>\n                      <CToaster ref={toaster} push={toast} placement=\"top-end\" />\n                  </CCol>\n                </CCardTitle>\n                <CCardText>\n                  {paraHead ? cutHash(paraHead) : \"\"}\n                </CCardText>\n              </CCardBody>\n            </CCard>\n          </CRow>\n          <CRow className='mb-2'>\n            <CCard>\n              <CCardBody>\n                <CCardTitle className='d-flex align-items-center'>\n                  <CCol md={10}>\n                  <CPopover className={'fw-lighter'} content=\"Hash of the parachain code stored on the relaychain.\" placement=\"top\" trigger={['hover', 'focus']}>\n                    <span className=\"d-inline-block\" tabIndex={0}>\n                      Parachain Code Hash \n                    </span>\n                  </CPopover>\n                  </CCol>\n                  <CCol md={2} className='d-flex justify-content-end align-items-center align-items-center'>\n                      <ExportWasm wasmHash={paraCodeHash} paraID={paraID} />\n                      <Link to='/runtime-upgrade'>\n                        <CIcon size='lg' className=\"text-dark\" icon={cilCog} />\n                      </Link>\n                  </CCol>\n                </CCardTitle>\n                {/* <CCardSubtitle className=\"mb-2 text-medium-emphasis\">ID of Parachain on the Relaychain.</CCardSubtitle> */}\n                <CCardText>\n                  {paraCodeHash ? paraCodeHash : \"\"}\n                </CCardText>\n              </CCardBody>\n            </CCard>\n          </CRow>\n        </CCol>\n        <CCol className='mb-2' xl={{ span: 7 }}>\n          <CRow>\n            <CCard>\n              <CCardBody className={'overflow-scroll'}>\n                <CCardTitle>Recent Parachain Blocks</CCardTitle>\n                <CTable columns={blockColumns} items={blockItems} />\n              </CCardBody>\n            </CCard>\n          </CRow>\n        </CCol>\n      </CRow>\n      <CRow className='mb-4'>\n        <CCard>\n          <CCardBody className={'overflow-scroll'}>\n            <CCardTitle>Collator Nodes</CCardTitle>\n            <CTable columns={collatorsColumns} items={paraNodes ? paraNodes : []} />\n          </CCardBody>\n        </CCard>\n      </CRow>\n    </CContainer>\n  )\n}\n\nexport default Dashboard\n","export const cancelDeployment = async ({configurationContext, localStorageContext, apiContextPara, apiContextRC}) => {\n    console.log('running')\n    const response = await fetch(`${process.env.REACT_APP_API_URL}/network/stop`, {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'\n        }\n    });\n\n    const data = await response.json();\n    localStorageContext.setNetworkStatus(data.result);\n    \n    if (data.result === 'OK') {\n        localStorageContext.restart();\n        configurationContext.restartForm();\n        apiContextPara.cleanupState();\n        apiContextRC.cleanupState();\n    } else {\n        // setStateStatus({executing: 'failed', status: 'danger', message: 'Configuration Submission Failed'});\n    }\n    \n    return data;\n    \n}","import PropTypes from 'prop-types'\nimport React, { useEffect, useState, createRef } from 'react'\nimport classNames from 'classnames'\nimport { CRow, CCol, CCard, CCardHeader, CCardBody } from '@coreui/react'\nimport { rgbToHex } from '@coreui/utils'\nimport { DocsLink } from 'src/components'\n\nconst ThemeView = () => {\n  const [color, setColor] = useState('rgb(255, 255, 255)')\n  const ref = createRef()\n\n  useEffect(() => {\n    const el = ref.current.parentNode.firstChild\n    const varColor = window.getComputedStyle(el).getPropertyValue('background-color')\n    setColor(varColor)\n  }, [ref])\n\n  return (\n    <table className=\"table w-100\" ref={ref}>\n      <tbody>\n        <tr>\n          <td className=\"text-medium-emphasis\">HEX:</td>\n          <td className=\"font-weight-bold\">{rgbToHex(color)}</td>\n        </tr>\n        <tr>\n          <td className=\"text-medium-emphasis\">RGB:</td>\n          <td className=\"font-weight-bold\">{color}</td>\n        </tr>\n      </tbody>\n    </table>\n  )\n}\n\nconst ThemeColor = ({ className, children }) => {\n  const classes = classNames(className, 'theme-color w-75 rounded mb-3')\n  return (\n    <CCol xs={12} sm={6} md={4} xl={2} className=\"mb-4\">\n      <div className={classes} style={{ paddingTop: '75%' }}></div>\n      {children}\n      <ThemeView />\n    </CCol>\n  )\n}\n\nThemeColor.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n}\n\nconst Colors = () => {\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardHeader>\n          Theme colors\n          <DocsLink href=\"https://coreui.io/docs/utilities/colors/\" />\n        </CCardHeader>\n        <CCardBody>\n          <CRow>\n            <ThemeColor className=\"bg-primary\">\n              <h6>Brand Primary Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-secondary\">\n              <h6>Brand Secondary Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-success\">\n              <h6>Brand Success Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-danger\">\n              <h6>Brand Danger Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-warning\">\n              <h6>Brand Warning Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-info\">\n              <h6>Brand Info Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-light\">\n              <h6>Brand Light Color</h6>\n            </ThemeColor>\n            <ThemeColor className=\"bg-dark\">\n              <h6>Brand Dark Color</h6>\n            </ThemeColor>\n          </CRow>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Colors\n","import React from 'react'\nimport { CCard, CCardHeader, CCardBody } from '@coreui/react'\nimport { DocsLink } from 'src/components'\n\nconst Typography = () => {\n  return (\n    <>\n      <CCard className=\"mb-4\">\n        <CCardHeader>\n          Headings\n          <DocsLink href=\"https://coreui.io/docs/content/typography/\" />\n        </CCardHeader>\n        <CCardBody>\n          <p>\n            Documentation and examples for Bootstrap typography, including global settings,\n            headings, body text, lists, and more.\n          </p>\n          <table className=\"table\">\n            <thead>\n              <tr>\n                <th>Heading</th>\n                <th>Example</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h1&gt;&lt;/h1&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h1\">h1. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h2&gt;&lt;/h2&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h2\">h2. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h3&gt;&lt;/h3&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h3\">h3. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h4&gt;&lt;/h4&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h4\">h4. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h5&gt;&lt;/h5&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h5\">h5. Bootstrap heading</span>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <p>\n                    <code className=\"highlighter-rouge\">&lt;h6&gt;&lt;/h6&gt;</code>\n                  </p>\n                </td>\n                <td>\n                  <span className=\"h6\">h6. Bootstrap heading</span>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Headings</CCardHeader>\n        <CCardBody>\n          <p>\n            <code className=\"highlighter-rouge\">.h1</code> through\n            <code className=\"highlighter-rouge\">.h6</code>\n            classes are also available, for when you want to match the font styling of a heading but\n            cannot use the associated HTML element.\n          </p>\n          <div className=\"bd-example\">\n            <p className=\"h1\">h1. Bootstrap heading</p>\n            <p className=\"h2\">h2. Bootstrap heading</p>\n            <p className=\"h3\">h3. Bootstrap heading</p>\n            <p className=\"h4\">h4. Bootstrap heading</p>\n            <p className=\"h5\">h5. Bootstrap heading</p>\n            <p className=\"h6\">h6. Bootstrap heading</p>\n          </div>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <div className=\"card-header\">Display headings</div>\n        <div className=\"card-body\">\n          <p>\n            Traditional heading elements are designed to work best in the meat of your page content.\n            When you need a heading to stand out, consider using a <strong>display heading</strong>\n            —a larger, slightly more opinionated heading style.\n          </p>\n          <div className=\"bd-example bd-example-type\">\n            <table className=\"table\">\n              <tbody>\n                <tr>\n                  <td>\n                    <span className=\"display-1\">Display 1</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-2\">Display 2</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-3\">Display 3</span>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <span className=\"display-4\">Display 4</span>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Inline text elements</CCardHeader>\n        <CCardBody>\n          <p>\n            Traditional heading elements are designed to work best in the meat of your page content.\n            When you need a heading to stand out, consider using a <strong>display heading</strong>\n            —a larger, slightly more opinionated heading style.\n          </p>\n          <div className=\"bd-example\">\n            <p>\n              You can use the mark tag to <mark>highlight</mark> text.\n            </p>\n            <p>\n              <del>This line of text is meant to be treated as deleted text.</del>\n            </p>\n            <p>\n              <s>This line of text is meant to be treated as no longer accurate.</s>\n            </p>\n            <p>\n              <ins>This line of text is meant to be treated as an addition to the document.</ins>\n            </p>\n            <p>\n              <u>This line of text will render as underlined</u>\n            </p>\n            <p>\n              <small>This line of text is meant to be treated as fine print.</small>\n            </p>\n            <p>\n              <strong>This line rendered as bold text.</strong>\n            </p>\n            <p>\n              <em>This line rendered as italicized text.</em>\n            </p>\n          </div>\n        </CCardBody>\n      </CCard>\n      <CCard className=\"mb-4\">\n        <CCardHeader>Description list alignment</CCardHeader>\n        <CCardBody>\n          <p>\n            Align terms and descriptions horizontally by using our grid system’s predefined classes\n            (or semantic mixins). For longer terms, you can optionally add a{' '}\n            <code className=\"highlighter-rouge\">.text-truncate</code> class to truncate the text\n            with an ellipsis.\n          </p>\n          <div className=\"bd-example\">\n            <dl className=\"row\">\n              <dt className=\"col-sm-3\">Description lists</dt>\n              <dd className=\"col-sm-9\">A description list is perfect for defining terms.</dd>\n\n              <dt className=\"col-sm-3\">Euismod</dt>\n              <dd className=\"col-sm-9\">\n                <p>\n                  Vestibulum id ligula porta felis euismod semper eget lacinia odio sem nec elit.\n                </p>\n                <p>Donec id elit non mi porta gravida at eget metus.</p>\n              </dd>\n\n              <dt className=\"col-sm-3\">Malesuada porta</dt>\n              <dd className=\"col-sm-9\">Etiam porta sem malesuada magna mollis euismod.</dd>\n\n              <dt className=\"col-sm-3 text-truncate\">Truncated term is truncated</dt>\n              <dd className=\"col-sm-9\">\n                Fusce dapibus, tellus ac cursus commodo, tortor mauris condimentum nibh, ut\n                fermentum massa justo sit amet risus.\n              </dd>\n\n              <dt className=\"col-sm-3\">Nesting</dt>\n              <dd className=\"col-sm-9\">\n                <dl className=\"row\">\n                  <dt className=\"col-sm-4\">Nested definition list</dt>\n                  <dd className=\"col-sm-8\">\n                    Aenean posuere, tortor sed cursus feugiat, nunc augue blandit nunc.\n                  </dd>\n                </dl>\n              </dd>\n            </dl>\n          </div>\n        </CCardBody>\n      </CCard>\n    </>\n  )\n}\n\nexport default Typography\n","import React, {useState, useRef} from 'react'\n\nimport {CButton, CModalHeader, CModalTitle, CModalBody, CModalFooter, CFormInput, CRow, CCol, CForm} from '@coreui/react'\n\nimport { useApiContextRC } from '../../contexts/ConnectRelayContext'\nimport { useConfiguratorFormContext } from '../../contexts/ConfiguratorFormContext'\n\nconst GetMore = ({setVisible, minBlock}) => {\n    const { coretime, setCoretime } = useConfiguratorFormContext();\n    const { rcHeadInfo, scheduleAdditional } = useApiContextRC();\n    \n    const [validWhen, setValidWhen] = useState(true)\n    const [validAmount, setValidAmount] = useState(true)\n    const [validEvery, setValidEvery] = useState(true)\n    const [validated, setValidated] = useState(true)\n\n    const handleWhenChange = (event) => {\n        let proposedWhen = Math.floor(Number(event.target.valueAsNumber));\n        if(proposedWhen < (minBlock + 10)){\n            setValidWhen(false)\n        } else {\n            setValidWhen(true)\n        }\n        setCoretime({...coretime, when: proposedWhen})\n    }\n\n    const handleAmountChange = (event) => {\n        let amount = Math.floor(Number(event.target.valueAsNumber));\n        if (event.target.valueAsNumber > 10000){\n          setValidAmount(false)\n        } else {\n          setValidAmount(true)\n        }\n        setCoretime({...coretime, amount})\n      }\n    \n      const handleEveryChange = (event) => {\n        let every = Math.floor(Number(event.target.valueAsNumber));\n        if (event.target.valueAsNumber > 1000){\n          setValidEvery(false)\n        } else {\n          setValidEvery(true)\n        }\n        setCoretime({...coretime, every})\n      }\n    \n      const handleSubmit = async (event) => {\n        const form = event.currentTarget\n        if (!form.checkValidity()) {\n          event.preventDefault()\n          event.stopPropagation()\n        } else {\n          event.preventDefault()\n          await scheduleAdditional()\n          setVisible(false)\n        }\n        setValidated(true)\n      }\n\n    return(\n        <CForm className=\"needs-validation\" noValidate onSubmit={handleSubmit} validated={validated}>\n        <CModalHeader>\n              <CModalTitle id=\"VerticallyCenteredExample\">Get more Coretime</CModalTitle>\n            </CModalHeader>\n            <CModalBody>\n                    <CFormInput \n                    className='fw-lighter mb-4'\n                    onChange={() => handleWhenChange(event)}\n                    min={minBlock + 10}\n                    invalid={!validWhen} \n                    step={1} \n                    required\n                    type=\"number\" \n                    value={coretime.when ? coretime.when : \"\"} \n                    size=\"lg\" \n                    aria-label=\"lg input example\"\n                    feedbackInvalid={validWhen ? \"\" : `Needs to be at least ${minBlock + 10}`}\n                    label={`Execution Block. Needs to be more than maximum between scheduled and current Relaychain head. Earliest possible (${minBlock + 10}).`}\n                    />\n                    <CFormInput \n                    className='fw-lighter mb-4'\n                      max={10000}\n                      onChange={() => handleAmountChange(event)}\n                      invalid={!validAmount} \n                      step={1} \n                      type=\"number\" \n                      value={coretime.amount ? coretime.amount : \"\"} \n                      size=\"lg\" \n                      aria-label=\"lg input example\"\n                      required\n                      feedbackInvalid={validAmount ? \"\" : \"Please make it an integer below 10_000\"}\n                      label=\"Amount. Parachain Blocks to be validated\"\n                    />\n                    <CFormInput\n                    className='fw-lighter mb-4' \n                    max={1000}\n                    step={1}\n                    onChange={(event) => handleEveryChange(event)}\n                    invalid={!validEvery} \n                    label=\"Frequency. Every how many Relaychan Blocks should Parachain blocks be validated\"\n                    type=\"number\"\n                    value={coretime.every ? coretime.every : \"\"}\n                    size=\"lg\"\n                    aria-label=\"lg input example\"\n                    required\n                    feedbackInvalid={validEvery ? \"\" : \"Please make it an integer below 1_000\"}\n                    />\n            </CModalBody>\n            <CModalFooter>\n              <CButton className='fw-lighter' variant=\"outline\" color=\"dark\" onClick={() => setVisible(false)}> Close </CButton>\n              <CButton className='fw-lighter' variant=\"outline\" type='submit' color=\"success\">Submit</CButton>\n            </CModalFooter>\n        </CForm>\n    )\n\n}\n\nexport default GetMore\n","import React, {useState, useRef, useEffect} from 'react'\nimport {CRow, CCol, CCard, CCardBody, CCardTitle, CCardText, CContainer, CCardFooter, CToast, CToaster, CToastBody, CButton, CModal, CSpinner, CPopover} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilPlus, cilWallet, cilAlarm, cilLoopCircular, cilXCircle } from '@coreui/icons'\n\nimport GetMore from './GetMore'\n\n//CONTEXT\nimport { useApiContextRC } from '../../contexts/ConnectRelayContext'\nimport { useApiContextPara } from '../../contexts/ConnectParaContext'\n\n//UTILITIES\nimport { cutHash } from '../../utilities/handleHash'\n\nconst Coretime = () => {\n  //STATE MANAGEMENT\n  const [toastCopy, setToastCopy] = useState(0)\n  const [visible, setVisible] = useState(false)\n  const [cancellingID, setCancellingID] = useState(\"\")\n\n  const toaster = useRef()\n  const {paraID} = useApiContextPara();\n  const {coretimeSchedule, cancelScheduled, statusAditional, statusCancel, paraStatus, rcHeadInfo} = useApiContextRC();\n\n  const paraCoretime = coretimeSchedule?.filter(val => val.paraId = paraID).sort((ticket1, ticket2) => ticket1.block - ticket2.block)\n  const lastBlockScheduled = paraCoretime.length ? ( paraCoretime[paraCoretime.length - 1].block + paraCoretime[paraCoretime.length - 1].amount * paraCoretime[paraCoretime.length - 1].frequency) : 0; \n  const minPossibleBlock = Math.max(lastBlockScheduled, parseInt(rcHeadInfo))\n  \n  const handleCopyClick = (id) => {\n    navigator.clipboard.writeText(id)\n    const message = (\n      <CToast autohide={true} visible={true} color=\"success\" className=\"text-white align-items-center\">\n        <div className=\"d-flex\">\n          <CToastBody>Copied to Clipboard!</CToastBody>\n        </div>\n      </CToast>\n    )\n    setToastCopy(message)\n  }\n\n  const handleDeleteTicket = async (id) => {\n    setCancellingID(id)\n    await cancelScheduled(id)\n  }\n  \n  return (\n    <CContainer>\n      <CRow className='d-flex align-items-center mb-4'>\n        <CCol xl={{span : 10}}>\n          <h3>Coretime Credit Tickets</h3>\n        </CCol>\n        <CCol xl={{span: 2}} className='d-flex justify-content-end pe-5'>\n          {\n            (statusAditional === 'Ready' || statusAditional === 'Broadcast' || paraStatus === 'Onboarding') \n              ? <CSpinner color=\"secondary\" />\n              :(\n                <CButton color=\"link\" className='text-nowrap pe-0' onClick={() => setVisible(!visible)}>\n                  <CIcon className=\"text-dark\" size=\"xl\" icon={cilPlus} />\n                </CButton>    \n              )\n          }\n          <CModal alignment=\"center\" visible={visible} onClose={() => setVisible(false)} aria-labelledby=\"VerticallyCenteredExample\">\n            <GetMore setVisible={setVisible} minBlock={minPossibleBlock}/>\n          </CModal>\n        </CCol>\n      </CRow>\n      <CRow xl={{ cols: 3, gutter: 4 }} xs={{cols:1, gutter: 2}} md={{cols:2, gutter: 2}}>\n        {paraCoretime && paraCoretime.map(coretimeTicket =>{\n          return (\n          <CCol key={coretimeTicket.schedulerId} xs>\n            <CCard>\n              <CCardBody>\n                <CCardTitle className='d-flex align-items-center'>\n                  <CCol md={10}>\n                    Coretime Ticket\n                  </CCol>\n                  <CCol md={2} className='d-flex justify-content-end'>\n                    { (!statusCancel.length) ?\n                      <CButton color=\"link\" className='text-nowrap pe-0' onClick={() => handleDeleteTicket(coretimeTicket.schedulerId)}>\n                        <CIcon size='xl' className=\"text-danger\" icon={cilXCircle} />\n                      </CButton> \n                      : (coretimeTicket.schedulerId === cancellingID) ?\n                      <CButton color=\"link\" className='text-nowrap pe-0'>\n                        <CSpinner size='sm' style={{ width: '1.5rem', height: '1.5rem'}} color=\"danger\" />\n                      </CButton>\n                      :\n                      <CButton color=\"link\" className='text-nowrap pe-0'>\n                        <CIcon size='xl' className=\"text-danger\" icon={cilXCircle} />\n                      </CButton> \n                    }\n                  </CCol>\n                </CCardTitle>\n                  <CContainer>\n                    <CRow className='mb-2'>\n                      <CCol xl={{span: 6}}>\n                        <CPopover className={'fw-lighter'} content=\"Next Execution [Relaychain Block]\" placement=\"top\" trigger={['hover', 'focus']}>\n                          <CIcon className='mb-1' size=\"xl\" icon={cilAlarm}/>  \n                        </CPopover>\n                      </CCol>\n                      <CCol className='fs-5' xl={{span: 6}}>\n                        {coretimeTicket && coretimeTicket.block}\n                      </CCol>\n                    </CRow>\n                    <CRow className='mb-2'>\n                      <CCol xl={{span: 6}}>\n                        <CPopover className={'fw-lighter'} content=\"Execution Frequency\" placement=\"top\" trigger={['hover', 'focus']}>\n                          <CIcon className='mb-1' size=\"xl\" icon={cilLoopCircular}/>  \n                        </CPopover>\n                      </CCol>\n                      <CCol className='fs-5' xl={{span: 6}}>\n                        {coretimeTicket && coretimeTicket.frequency}\n                      </CCol>\n                    </CRow>\n                    <CRow className='mb-2'>\n                      <CCol xl={{span: 6}}>\n                        <CPopover className={'fw-lighter'} content=\"Credits Left on Ticket\" placement=\"top\" trigger={['hover', 'focus']}>\n                          <CIcon className='mb-1' size=\"xl\" icon={cilWallet}/>  \n                        </CPopover>\n                      </CCol>\n                      <CCol className='fs-5' xl={{span: 6}}>\n                        {coretimeTicket && coretimeTicket.amount}\n                      </CCol>\n                    </CRow>\n                  </CContainer>\n              </CCardBody>\n              <CCardFooter onClick={() => handleCopyClick(coretimeTicket.schedulerId)}>\n                <CToaster ref={toaster} push={toastCopy} placement=\"top-end\" />\n                Ticket ID: {coretimeTicket && cutHash(coretimeTicket.schedulerId)}\n              </CCardFooter>\n            </CCard>\n          </CCol>\n          )\n        })}\n      </CRow>\n    </CContainer>\n  )\n}\n\nexport default Coretime\n","import React, {useState, useEffect} from 'react'\nimport { CButton    } from '@coreui/react'\nimport './ConsoleOutput.css';\nimport { createTestPairs } from '@polkadot/keyring'\nimport { ChopsticksProvider, setStorage, setup } from '@acala-network/chopsticks-core'\nimport { IdbDatabase } from '@acala-network/chopsticks-db/browser'\nimport { ApiPromise } from '@polkadot/api'\nimport { useLocalStorageContext } from '../../contexts/LocalStorageContext'\nimport { useApiContextPara } from '../../contexts/ConnectParaContext'\nimport runtime_path from './devnet.wasm'\nimport { cilCloudDownload} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\n\nconst RuntimeUpgrade = () => {\n  const {network} = useLocalStorageContext();\n  const {paraID, paraHeadInfo, tokenSymbol} = useApiContextPara();\n\tconst [chainLoading, setChainLoading] = useState(false)\n  const [blocks, setBlocks] = useState([])\n\tconst [config, setConfig] = useState({\n\t\tendpoint: 'ws://127.0.0.1:50877',\n\t\tblock: 10,\n\t})\n  const [chopsticksApi, setChopsticksApi] = useState(null)\n  const [chain, setChain] = useState(null)\n  const [fileContent, setFileContent] = useState('');\n  const [loading, setLoading] = useState(false);\n  const { alice, bob } = createTestPairs()\n  const [runtimeVersions, setRuntimeVersions] = useState([])\n  const [enableRuntimeUpgrade, setEnableRuntimeUpgrade] = useState(true)\n  const [lines, setLines] = useState([]);\n  const [runtime, setRuntime] = useState(null);\n\n  useEffect(() => {\n    fetch(runtime_path)\n        .then(response => response.text())\n        .then(text => setRuntime(text))\n        .catch(error => console.error('Error loading WASM text:', error));\n}, []);\n  \n\n  const handleFileChange = (event) => {\n      const file = event.target.files[0];\n      if (!file) {\n          return;\n      }\n\n      setLoading(true);\n      const reader = new FileReader();\n\n      reader.onload = (e) => {\n          setFileContent(e.target.result);\n          setLoading(false);\n      };\n\n      reader.onerror = (e) => {\n          console.error('Error reading file:', e);\n          setLoading(false);\n      };\n\n      reader.readAsText(file);\n  };\n\n\n\n\n  const setupChain = async () => {\n    const endpoint = network?.paras?.[paraID]?.[0]?.wsUri;\n\t\tsetChainLoading(true)\n      const  chain = await setup({\n        endpoint,\n        block: paraHeadInfo[0].head,\n        mockSignatureHost: true,\n        db: new IdbDatabase('cache'),\n      })\n      setChain(chain)\n\n\t\tconst provider = new ChopsticksProvider(chain)\n\t\tconst api = new ApiPromise({ provider, noInitWarn: true })\n\t\tawait api.isReadyOrError\n    setChopsticksApi(api)\n\n    let specVersion = await api.rpc.state.getRuntimeVersion()\n\n    let spec = {runtime: specVersion.toJSON().specVersion, block:chain.head.number}\n    setRuntimeVersions([spec])\n\n\t\tsetChainLoading(false)\n\t\tsetBlocks([{ number: chain.head.number, hash: chain.head.hash }])\n    return api\n\t}\n\n\n\n   const runtimeUpgrade = async () => {\n    setEnableRuntimeUpgrade(true);\n    let bob_balance = await chopsticksApi.query.system.account(bob.address)\n    setLines((old) => [...old,`Bob balance before runtime upgrade: ${bob_balance.data.free}`])\n    setLines((old) => [...old,`Calling missing pallet DoSomething before runtime upgrade:`])\n    try {\n      await chopsticksApi.tx.newPallet.doSomething(10).signAndSend(alice)\n    } catch(e){\n      setLines((old) => [...old,`               ${e.message}}`])\n    }\n\n    setLines((old) => [...old,`-------------`,`Executing Runtime upgrade to Spec version 1010...`])\n    let res = await chopsticksApi.tx.sudo.sudoUncheckedWeight(chopsticksApi.tx.system.setCode(runtime), (0,0)).signAndSend(alice)\n    setLines((old) => [...old,`Runtime upgrade to Spec version 1010 executed ${res.toHex()}`])\n    setLines((old) => [...old,`Executing 4 blocks...`])\n    await chain.newBlock()\n    await chain.newBlock()\n    await chain.newBlock()\n    setLines((old) => [...old,`Block ${chain.head.number} / Hash: ${chain.head.hash} executed`])\n \n\n    let specVersion = await chopsticksApi.rpc.state.getRuntimeVersion()\n    setLines((old) => [...old,`-------------`,`Spec Version (Runtime Version): ${specVersion.toJSON().specVersion}`])\n\n    res =  await chopsticksApi.tx.balances.transferKeepAlive(bob.address, 1e12).signAndSend(alice)\n\n\n\n    setLines((old) => [...old,`Alice transfers 1 ${tokenSymbol} to Bob / Hash: ${res.toHex()}`])\n    await chain.newBlock()\n    setLines((old) => [...old,`Block ${chain.head.number} / Hash: ${chain.head.hash} executed`])\n     bob_balance = await chopsticksApi.query.system.account(bob.address)\n    setLines((old) => [...old,`Bob balance after: ${bob_balance.data.free}`]) \n    setLines((old) => [...old,`-------------`,`Executing new pallet call DoSomething`])\n    res = await chopsticksApi.tx.newPallet.doSomething(10).signAndSend(alice)\n\n    setLines((old) => [...old,`New pallet call DoSomething(10) executed: ${res.toHex()}`])\n    await chain.newBlock()\n    setLines((old) => [...old,`Block ${chain.head.number} / Hash: ${chain.head.hash} executed`])\n    let storage_value = await chopsticksApi.query.newPallet.something()\n    setLines((old) => [...old,`Querying storage value of new pallet: ${storage_value.value}`])\n    setLines((old) => [...old,`---------`,`Dry Runtime upgrade to Spec version 1011 SUCCESSFUL`])\n\n  }\n\n  const fork =  async () => {\n    setLines([])\n      const api =await setupChain()\n      setLines((old) => [...old, `Forking ParaId: ${paraID} from last block ${paraHeadInfo[0].head}...`])\n      let specVersion = await api.rpc.state.getRuntimeVersion()\n      setLines((old) => [...old,`-------------`,`Spec Version (Runtime Version): ${specVersion.toJSON().specVersion}`])     \n      setEnableRuntimeUpgrade(false);\n  }\n\n  const exportWasm = () => {\n    // Create a Blob from the WASM content\n    const blob = new Blob([runtime], { type: 'text/plain;charset=utf-8' });\n    // Create a URL for the Blob\n    const url = URL.createObjectURL(blob);\n\n    // Create a temporary anchor element and trigger download\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'devnet-1010.wasm'; // Set the file name for download\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n\n    // Clean up the URL\n    URL.revokeObjectURL(url);\n};\n\n\n  return (\n    <>\n      <h1>\n        Runtime Upgrade Dry-Run\n      </h1>\n      <br />\n\n              <p>This tool contains already a newer version of a runtime for the <strong>Extended Parachain Template</strong> (This new runtime can be downloaded).</p>\n              <p>This new runtime upgrades the spec version <strong>1000</strong> to <strong>1010</strong> and it adds a new pallet called <strong>NewPallet.</strong></p>\n              <p className='mt-2'><strong>Fork Button:</strong> Forks the chain from the last best block registered and show the spec version for that block.</p>\n              <p className='mt-2'><strong>Dry-Run Runtime Upgrade:</strong> Performs the runtime upgrade and a few validations.</p>\n      \n\n        <CButton className='fw-light'  onClick={() => fork()} color=\"success\" >Fork</CButton>\n        <CButton className='fw-light'  disabled={enableRuntimeUpgrade} onClick={() => runtimeUpgrade()} color=\"success\" style={{marginLeft: '10px'} } >Dry-Run Runtime Upgrade</CButton>\n        <CButton color=\"link\" className='text-nowrap pe-1 d-inline-flex'  >\n            <CIcon onClick={() => exportWasm()} className='me-2 text-dark'  size='lg' icon={cilCloudDownload}/>\n        </CButton>\n      {lines.length > 0 &&       <div className=\"console-output\">\n            {lines.map((line, index) => (\n                <div key={index}>{line}</div>\n            ))}\n        </div>}\n\n    </>\n\n  )\n}\n\nexport default RuntimeUpgrade\n","import React from 'react'\nimport { CContainer, CCol, CRow, CButton } from '@coreui/react'\nimport {Link } from \"react-router-dom\";\n\nconst Empty = () => {\n\n  return (\n    <CContainer fluid>\n        <CRow className=\"align-items-center\"> \n          <CCol>\n            <h1 style={{\"textAlign\":\"center\", \"marginTop\": \"4rem\", \"marginBottom\": \"4rem\", \"fontWeight\":\"200\"}}>No active deployment</h1>\n          </CCol>\n        </CRow>\n        <CRow className=\"align-items-center\">\n          {/* <CButton component=\"a\" href=\"/configure\" className=\"col-3 mx-auto\" color=\"success\" size=\"lg\" variant=\"outline\" style={{\"fontWeight\":\"200\"}}>Start Building</CButton> */}\n          <Link to=\"/configure\" style={{\"display\":\"contents\"}}>\n            <CButton className=\"col-3 mx-auto\" color=\"success\" size=\"lg\" variant=\"outline\" style={{\"fontWeight\":\"200\"}}>\n              Start Building\n            </CButton>\n          </Link>\n        </CRow>\n    </CContainer>\n  )\n}\n\nexport default Empty\n","const submit = async ({setStateStatus,localStorageContext, configurationContext}) => {\n    const {collators, runtime, coretime  } = configurationContext;\n    const {paraId, ss58, tokenSymbol, decimals} = runtime.specs;\n    let jsonData = {\n        para_id: paraId,\n        template: runtime.template.value,\n        collators_count: collators,\n        properties: {\n            symbol: tokenSymbol,\n            ss58,\n            decimals,\n        },\n    }\n    \n    setStateStatus({executing: 'executing', status: 'info', message: 'Submitting Configuration'});\n    \n    const response = await fetch(`${process.env.REACT_APP_API_URL}/network`, {\n        method: 'POST',\n        headers: {\n        'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(jsonData)\n    });\n    \n    const data = await response.json();\n    localStorageContext.setNetworkStatus(data.result);\n    \n    if (data.result === 'OK') {\n        localStorageContext.setNetwork(data.network);\n        localStorageContext.setCoretime({...coretime, scheduled:false});\n        localStorageContext.setRuntime(jsonData);\n        configurationContext.restartForm();\n        setStateStatus({executing: 'success', status: 'success', message: 'Configuration Submitted'});\n    } else {\n        setStateStatus({executing: 'failed', status: 'danger', message: 'Configuration Submission Failed'});\n    }\n    \n    return data;\n}\n\nexport default submit;","import {React, useState, useCallback, useEffect} from 'react'\nimport { CContainer, CCol, CRow, CCard, CCardBody, CCardText, CCardTitle, CAvatar, CButton, CSpinner } from '@coreui/react'\nimport {Link, useNavigate} from 'react-router-dom'\nimport {cilArrowCircleRight} from '@coreui/icons'\nimport CIcon from '@coreui/icons-react'\n\nimport submit from './submit'\n\nimport { useConfiguratorFormContext } from 'src/contexts/ConfiguratorFormContext'\nimport { useLocalStorageContext } from 'src/contexts/LocalStorageContext'\n\n\nconst Configurator = () => {\n  const [formStatus, setStateStatus] = useState({executing: '', status: '', message: ''});\n  const configurationContext = useConfiguratorFormContext();\n  const localStorageContext = useLocalStorageContext();\n  const [ready, setReady] = useState(false);\n\n  const {collators, runtime, coretime } = configurationContext;\n\n  const navigate = useNavigate()\n\n  useEffect(() => {\n    // This function will run after every render (initial render + updates)\n    if (collators && runtime.template && coretime.amount && coretime.every) {\n      setReady(true)\n    }\n    if(formStatus.executing === 'success') {\n      navigate(\"/dashboard\")\n    }\n  }, [collators, runtime, coretime, formStatus]);\n\n  const handleSubmit = useCallback(() => {\n    submit({setStateStatus,localStorageContext, configurationContext })\n  }, [configurationContext,setStateStatus]);\n\n  \n  return (\n    <CContainer fluid >\n      <CCard className=\"mb-3 col-md-10\">\n        <CRow className=\"g-0 p-3\">\n          <CCol md={1} className=\"d-flex justify-content-center align-items-center\">\n            <CAvatar className={runtime.template ? 'text-white fw-light': 'fw-light'} color={runtime.template ? 'success' : 'light'} size=\"xl\">1</CAvatar>\n          </CCol>\n          <CCol md={10}>\n            <CCardBody>\n              <CCardTitle>Select Runtime</CCardTitle>\n              <CCardText>\n                {runtime.template \n                  ? `${runtime.template.name}   \n                     { ParaID: ${runtime.specs.paraId ? runtime.specs.paraId : \"\"};  \n                    TokenSymbol: ${runtime.specs.tokenSymbol ? runtime.specs.tokenSymbol: \"\"};  \n                    SS58: ${runtime.specs.ss58 ? runtime.specs.ss58: \"\"}; \n                    Decimals: ${runtime.specs.decimals ? runtime.specs.decimals: \"\"} } `\n                  : \"Please Select a Runtime\"\n                }\n              </CCardText>\n            </CCardBody>\n          </CCol>\n          <CCol md={1} className=\"d-flex justify-content-center align-items-center\">\n            <Link to='/configure/runtime'>\n              <CIcon size=\"xxl\" className=\"text-secondary\" icon={cilArrowCircleRight} />\n            </Link>\n          </CCol>\n        </CRow>\n      </CCard>\n      <CCard className=\"mb-3 col-md-10\">\n        <CRow className=\"g-0 p-3\">\n          <CCol md={1} className=\"d-flex justify-content-center align-items-center\">\n            <CAvatar className={collators ? 'text-white fw-light': 'fw-light'} color={collators ? 'success' : 'light'} size=\"xl\">2</CAvatar>\n          </CCol>\n          <CCol md={10}>\n            <CCardBody>\n              <CCardTitle>Network Topology</CCardTitle>\n              <CCardText>\n                {collators ? (collators > 1 ? `${collators} Collators` : \"1 Collator\") : \"Please configure Network Topology\"}\n              </CCardText>\n            </CCardBody>\n          </CCol>\n          <CCol md={1} className=\"d-flex justify-content-center align-items-center\">\n            <Link to='/configure/collators'>\n              <CIcon size=\"xxl\" className=\"text-secondary\" icon={cilArrowCircleRight} />\n            </Link>\n          </CCol>\n        </CRow>\n      </CCard>\n      <CCard className=\"mb-3 col-md-10\">\n        <CRow className=\"g-0 p-3\">\n          <CCol md={1} className=\"d-flex justify-content-center align-items-center\">\n            <CAvatar className={coretime.amount ? 'text-white fw-light': 'fw-light'} color={coretime.amount ? 'success' : 'light'} size=\"xl\">3</CAvatar>\n          </CCol>\n          <CCol md={10}>\n            <CCardBody>\n              <CCardTitle>Coretime</CCardTitle>\n              <CCardText>\n                {coretime.amount \n                ? \n                  `Amount: ${coretime.amount}. Frequency: ${coretime.every}.`\n                : \n                  \"Please configure Coretime needs\"}\n              </CCardText>\n            </CCardBody>\n          </CCol>\n          <CCol md={1} className=\"d-flex justify-content-center align-items-center\">\n            <Link to='/configure/coretime'>\n              <CIcon size=\"xxl\" className=\"text-secondary\" icon={cilArrowCircleRight} />\n            </Link>\n          </CCol>\n        </CRow>\n      </CCard>\n      <CRow className=\"g-0 p-3 col-md-10\">\n        <CButton \n          onClick={() => handleSubmit()} \n          disabled={!ready || formStatus.executing === 'executing' || formStatus.status === 'success'} \n          className=\"col-3 mx-auto\" \n          color={ready ? \"success\" : \"danger\"} \n          size=\"lg\" variant=\"outline\" \n          style={{\"fontWeight\":\"200\"}}\n        >\n          Deploy\n          { formStatus.executing === 'executing' && <CSpinner component=\"span\" className='ms-3' size=\"sm\" aria-hidden=\"true\" /> }\n        </CButton>\n      </CRow>\n    </CContainer>\n  )\n}\n\nexport default Configurator\n","import React from 'react'\nimport runtimes from './runtime.json'\nimport {Link} from 'react-router-dom'\nimport { useConfiguratorFormContext } from 'src/contexts/ConfiguratorFormContext'\n\n\nimport { CButton, CCard, CCardImage, CCardBody, CCardFooter, CCardTitle, CCardText, CRow, CCol} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport {cibGithub} from '@coreui/icons'\n\nconst ConfiguratorRuntime = () => {\n\n  const { runtime, setRuntime } = useConfiguratorFormContext();\n\n\n  const handleClick = (runtimeInfo) => {\n    setRuntime((runtime) => ({template: runtimeInfo, specs: runtime.specs}))\n  }\n\n  return (\n    <>\n      <CRow>\n          <CRow xs={{ cols: 1, gutter: 4 }} md={{ cols: 4 }}>\n            {runtimes.map(runtimeInfo => {\n              return (\n                <CCol key={runtimeInfo.id} xs>\n                  <CCard className={(runtime.template && runtimeInfo.id === runtime.template.id) ? 'border-start border-start-4 border-start-success h-100' : 'h-100'}>\n                    <CCardImage orientation=\"top\" src={runtimeInfo.img} />\n                    <CCardBody className='d-flex flex-column justify-content-between'>\n                      <div>\n                      <CCardTitle>{runtimeInfo.name}</CCardTitle>\n                      <CCardText>\n                        {runtimeInfo.shortDescription}\n                      </CCardText >\n                      </div>\n                      <CButton variant=\"outline\" color='dark' className='fw-light mt-2' onClick={() => handleClick(runtimeInfo)}>Use</CButton>\n                    </CCardBody>\n                    <CCardFooter>\n                      <Link target=\"_blank\" to={`${runtimeInfo.github}`}>\n                        <CIcon size=\"lg\" className=\"text-secondary\" icon={cibGithub}/>\n                      </Link>\n                    </CCardFooter>\n                  </CCard>\n                </CCol>\n              )\n            })}\n          </CRow>\n      </CRow>\n      <CRow className='mt-4 mb-2'>\n        <Link className='text-center' to=\"/configure/runtime-specs\">\n          <CButton variant=\"outline\" className='fw-light'>Next</CButton>\n        </Link>\n      </CRow>\n    </>\n  )\n}\n\nexport default ConfiguratorRuntime\n","import React,{useState} from 'react'\nimport { useConfiguratorFormContext } from 'src/contexts/ConfiguratorFormContext'\nimport { useNavigate } from 'react-router-dom';\n\nimport { CButton, CRow, CCol,CFormInput,CForm} from '@coreui/react'\n\nconst ConfiguratorRuntimeSpecs = () => {\n  const [ss58Valid, setSs58Valid] = useState(true)\n  const [paraIdValid, setParaIdValid] = useState(true)\n  const [tokenSymbolValid, setTokenSymbolValid] = useState(true)\n  const [decimalsValid, setDecimalsValid] = useState(true)\n\n  const [validated, setValidated] = useState(true)\n  const { runtime, setRuntime } = useConfiguratorFormContext();\n\n  const navigate = useNavigate()\n\n  const handleAmountChange = (event, max, setter, path) => {\n    const amount = Math.floor(Number(event.target.valueAsNumber));\n    if (event.target.valueAsNumber > max) {\n        setter(false);\n    } else {\n        setter(true);\n        setRuntime(runtime => {\n\n            // Clone the runtime object to avoid direct mutation\n            let newRuntime = JSON.parse(JSON.stringify(runtime));\n\n            \n            // Split the path and reduce it to the specific property\n            path.split('.').reduce((obj, key, index, array) => {\n                if (index === array.length - 1) {\n                    obj[key] = amount;\n                } else {\n                    return obj[key];\n                }\n            }, newRuntime);\n\n            return newRuntime;\n        });\n    }\n};\n\nconst handleTokenSymbolChange = (event, max, setter) => {\n  const value = event.target.value;\n  if (value.length > max) { \n    setter(false);\n  } else {\n    setter(true);\n    setRuntime(runtime => {\n        // Clone the runtime object to avoid direct mutation\n        let newRuntime = JSON.parse(JSON.stringify(runtime));\n        let { template, specs } = newRuntime;\n\n        specs.tokenSymbol = value;\n        return { template, specs };\n    });\n  }\n}\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (!form.checkValidity()) {\n      event.preventDefault()\n      event.stopPropagation()\n    } else {\n      event.preventDefault()\n      navigate(\"/configure\")\n    }\n    setValidated(true)\n  }\n\n  return (\n    <CForm className=\"needs-validation\" noValidate onSubmit={handleSubmit} validated={validated}>\n      <CRow className='d-flex flex-row'>\n            <CRow className='mb-3'>\n              <p>The following is a basic configuration of your runtime parameters.</p>\n              <p><strong>ParaId</strong> refers to the ID your Parachain will have on the Relaychain.</p>\n              <p><strong>ss58 Format</strong> is the prefix allowing to identify an address belonging to this parachain.</p>\n              <p><strong>tokenSymbol</strong> refers to the ticker of the token of this parachain.</p>\n              <p><strong>Decimals</strong> is the amount of decimals for the token of this parachain.</p>\n            </CRow>\n            <CRow>\n              <CCol md={7}>\n                <CFormInput \n                  max={10000}\n                  onChange={() => handleAmountChange(event, 10000, setParaIdValid, 'specs.paraId')}\n                  invalid={!paraIdValid} \n                  step={1} \n                  type=\"number\" \n                  value={runtime?.specs?.paraId ? runtime.specs.paraId : \"\"} \n                  size=\"lg\" \n                  aria-label=\"lg input example\"\n                  required\n                  feedbackInvalid={paraIdValid ? \"\" : \"Please make it an integer between 2_000 and 10_000\"}\n                  label=\"ParaId\"\n                />\n              </CCol>\n            </CRow> \n            <CRow className='mt-4'>\n              <CCol md={7}>\n                <CFormInput \n                  max={100}\n                  step={1}\n                  onChange={() => handleAmountChange(event, 100, setSs58Valid, 'specs.ss58')}\n                  invalid={!ss58Valid} \n                  label=\"ss58 Format\"\n                  type=\"number\"\n                  value={runtime?.specs?.ss58 ? runtime.specs.ss58 : \"\"} \n                  size=\"lg\"\n                  aria-label=\"lg input example\"\n                  required\n                  feedbackInvalid={ss58Valid ? \"\" : \"Please make it an integer below 100\"}\n                />\n              </CCol>\n            </CRow>\n            <CRow className='mt-4'>\n              <CCol md={7}>\n                <CFormInput \n                  max={8}\n                  step={1}\n                  onChange={(event) => handleTokenSymbolChange(event, 8, setTokenSymbolValid)}\n                  invalid={!tokenSymbolValid} \n                  label=\"TokenSymbol\"\n                  type=\"text\"\n                  value={runtime?.specs?.tokenSymbol ? runtime.specs.tokenSymbol : \"\"} \n                  size=\"lg\"\n                  aria-label=\"lg input example\"\n                  required\n                  feedbackInvalid={tokenSymbolValid ? \"\" : \"Please make the len below 8\"}\n                />\n              </CCol>\n            </CRow>\n            <CRow className='mt-4'>\n              <CCol md={7}>\n                <CFormInput \n                  max={30}\n                  step={1}\n                  onChange={(event) => handleAmountChange(event, 1000, setDecimalsValid, 'specs.decimals')}\n                  invalid={!decimalsValid} \n                  label=\"Decimals\"\n                  type=\"number\"\n                  value={runtime?.specs?.decimals ? runtime.specs.decimals : \"\"} \n                  size=\"lg\"\n                  aria-label=\"lg input example\"\n                  required\n                  feedbackInvalid={decimalsValid ? \"\" : \"Please make it an integer below 1_000\"}\n                />\n              </CCol>\n            </CRow>\n      </CRow>\n      <CRow className='mt-4'>\n        <CCol className='d-flex justify-content-center'>\n          <CButton type=\"submit\" variant='outline' color='success' className='fw-light'>Confirm</CButton>\n        </CCol>\n      </CRow>\n    </CForm>\n  );\n}\n\nexport default ConfiguratorRuntimeSpecs\n","import React from 'react'\n\n// Import components directly\nimport Dashboard from './views/dashboard/Dashboard';\nimport Colors from './views/theme/colors/Colors';\nimport Typography from './views/theme/typography/Typography';\n\n//PORTICO\nimport Coretime from './views/coretime/Coretime';\nimport RuntimeUpgrade from './views/runtime-upgrade/RuntimeUpgrade';\nimport Empty from './views/empty/Empty';\nimport Configurator from './views/configurator/Configurator';\nimport ConfiguratorRuntime from './views/configurator-runtime/ConfiguratorRuntime';\nimport ConfiguratorRuntimeSpecs from './views/configurator-runtime/ConfiguratorRuntimeSpecs';\nimport ConfiguratorCollators from './views/configurator-collators/ConfiguratorCollators';\nimport ConfiguratorCoretime from './views/configurator-coretime/ConfiguratorCoretime';\n\n\n\n\nconst routes = [\n  { path: '/', exact: true, name: 'Start Building' , element: Empty},\n  { path: '/dashboard', name: 'Dashboard', element: Dashboard },\n  { path: '/theme', name: 'Theme', element: Colors, exact: true },\n  { path: '/theme/colors', name: 'Colors', element: Colors },\n  { path: '/theme/typography', name: 'Typography', element: Typography },\n  { path: '/coretime', name: 'Coretime', element: Coretime },\n  { path: '/runtime-upgrade', name: 'Runtime Upgrade', element: RuntimeUpgrade },\n  { path: '/configure', name: 'Configure Deployment', element: Configurator },\n  { path: '/configure/runtime', name: 'Runtime', element: ConfiguratorRuntime },\n  { path: '/configure/runtime-specs', name: 'Runtime Specs', element:  ConfiguratorRuntimeSpecs},\n  { path: '/configure/collators', name: 'Network Topology', element: ConfiguratorCollators },\n  { path: '/configure/coretime', name: 'Coretime', element: ConfiguratorCoretime },\n\n\n]\n\nexport default routes\n","import React from 'react'\nimport { useConfiguratorFormContext } from 'src/contexts/ConfiguratorFormContext'\nimport {Link} from 'react-router-dom'\nimport { CRow, CButtonToolbar, CButtonGroup, CButton, CCard ,CCardImage ,CCardBody ,CCardTitle,CCardText, CCol} from '@coreui/react'\n\nimport collatorImage from '../../assets/images/colllator.png'\n\nconst ConfiguratorCollators = () => {\n\n  const { collators, setCollators } = useConfiguratorFormContext();\n\n  const handleClick = (qty) => {\n    setCollators(qty)\n  }\n\n  const maxAmount = Array.from({ length: 10 }).fill(null);\n\n  return (\n    <>\n      <CRow className='d-flex flex-row'>\n          <p className='fs-5 fw-light'>Pick the number of collators to be deployed.</p>\n          <CRow xs={{ cols: 1, gutter: 2 }} xl={{ cols: 4, gutter: 3 }}>\n            {maxAmount.map((val, index)=> {\n              let numberOfCollators = index + 1\n              let item;\n              if(numberOfCollators === 1) {\n                item = (\n                  <CCol xs>\n                    <CCard style={{ width: '18rem' }}>\n                      <CCardImage orientation=\"top\" src={collatorImage} />\n                      <CCardBody className='d-flex flex-row justify-content-around align-items-center'>\n                        <CButton className='fw-light' active={collators === numberOfCollators ? true : false} onClick={() => handleClick(numberOfCollators)} color=\"info\" variant=\"outline\">{numberOfCollators} Collator</CButton>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                )\n              } else {\n                item = (\n                  <CCol xs>\n                    <CCard style={{ width: '18rem' }}>\n                      <CCardImage orientation=\"top\" src={collatorImage} />\n                      <CCardBody className='d-flex flex-row justify-content-around align-items-center'>\n                        <CButton className='fw-light' active={collators === numberOfCollators ? true : false} onClick={() => handleClick(numberOfCollators)} color=\"info\" variant=\"outline\">{numberOfCollators} Collators</CButton>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                )\n              }\n              return item\n            })}\n          </CRow>      \n      </CRow>\n      <CRow className='mt-4 mb-4'>\n        <Link className='text-center' to=\"/configure\">\n          <CButton variant='outline' color='success' className='fw-light'>Confirm</CButton>\n        </Link>\n      </CRow>\n    </>\n  );\n};\n\nexport default ConfiguratorCollators\n\n","import React, {useState} from 'react'\nimport { useConfiguratorFormContext } from 'src/contexts/ConfiguratorFormContext'\nimport {useNavigate} from 'react-router-dom'\nimport { CFormInput, CRow, CCol, CButton, CForm } from '@coreui/react'\n\nconst ConfiguratorCoretime = () => {\n  const [validAmount, setValidAmount] = useState(true)\n  const [validEvery, setValidEvery] = useState(true)\n  const [validated, setValidated] = useState(true)\n  const { coretime, setCoretime } = useConfiguratorFormContext();\n\n  const navigate = useNavigate()\n\n  const handleAmountChange = (event) => {\n    let amount = Math.floor(Number(event.target.valueAsNumber));\n    if (event.target.valueAsNumber > 10000){\n      setValidAmount(false)\n    } else {\n      setValidAmount(true)\n    }\n    setCoretime({...coretime, amount})\n  }\n\n  const handleEveryChange = (event) => {\n    let every = Math.floor(Number(event.target.valueAsNumber));\n    if (event.target.valueAsNumber > 1000){\n      setValidEvery(false)\n    } else {\n      setValidEvery(true)\n    }\n    setCoretime({...coretime, every})\n  }\n\n  const handleSubmit = (event) => {\n    const form = event.currentTarget\n    if (!form.checkValidity()) {\n      event.preventDefault()\n      event.stopPropagation()\n    } else {\n      event.preventDefault()\n      navigate(\"/configure\")\n    }\n    setValidated(true)\n  }\n\n  return (\n    <CForm className=\"needs-validation\" noValidate onSubmit={handleSubmit} validated={validated}>\n      <CRow className='d-flex flex-row'>\n            <CRow className='mb-3'>\n              <p>In order to configure your Coretime needs, you need to select: <strong>Amount</strong> and <strong>Frequency</strong> of validation.</p>\n              <p><strong>Amount</strong> dictates how many blocks of your parachain you want to pre-configure to be validated by the Relay Chain. For the purposes of this MVP the cap is 10_000 blocks.</p>\n              <p><strong>Frequency</strong> configures every how many blocks of the Relay Chain you wish to submit a Parachain Block.</p>\n              <p className='mt-2'><strong>Example</strong>. Objective is to have one thousand Parachain blocks validated by the Relay Chain, and this to happen every 10 Relay Chain blocks. Configuration would look as follows:</p>\n              <ul className='ms-4'>\n                <li>Amount: 1_000</li>\n                <li>Frequency: 10</li>\n              </ul>\n            </CRow>\n            <CRow>\n              <CCol md={7}>\n                <CFormInput \n                  max={10000}\n                  onChange={() => handleAmountChange(event)}\n                  invalid={!validAmount} \n                  step={1} \n                  type=\"number\" \n                  value={coretime.amount ? coretime.amount : \"\"} \n                  size=\"lg\" \n                  aria-label=\"lg input example\"\n                  required\n                  feedbackInvalid={validAmount ? \"\" : \"Please make it an integer below 10_000\"}\n                  label=\"Amount: Parachain Blocks to be validated\"\n                />\n              </CCol>\n            </CRow> \n            <CRow className='mt-4'>\n              <CCol md={7}>\n                <CFormInput \n                  max={1000}\n                  step={1}\n                  onChange={(event) => handleEveryChange(event)}\n                  invalid={!validEvery} \n                  label=\"Frequency: Every how many Relaychan Blocks should Parachain blocks be validated\"\n                  type=\"number\"\n                  value={coretime.every ? coretime.every : \"\"}\n                  size=\"lg\"\n                  aria-label=\"lg input example\"\n                  required\n                  feedbackInvalid={validEvery ? \"\" : \"Please make it an integer below 1_000\"}\n                />\n              </CCol>\n            </CRow>\n      </CRow>\n      <CRow className='mt-4'>\n        <CCol className='d-flex justify-content-center'>\n          <CButton type=\"submit\" variant='outline' color='success' className='fw-light'>Confirm</CButton>\n        </CCol>\n      </CRow>\n    </CForm>\n  );\n};\n\nexport default ConfiguratorCoretime\n\n\n","import React from 'react'\nimport { useLocation, Link } from 'react-router-dom'\n\nimport routes from '../routes'\n\nimport { CBreadcrumb, CBreadcrumbItem } from '@coreui/react'\n\nimport { useLocalStorageContext } from 'src/contexts/LocalStorageContext'\n\n\nconst AppBreadcrumb = () => {\n  const currentLocation = useLocation().pathname\n\n  const localStorageContext = useLocalStorageContext();\n  const { networkStatus } = localStorageContext;\n\n  const getRouteName = (pathname, routes) => {\n    const currentRoute = routes.find((route) => route.path === pathname)\n    return currentRoute ? currentRoute.name : false\n  }\n\n  const getBreadcrumbs = (location) => {\n    const breadcrumbs = []\n    location.split('/').reduce((prev, curr, index, array) => {\n      const currentPathname = `${prev}/${curr}`\n      const routeName = getRouteName(currentPathname, routes)\n      routeName &&\n        breadcrumbs.push({\n          pathname: currentPathname,\n          name: routeName,\n          active: index + 1 === array.length ? true : false,\n        })\n      return currentPathname\n    })\n    return breadcrumbs\n  }\n\n  const breadcrumbs = getBreadcrumbs(currentLocation)\n\n  return (\n    <CBreadcrumb className=\"m-0 ms-2\">\n     <CBreadcrumbItem><Link to={networkStatus === 'OK' ? '/dashboard' : '/'}>Home</Link></CBreadcrumbItem> \n      {breadcrumbs.map((breadcrumb, index) => {\n        return (\n          <CBreadcrumbItem\n            {...(breadcrumb.active ? { active: true } : \"\")}\n            key={index}\n          >\n            { breadcrumb.active ? \n                breadcrumb.name : \n                <Link to={`${breadcrumb.pathname}`}> {breadcrumb.name} </Link>\n            }\n          </CBreadcrumbItem>\n        )\n      })}\n    </CBreadcrumb>\n  )\n}\n\nexport default React.memo(AppBreadcrumb)\n","import React, { Suspense } from 'react'\nimport { Navigate, Route, Routes } from 'react-router-dom'\nimport { CContainer, CSpinner } from '@coreui/react'\n\n// routes config\nimport routes from '../routes'\n\nconst AppContent = () => {\n  return (\n    <CContainer lg>\n      <Suspense fallback={<CSpinner color=\"primary\" />}>\n        <Routes>\n          {routes.map((route, idx) => {\n            return (\n              route.element && (\n                <Route\n                  key={idx}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  element={<route.element />}\n                />\n              )\n            )\n          })}\n          <Route path=\"/\" element={<Navigate to=\"dashboard\" replace />} />\n        </Routes>\n      </Suspense>\n    </CContainer>\n  )\n}\n\nexport default React.memo(AppContent)\n","import React from 'react'\nimport { CFooter } from '@coreui/react'\n\nconst AppFooter = () => {\n  return (\n    <CFooter>\n      <div className=\"ms-auto\">\n        <span className=\"me-1\">Made with ❤️ by Portico Labs</span>\n      </div>\n    </CFooter>\n  )\n}\n\nexport default React.memo(AppFooter)\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPorticoLogoBlue(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"300.000000pt\",\n    height: \"293.000000pt\",\n    viewBox: \"0 0 300.000000 293.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,293.000000) scale(0.100000,-0.100000)\",\n    fill: \"#303c54\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1425 2856 c-64 -39 -439 -253 -820 -468 -82 -47 -239 -133 -347 -193 -195 -106 -198 -108 -198 -141 0 -28 4 -34 34 -44 19 -6 36 -19 38 -28 3 -11 28 -23 71 -36 66 -18 67 -19 67 -52 0 -28 -5 -36 -25 -44 -22 -8 -25 -15 -25 -58 0 -27 3 -83 6 -125 7 -72 8 -77 35 -86 22 -7 29 -16 29 -35 0 -15 5 -26 10 -26 14 0 14 -347 0 -355 -6 -3 -10 -22 -10 -41 0 -36 -18 -49 -80 -60 -44 -8 -51 -13 -48 -36 2 -19 9 -23 40 -23 21 0 38 3 38 8 0 4 4 6 9 2 5 -3 12 -1 16 5 15 24 25 6 25 -45 0 -30 5 -55 10 -55 6 0 10 -78 10 -215 0 -126 -4 -215 -9 -215 -17 0 -42 -32 -37 -47 4 -9 -1 -17 -14 -20 -16 -4 -20 -14 -20 -44 0 -35 -2 -39 -26 -39 -26 0 -26 -2 -22 -45 l6 -45 -34 0 -34 0 0 -50 0 -50 -45 0 -45 0 1 -65 2 -65 1468 0 1469 0 0 65 0 65 -45 0 -45 0 0 50 c0 49 -1 50 -30 50 -29 0 -30 2 -30 45 0 41 -2 45 -25 45 -22 0 -25 4 -25 40 0 29 -4 40 -15 40 -9 0 -15 9 -15 24 0 14 -8 31 -19 38 -17 12 -19 33 -26 220 -6 189 -5 207 10 216 15 8 17 19 13 61 -4 45 -3 51 11 45 55 -23 93 -27 108 -11 22 21 4 43 -42 51 -19 4 -35 11 -35 16 0 6 -3 9 -7 9 -26 -4 -33 4 -33 41 0 29 -4 40 -15 40 -13 0 -15 26 -15 175 0 149 2 175 15 175 9 0 15 9 15 25 0 17 8 29 24 36 16 8 26 23 31 46 3 19 4 37 1 40 -3 3 -1 14 5 25 6 12 8 45 3 84 -5 56 -10 67 -30 76 -18 9 -24 19 -24 43 0 32 2 33 70 51 54 14 70 22 72 38 2 13 14 23 36 28 31 8 33 12 30 45 -3 36 -4 37 -193 140 -254 140 -532 295 -630 353 -122 72 -614 350 -617 349 -2 0 -34 -20 -73 -43z m249 -97 c88 -51 274 -156 411 -234 320 -182 559 -315 708 -394 71 -38 117 -69 117 -78 0 -11 -7 -14 -25 -9 -34 9 -432 220 -725 386 -509 288 -641 360 -655 360 -12 0 -160 -81 -640 -350 -261 -146 -499 -276 -648 -353 -90 -46 -109 -53 -114 -40 -8 20 5 30 157 110 129 68 279 152 650 363 118 67 287 163 375 212 88 50 169 97 180 104 11 8 26 14 33 14 8 0 87 -41 176 -91z m76 -141 c232 -125 360 -198 360 -205 0 -4 -512 255 -575 292 l-30 18 -192 -101 c-245 -129 -433 -223 -433 -218 0 8 124 78 380 215 l243 130 31 -16 c17 -9 114 -61 216 -115z m7 -55 c142 -71 339 -166 438 -212 507 -238 645 -309 645 -330 0 -12 -4 -21 -9 -21 -4 0 -167 72 -362 161 -195 89 -426 194 -514 234 -88 40 -226 105 -306 144 l-147 71 -183 -89 c-101 -49 -332 -157 -514 -239 -181 -83 -399 -182 -482 -220 -151 -70 -153 -70 -153 -45 0 22 25 36 282 162 156 76 387 186 513 245 177 83 396 192 532 265 1 0 118 -56 260 -126z m-95 -84 c214 -99 736 -335 1048 -475 35 -16 58 -30 50 -32 -15 -2 -596 254 -1053 465 l-208 96 -152 -73 c-84 -39 -255 -118 -382 -175 -126 -56 -331 -149 -455 -205 -261 -118 -270 -122 -270 -111 0 5 125 65 278 134 152 69 376 171 497 226 121 54 276 126 345 159 69 34 130 61 137 61 6 1 80 -31 165 -70z m-176 -85 c-3 -8 -11 -14 -18 -14 -18 0 -15 89 3 101 11 7 15 -1 17 -32 2 -23 1 -48 -2 -55z m64 36 c0 -27 -4 -50 -10 -50 -5 0 -10 23 -10 50 0 28 5 50 10 50 6 0 10 -22 10 -50z m-120 -25 c0 -25 -2 -45 -4 -45 -2 0 -11 -3 -20 -6 -13 -5 -16 2 -16 38 0 47 5 58 27 58 9 0 13 -14 13 -45z m180 -6 c0 -31 -4 -48 -10 -44 -5 3 -10 26 -10 51 0 24 5 44 10 44 6 0 10 -23 10 -51z m-262 -70 c-10 -6 -14 3 -16 38 -2 30 1 49 10 54 10 6 14 -3 16 -38 2 -30 -1 -49 -10 -54z m322 45 c0 -24 -4 -44 -10 -44 -5 0 -10 23 -10 51 0 31 4 48 10 44 6 -3 10 -26 10 -51z m-370 -24 c0 -38 -4 -50 -15 -50 -11 0 -15 11 -15 43 0 24 3 47 7 50 16 17 23 3 23 -43z m432 -8 c2 -26 0 -41 -7 -39 -5 2 -11 26 -13 53 -4 61 14 48 20 -14z m-492 -16 c0 -30 -5 -46 -15 -50 -12 -4 -15 4 -15 38 0 23 3 46 7 49 15 16 23 4 23 -37z m558 -10 c2 -36 0 -47 -10 -44 -8 3 -14 24 -16 52 -2 36 0 47 10 44 8 -3 14 -24 16 -52z m-137 -27 c228 -99 819 -350 967 -411 109 -46 122 -53 122 -75 0 -20 -4 -24 -17 -18 -10 4 -49 18 -88 32 -38 14 -155 63 -260 108 -104 46 -255 108 -335 140 -80 31 -172 70 -205 85 -33 16 -123 55 -200 87 l-140 59 -152 -61 c-83 -34 -157 -66 -165 -72 -7 -6 -121 -55 -253 -108 -132 -53 -244 -101 -250 -105 -13 -10 -421 -180 -432 -180 -3 0 -3 12 -1 27 3 24 15 32 113 74 61 26 254 108 430 183 425 180 685 293 692 300 4 3 7 6 8 6 1 0 76 -32 166 -71z m-481 7 c0 -30 -5 -46 -15 -50 -12 -4 -15 4 -15 38 0 23 3 46 7 49 15 16 23 4 23 -37z m678 -9 c3 -39 0 -46 -12 -41 -11 4 -16 20 -16 51 0 61 24 52 28 -10z m-740 -19 c-4 -59 -28 -63 -28 -4 0 35 4 46 16 46 12 0 14 -9 12 -42z m802 -4 c0 -59 -24 -55 -28 4 -2 33 0 42 12 42 12 0 16 -11 16 -46z m60 -31 c0 -61 -24 -52 -28 10 -3 39 0 46 12 41 11 -4 16 -20 16 -51z m-920 8 c0 -25 -5 -41 -15 -45 -12 -4 -15 4 -15 39 0 33 4 45 15 45 11 0 15 -11 15 -39z m-62 -23 c-4 -55 -28 -64 -28 -10 0 21 3 42 7 45 16 17 24 4 21 -35z m638 -8 c76 -27 139 -50 141 -50 2 0 3 -16 3 -36 0 -21 -4 -33 -10 -29 -5 3 -10 15 -10 26 0 14 -13 25 -46 39 -79 34 -90 35 -120 5 -23 -23 -26 -32 -21 -68 3 -23 11 -43 16 -45 6 -2 8 -9 5 -14 -4 -6 -2 -8 3 -5 6 4 16 0 23 -8 15 -18 71 -20 88 -3 20 20 14 67 -13 93 -30 30 -61 32 -75 4 -15 -26 11 -69 41 -69 28 0 22 43 -6 48 -20 4 -20 3 -1 -11 11 -8 15 -17 9 -20 -16 -10 -44 26 -33 43 13 21 58 -3 66 -34 8 -32 -1 -46 -31 -46 -27 0 -75 51 -75 80 0 24 26 50 51 50 80 0 141 -118 89 -170 -38 -38 -135 -13 -165 44 -22 40 -14 117 15 146 19 19 19 20 -27 40 -25 11 -47 19 -47 18 -1 -2 1 -59 4 -128 l5 -124 98 -34 c53 -19 97 -39 97 -43 0 -14 -13 -11 -114 25 l-96 34 -91 -34 c-95 -35 -119 -40 -119 -25 0 5 43 24 95 42 l95 32 0 124 c0 67 -4 123 -9 123 -17 0 -76 -29 -60 -30 24 0 48 -32 55 -71 4 -26 3 -30 -5 -19 -9 12 -11 11 -11 -8 0 -13 -7 -36 -15 -52 -9 -17 -15 -32 -14 -36 0 -3 -3 -9 -7 -12 -4 -4 -4 0 0 8 5 9 2 8 -7 -2 -8 -10 -16 -15 -19 -13 -3 3 -11 -1 -18 -10 -17 -20 -79 -19 -102 2 -29 26 -24 96 10 133 35 39 98 52 118 25 20 -28 17 -50 -12 -85 -20 -23 -34 -30 -53 -28 -34 4 -41 46 -12 72 22 20 51 15 51 -7 0 -20 -26 -41 -35 -27 -3 5 -1 10 4 10 6 0 11 5 11 10 0 16 -17 11 -24 -7 -10 -24 8 -37 33 -24 26 14 28 57 3 70 -32 17 -81 -24 -82 -69 0 -33 17 -50 50 -50 58 0 110 73 89 127 -19 50 -47 54 -133 22 -44 -17 -55 -26 -53 -42 1 -11 -4 -22 -11 -24 -10 -4 -13 4 -10 28 3 32 6 34 133 85 72 29 135 53 141 53 7 1 74 -21 150 -49z m402 2 c2 -33 0 -42 -12 -42 -12 0 -16 11 -16 46 0 59 24 55 28 -4z m-1110 -63 c-10 -6 -14 2 -16 33 -2 26 1 44 10 49 10 6 14 -2 16 -33 2 -26 -1 -44 -10 -49z m1162 35 c0 -27 -4 -43 -10 -39 -5 3 -10 24 -10 46 0 21 5 39 10 39 6 0 10 -21 10 -46z m-1210 -19 c0 -33 -4 -45 -15 -45 -11 0 -15 11 -15 38 0 21 3 42 7 45 16 16 23 4 23 -38z m1270 -6 c0 -21 -4 -39 -10 -39 -5 0 -10 21 -10 46 0 27 4 43 10 39 6 -3 10 -24 10 -46z m-1326 -15 c-1 -19 -6 -40 -13 -47 -8 -8 -11 1 -11 36 0 31 4 47 13 47 7 0 12 -13 11 -36z m1376 -4 c0 -22 -4 -40 -10 -40 -5 0 -10 18 -10 40 0 22 5 40 10 40 6 0 10 -18 10 -40z m-1432 -22 c-4 -55 -28 -64 -28 -10 0 21 3 42 7 45 16 17 24 4 21 -35z m1482 2 c0 -22 -4 -40 -10 -40 -5 0 -10 18 -10 40 0 22 5 40 10 40 6 0 10 -18 10 -40z m57 -30 c0 -25 -4 -39 -11 -37 -13 4 -20 51 -12 73 10 27 23 6 23 -36z m-1587 0 c0 -29 -4 -40 -15 -40 -11 0 -15 11 -15 40 0 29 4 40 15 40 11 0 15 -11 15 -40z m468 18 c-3 -7 -59 -35 -126 -63 l-122 -49 0 -112 0 -113 55 -20 c30 -11 66 -23 80 -27 25 -6 35 -24 14 -24 -6 0 -43 11 -82 25 l-70 26 -64 -26 c-65 -26 -93 -31 -93 -17 0 4 31 18 70 31 l69 24 3 125 3 126 125 52 c138 58 143 59 138 42z m718 -24 c49 -20 106 -45 127 -55 l38 -20 -7 -118 -7 -118 79 -28 c43 -16 83 -32 89 -37 17 -15 -20 -8 -95 17 l-73 25 -61 -24 c-76 -30 -91 -33 -93 -21 -1 6 30 21 68 34 l69 25 0 121 0 121 -112 46 c-62 25 -114 51 -116 57 -5 15 -7 16 94 -25z m454 -15 c0 -21 -4 -39 -10 -39 -5 0 -10 21 -10 46 0 27 4 43 10 39 6 -3 10 -24 10 -46z m-1690 1 c0 -29 -4 -40 -15 -40 -10 0 -15 10 -15 33 0 19 3 37 7 40 15 16 23 5 23 -33z m-50 -19 c0 -25 -5 -41 -15 -45 -12 -4 -15 3 -15 33 0 21 3 41 7 44 15 16 23 5 23 -32z m1790 -2 c0 -28 -4 -39 -12 -37 -17 6 -17 78 0 78 7 0 12 -15 12 -41z m-477 -42 l22 -15 -30 -8 c-16 -4 -50 -15 -73 -26 -43 -18 -44 -18 -68 1 -13 10 -21 20 -19 23 3 2 7 22 11 44 3 21 8 42 10 46 5 7 107 -38 147 -65z m-1363 24 c0 -16 -7 -34 -15 -41 -13 -11 -15 -7 -15 27 0 22 3 43 6 46 12 12 24 -4 24 -32z m633 32 c3 -5 8 -29 12 -55 6 -40 4 -48 -14 -57 -15 -9 -29 -8 -58 4 -68 26 -117 33 -131 18 -7 -7 -18 -13 -25 -13 -17 1 34 39 53 40 8 1 44 16 80 35 72 37 77 38 83 28z m1255 -37 c2 -28 0 -37 -10 -34 -7 3 -14 22 -16 42 -2 28 0 37 10 34 7 -3 14 -22 16 -42z m52 -22 c0 -21 -4 -34 -11 -32 -6 2 -10 7 -10 11 1 4 1 21 1 38 0 17 4 28 10 24 6 -3 10 -22 10 -41z m-1990 2 c0 -21 -6 -36 -15 -40 -12 -4 -15 3 -15 34 0 29 4 40 15 40 10 0 15 -10 15 -34z m400 14 c0 -6 -18 -19 -41 -29 -40 -18 -40 -19 -14 -25 60 -15 54 -119 -12 -176 -39 -35 -75 -38 -103 -10 -47 47 0 150 69 150 45 0 69 -63 34 -91 -10 -9 -14 -9 -10 -2 11 17 -2 61 -20 67 -37 14 -73 -37 -58 -83 9 -30 59 -28 90 4 46 45 23 125 -36 125 -37 0 -89 -26 -89 -45 0 -7 -4 -17 -10 -20 -6 -4 -10 6 -10 23 0 27 6 32 103 75 56 25 103 46 105 46 1 1 2 -4 2 -9z m1325 -58 c22 -8 43 -20 47 -26 11 -16 10 -56 -2 -56 -5 0 -10 11 -10 24 0 19 -9 27 -40 40 -54 21 -67 20 -95 -9 -28 -27 -32 -70 -10 -101 8 -12 12 -24 9 -26 -2 -3 3 -11 13 -19 14 -12 16 -12 8 0 -6 11 -3 13 17 8 55 -14 82 53 39 96 -28 28 -55 13 -59 -32 -4 -40 -22 -30 -22 13 0 91 114 64 127 -30 4 -34 1 -46 -17 -64 -47 -47 -150 1 -150 71 0 40 23 93 49 111 21 15 20 16 -24 32 -25 10 -43 22 -40 27 3 4 31 -3 63 -17 31 -14 75 -33 97 -42z m315 22 c0 -19 -4 -34 -10 -34 -5 0 -10 18 -10 41 0 24 4 38 10 34 6 -3 10 -22 10 -41z m-2092 -1 c-4 -48 -28 -57 -28 -10 0 18 3 37 7 40 16 16 24 4 21 -30z m-50 -20 c-4 -48 -28 -57 -28 -10 0 18 3 37 7 40 16 16 24 4 21 -30z m2192 2 c0 -24 -5 -35 -15 -35 -10 0 -15 11 -15 35 0 24 5 35 15 35 10 0 15 -11 15 -35z m-2240 -19 c0 -19 -4 -38 -10 -41 -6 -4 -10 10 -10 34 0 23 5 41 10 41 6 0 10 -15 10 -34z m2285 -4 c0 -46 -19 -44 -23 2 -3 28 0 37 10 34 7 -3 13 -19 13 -36z m-2333 -55 c-2 -4 -8 -5 -13 -2 -11 7 -12 58 -1 69 7 8 21 -53 14 -67z m2378 32 c0 -24 -4 -38 -10 -34 -5 3 -10 22 -10 41 0 19 5 34 10 34 6 0 10 -18 10 -41z m-1580 12 c36 -15 46 -24 51 -50 8 -37 -6 -42 -15 -6 -7 26 -59 55 -99 55 -30 0 -57 -29 -57 -62 0 -60 94 -106 120 -58 15 29 -13 80 -44 80 -29 0 -48 -22 -39 -45 4 -13 3 -16 -5 -11 -16 9 -15 49 0 64 33 33 101 -7 112 -66 10 -60 -38 -86 -111 -60 -57 21 -70 111 -23 158 24 24 51 24 110 1z m145 -39 c3 -7 5 -118 6 -245 1 -358 1 -357 -16 -357 -8 0 -15 7 -15 16 0 8 -5 12 -11 9 -6 -4 -8 -13 -5 -20 3 -8 -3 -17 -14 -20 -11 -3 -30 -19 -44 -36 -30 -36 -46 -37 -46 -4 0 14 -4 25 -10 25 -6 0 -10 59 -10 157 0 121 3 154 12 145 7 -7 13 -54 15 -119 2 -60 6 -113 8 -120 2 -7 17 -11 32 -10 28 2 28 4 28 67 0 138 -9 177 -56 232 -37 44 -40 52 -26 60 10 5 17 20 17 34 0 16 8 28 24 35 33 15 46 49 46 119 0 54 2 60 28 72 25 12 27 12 30 -7 2 -11 5 -26 7 -33z m500 42 c21 -14 25 -24 25 -69 0 -70 13 -102 50 -123 22 -12 30 -24 30 -44 0 -18 5 -28 15 -28 23 0 18 -25 -9 -39 -13 -8 -36 -35 -50 -61 -22 -40 -26 -59 -24 -122 1 -41 -1 -79 -4 -84 -10 -17 8 -47 31 -49 32 -2 39 19 37 120 -1 64 2 99 14 120 14 28 15 22 18 -129 2 -131 0 -161 -12 -168 -8 -5 -12 -16 -9 -28 8 -29 -14 -25 -43 9 -14 17 -33 32 -42 35 -15 5 -17 20 -17 111 1 71 -3 105 -10 105 -8 0 -11 -32 -10 -100 1 -86 -2 -100 -15 -98 -13 3 -15 38 -18 258 -3 234 3 400 14 400 3 0 16 -7 29 -16z m249 -6 c19 -26 21 -58 5 -58 -7 0 -9 -11 -6 -30 6 -28 -4 -44 -28 -45 -5 -1 -9 -5 -8 -11 1 -5 -6 -10 -15 -11 -9 -1 -31 -5 -48 -8 -67 -14 -90 71 -33 120 41 34 92 32 97 -3 2 -13 0 -31 -4 -40 -6 -13 -8 -10 -13 13 -8 39 -45 41 -73 5 -23 -31 -15 -58 18 -66 69 -18 125 93 63 126 -32 17 -117 -14 -131 -49 -9 -21 -12 -23 -15 -8 -9 35 3 51 52 68 72 25 120 24 139 -3z m-514 -54 c0 -32 2 -35 22 -29 17 6 20 4 15 -10 -4 -9 -7 -95 -7 -190 0 -159 -1 -174 -17 -173 -10 0 -26 -3 -35 -7 -17 -7 -18 7 -18 213 0 219 1 228 33 231 4 1 7 -15 7 -35z m950 -19 c47 -20 94 -38 105 -40 31 -4 199 -65 209 -76 15 -14 -9 -11 -51 6 -19 8 -44 15 -54 15 -27 0 -49 -28 -49 -64 0 -27 6 -36 34 -51 55 -30 94 2 61 51 -21 32 -57 29 -65 -6 -5 -22 -7 -23 -13 -7 -17 46 35 73 80 42 42 -30 36 -109 -9 -120 -29 -7 -93 19 -102 40 -14 38 0 99 28 117 6 4 -2 11 -18 18 -16 6 -33 13 -37 16 -5 3 -9 -39 -9 -94 l0 -99 63 -18 c75 -22 79 -24 72 -35 -3 -5 -36 2 -73 14 l-69 24 -74 -24 c-85 -27 -92 -28 -87 -13 2 6 35 21 73 33 l70 22 3 95 3 95 -108 45 c-58 25 -108 50 -111 57 -4 14 1 12 128 -43z m-1770 38 c0 -8 -194 -93 -211 -93 -6 0 -9 -40 -7 -97 l3 -96 73 -25 c39 -13 72 -28 72 -33 0 -11 7 -13 -81 15 -75 22 -78 23 -122 6 -65 -25 -97 -32 -97 -21 0 5 29 20 65 33 l65 23 0 92 c0 51 -3 93 -7 93 -5 0 -18 -3 -29 -6 -21 -6 -21 -6 2 -29 24 -25 32 -55 14 -55 -5 0 -10 -11 -10 -23 0 -45 -79 -89 -119 -67 -29 15 -29 76 1 107 41 44 107 20 88 -32 -6 -17 -7 -16 -14 8 -8 32 -35 36 -60 8 -37 -41 3 -88 51 -61 39 22 51 61 29 94 -20 31 -40 32 -100 6 -32 -13 -46 -16 -46 -7 0 13 127 63 195 76 22 5 81 27 130 49 91 41 115 48 115 35z m154 -19 c8 -22 -11 -54 -33 -54 -24 0 -34 26 -21 51 13 23 46 25 54 3z m606 -204 c0 -213 -1 -220 -20 -220 -19 0 -20 7 -20 198 0 208 4 242 26 242 12 0 14 -39 14 -220z m782 195 c8 -19 8 -29 0 -37 -23 -23 -61 14 -48 47 9 23 35 18 48 -10z m-1127 -5 c17 -18 17 -22 4 -36 -20 -20 -49 -8 -49 20 0 40 18 46 45 16z m283 -421 c-10 -7 -14 36 -16 208 -2 167 1 218 10 224 10 7 14 -36 16 -208 2 -167 -1 -218 -10 -224z m206 243 c-2 -235 -1 -232 -14 -232 -6 0 -10 78 -10 215 0 165 3 215 13 215 9 0 12 -46 11 -198z m363 172 c7 -20 -22 -45 -43 -37 -17 6 -18 25 -2 41 17 17 38 15 45 -4z m-607 -208 c0 -181 -2 -215 -15 -220 -13 -5 -15 23 -15 214 0 189 2 220 15 220 13 0 15 -30 15 -214z m340 -1 c0 -137 -4 -215 -10 -215 -6 0 -10 78 -10 215 0 137 4 215 10 215 6 0 10 -78 10 -215z m718 166 c5 -14 -74 -52 -93 -45 -12 5 -14 15 -9 43 4 20 8 39 11 43 5 9 87 -28 91 -41z m-1700 -10 c4 -48 4 -48 -77 -14 l-35 15 39 24 c54 33 69 28 73 -25z m-75 -47 c26 -9 47 -21 47 -27 0 -7 3 -23 7 -36 4 -17 3 -22 -5 -17 -7 4 -12 16 -12 26 0 21 -55 50 -96 50 -29 0 -54 -25 -54 -55 0 -54 87 -89 110 -45 9 17 6 25 -14 45 -30 30 -56 24 -56 -13 0 -19 -3 -23 -11 -15 -6 6 -9 21 -7 34 2 19 10 25 35 27 42 4 73 -26 73 -72 0 -46 -20 -60 -74 -52 -68 11 -94 63 -61 126 23 44 46 49 118 24z m1873 8 c26 -17 34 -49 19 -78 -8 -15 -12 -31 -10 -34 3 -4 -5 -16 -17 -26 -14 -12 -18 -14 -13 -4 6 11 3 10 -12 -2 -64 -57 -138 23 -80 86 28 31 58 40 81 23 15 -11 17 -20 11 -43 l-9 -29 -4 27 c-4 33 -23 41 -51 22 -25 -18 -28 -62 -5 -71 25 -10 67 10 83 38 13 24 13 29 -3 54 -15 23 -23 26 -49 22 -58 -10 -87 -25 -87 -47 0 -11 -5 -20 -11 -20 -6 0 -9 12 -7 27 2 22 12 31 48 45 48 18 98 23 116 10z m-1746 -49 c0 -14 7 -31 16 -37 11 -9 14 -26 12 -69 l-3 -58 -35 37 c-19 20 -29 34 -22 30 6 -4 12 -2 12 3 0 6 -4 11 -10 11 -5 0 -10 5 -10 11 0 5 5 7 10 4 15 -9 12 4 -5 21 -18 19 -20 71 -2 77 22 8 37 -5 37 -30z m1555 -20 c-2 -21 -4 -47 -4 -58 -1 -14 -4 -16 -9 -7 -5 7 -7 33 -5 57 3 29 0 45 -7 45 -7 0 -10 -22 -9 -65 2 -51 -2 -69 -16 -85 -10 -11 -22 -20 -27 -20 -15 0 -9 107 7 120 8 7 15 23 15 35 0 27 17 36 41 24 12 -6 16 -19 14 -46z m-1951 1 c7 -19 -10 -44 -29 -44 -20 0 -26 28 -9 45 20 19 30 19 38 -1z m2334 4 c16 -16 15 -48 -2 -48 -20 0 -39 27 -32 45 7 18 18 19 34 3z m-2088 -13 c15 -18 5 -35 -21 -35 -14 0 -19 7 -19 25 0 28 21 33 40 10z m356 -41 c12 5 14 -20 14 -165 0 -132 -3 -170 -12 -166 -7 2 -23 0 -35 -4 l-23 -9 0 194 c0 147 3 195 13 199 7 2 15 -9 20 -25 5 -20 13 -28 23 -24z m1096 23 c2 -18 8 -27 20 -27 17 0 18 -13 18 -167 l0 -168 -35 -1 -35 -1 0 193 c0 145 3 193 13 197 16 6 17 5 19 -26z m398 13 c0 -23 -26 -38 -41 -23 -14 14 0 43 22 43 12 0 19 -7 19 -20z m-1563 -192 c-2 -180 -3 -193 -21 -196 -14 -3 -17 0 -12 13 3 9 6 97 6 196 0 149 2 179 14 179 13 0 15 -31 13 -192z m123 2 c0 -145 -3 -190 -12 -190 -10 0 -12 43 -10 190 2 112 7 190 12 190 6 0 10 -76 10 -190z m997 -2 c-2 -165 -4 -193 -18 -196 -13 -2 -15 20 -17 172 -3 168 3 216 28 216 5 0 8 -82 7 -192z m121 2 c-2 -118 -7 -190 -13 -190 -6 0 -11 72 -13 190 -2 166 0 190 13 190 13 0 15 -24 13 -190z m-1288 -15 c0 -167 -2 -195 -15 -195 -13 0 -15 28 -15 188 0 104 3 192 7 195 19 20 23 -10 23 -188z m230 -6 c0 -144 -3 -189 -12 -189 -10 0 -12 44 -10 195 2 122 6 193 12 190 6 -4 10 -86 10 -196z m890 6 c0 -167 -2 -195 -15 -195 -13 0 -15 28 -15 189 0 182 1 192 28 200 1 1 2 -87 2 -194z m230 -6 c0 -114 -4 -189 -10 -189 -9 0 -20 377 -11 386 16 15 21 -32 21 -197z m92 99 c-28 -29 -54 -49 -59 -44 -4 5 -2 11 6 14 8 2 32 24 54 48 22 24 43 42 45 39 3 -2 -18 -28 -46 -57z m-1523 -25 c14 -13 21 -23 15 -23 -14 0 -94 80 -94 94 0 6 12 -2 27 -19 14 -16 38 -40 52 -52z m1114 40 c-26 -34 -28 -43 -29 -142 -1 -58 -6 -107 -11 -108 -7 -3 -9 77 -4 193 1 19 9 32 51 82 24 28 19 9 -7 -25z m-1200 -18 c-4 -11 -1 -13 11 -9 12 5 19 1 22 -12 3 -11 20 -26 37 -35 l32 -16 3 -116 c2 -71 -1 -117 -7 -117 -5 0 -11 -19 -13 -42 -2 -29 -8 -44 -18 -46 -13 -2 -15 9 -13 68 2 52 -1 70 -9 68 -8 -3 -12 -30 -13 -75 0 -66 -2 -72 -31 -97 -18 -14 -36 -26 -42 -26 -16 0 -22 66 -22 241 0 142 2 168 16 173 10 4 13 13 9 25 -4 13 0 23 12 29 22 13 34 6 26 -13z m1685 13 c7 -7 12 -20 12 -31 0 -10 7 -25 15 -33 12 -13 15 -48 15 -185 0 -106 -4 -169 -10 -169 -5 0 -10 -11 -10 -25 0 -14 -4 -25 -9 -25 -4 0 -20 11 -35 25 -15 14 -31 25 -37 25 -5 0 -9 7 -9 15 0 18 -17 20 -22 3 -9 -25 -28 5 -28 43 0 21 -4 39 -10 39 -6 0 -10 46 -10 118 l0 118 34 14 c19 7 37 22 40 32 3 15 10 18 25 13 12 -4 21 -2 21 4 0 6 -5 11 -11 11 -5 0 -7 5 -4 10 8 13 18 13 33 -2z m-1195 -50 c3 -18 6 -62 6 -98 1 -36 4 -73 7 -84 4 -13 2 -17 -7 -14 -10 3 -15 28 -16 84 -2 43 -4 94 -6 112 -2 17 0 32 4 32 4 0 9 -15 12 -32z m-713 -3 c0 -9 7 -18 15 -21 12 -5 15 -32 15 -153 l0 -146 -24 -1 -25 -2 -3 162 c-2 88 -2 164 0 169 6 13 22 7 22 -8z m2090 -11 c0 -19 4 -25 15 -20 13 5 15 -15 15 -142 l0 -147 -25 -1 -25 -2 -2 122 c-1 66 -3 142 -3 169 -1 32 3 47 12 47 7 0 13 -11 13 -26z m-2130 -154 c0 -144 -2 -170 -15 -170 -13 0 -15 25 -15 163 0 90 3 167 7 170 19 20 23 -8 23 -163z m110 0 c0 -107 -4 -170 -10 -170 -6 0 -10 63 -10 170 0 107 4 170 10 170 6 0 10 -63 10 -170z m1980 0 c0 -144 -2 -170 -15 -170 -13 0 -15 26 -15 170 0 144 2 170 15 170 13 0 15 -26 15 -170z m101 157 c-1 -4 -1 -79 -1 -168 0 -108 -3 -158 -10 -154 -14 9 -12 337 2 333 5 -2 9 -7 9 -11z m-2231 -167 c0 -144 -2 -170 -15 -170 -13 0 -15 25 -15 164 0 157 2 167 28 175 1 1 2 -75 2 -169z m210 -5 c0 -103 -4 -165 -10 -165 -6 0 -10 62 -10 165 0 103 4 165 10 165 6 0 10 -62 10 -165z m1880 0 c0 -140 -2 -165 -15 -165 -13 0 -15 25 -15 165 0 140 2 165 15 165 13 0 15 -25 15 -165z m200 0 c0 -103 -4 -165 -10 -165 -6 0 -10 62 -10 165 0 103 4 165 10 165 6 0 10 -62 10 -165z m-1057 69 l92 -25 0 -45 c0 -28 -4 -44 -12 -44 -8 0 -13 14 -13 34 0 33 -8 42 -52 52 -5 1 -11 3 -15 4 -16 5 -29 7 -51 8 -13 1 -20 7 -17 12 3 6 4 10 1 10 -2 0 -11 3 -20 6 -14 5 -16 -9 -16 -124 l0 -130 33 -5 c71 -10 153 -30 162 -39 11 -11 -14 -7 -131 19 -68 15 -77 15 -168 -4 l-96 -20 0 52 c0 39 4 52 15 52 10 0 15 -11 15 -32 l0 -32 75 15 75 15 0 104 c0 96 -1 105 -17 98 -10 -4 -36 -11 -58 -16 -66 -13 -75 -19 -75 -50 0 -20 -5 -29 -16 -29 -12 0 -14 10 -12 47 l3 47 85 22 c110 28 105 28 213 -2z m-143 -123 l0 -79 -50 -11 c-28 -6 -55 -11 -60 -11 -4 0 -7 24 -5 53 2 28 4 64 4 78 1 25 14 31 104 48 4 0 7 -35 7 -78z m170 59 c23 -6 25 -11 28 -80 2 -51 6 -70 12 -60 8 13 10 12 10 -2 0 -11 -8 -18 -20 -18 -11 0 -20 3 -20 8 0 4 -16 8 -36 10 -20 1 -40 5 -45 8 -5 3 -9 39 -9 80 l0 74 28 -6 c15 -4 38 -10 52 -14z m-537 -126 c-3 -10 -17 -8 -61 7 -31 11 -61 24 -66 29 -22 22 -26 6 -26 -94 0 -71 4 -107 13 -114 6 -5 35 -13 62 -17 55 -7 97 -25 60 -25 -11 0 -46 6 -78 14 -39 9 -72 11 -105 5 -26 -5 -62 -11 -79 -14 l-33 -6 0 56 c0 30 5 55 10 55 10 0 15 -29 10 -59 -1 -11 9 -12 51 -7 29 4 56 9 61 12 4 3 8 46 8 96 0 82 -2 89 -17 83 -10 -4 -37 -12 -61 -17 -36 -8 -42 -13 -37 -29 4 -13 2 -19 -9 -19 -12 0 -16 10 -16 35 0 27 4 35 18 35 9 0 44 8 77 18 59 18 60 18 141 -7 56 -16 81 -28 77 -37z m237 46 c0 -5 -8 -10 -17 -11 -10 0 -26 -2 -35 -4 -10 -2 -18 1 -18 5 0 5 12 11 28 13 15 2 30 5 35 6 4 0 7 -3 7 -9z m417 -5 c33 -10 58 -25 73 -45 13 -17 37 -34 53 -38 17 -4 32 -13 35 -20 6 -20 -60 8 -85 35 -12 14 -23 29 -25 34 -2 6 -31 15 -66 22 -34 6 -62 15 -62 19 0 12 20 10 77 -7z m403 -4 c57 -16 65 -21 68 -44 2 -16 -2 -27 -9 -27 -6 0 -9 8 -6 19 3 14 1 18 -9 14 -8 -3 -14 0 -14 7 0 7 -7 10 -15 7 -8 -4 -17 -2 -20 4 -4 5 -12 8 -18 7 -7 -1 -23 4 -35 11 -13 7 -24 11 -25 9 -1 -2 -1 -53 1 -114 l3 -112 50 -6 c53 -7 105 -24 97 -31 -2 -2 -39 4 -82 14 -70 17 -84 17 -149 5 -40 -8 -75 -14 -79 -14 -5 0 -8 27 -8 60 0 33 4 60 10 60 6 0 10 -21 10 -46 0 -35 3 -45 14 -41 7 3 34 9 60 12 l46 7 0 93 0 93 -60 -15 c-37 -10 -60 -21 -60 -29 0 -8 -5 -14 -11 -14 -6 0 -9 12 -7 27 3 24 10 29 68 44 84 22 102 22 180 0z m-900 -11 c0 -5 -6 -10 -14 -10 -7 0 -25 -9 -40 -21 -14 -11 -26 -16 -26 -10 0 6 5 11 10 11 6 0 10 6 10 14 0 13 16 22 48 25 6 0 12 -3 12 -9z m20 -410 l-5 -255 -22 -3 c-19 -3 -23 -10 -23 -42 0 -30 -5 -40 -20 -45 -11 -3 -20 -13 -20 -21 0 -8 -7 -14 -15 -14 -9 0 -15 9 -15 25 0 18 -7 26 -25 31 l-25 6 0 229 c0 146 4 229 10 229 6 0 10 33 10 79 0 75 1 79 25 85 13 3 36 22 51 41 14 19 29 33 33 31 4 -3 13 -1 21 4 22 13 26 -73 20 -380z m492 378 c12 -7 35 -28 51 -45 16 -18 38 -33 48 -33 17 0 19 -8 19 -80 0 -47 4 -80 10 -80 6 0 10 -83 10 -230 0 -222 -1 -230 -20 -230 -21 0 -40 -27 -33 -47 3 -8 -4 -13 -17 -13 -12 0 -18 4 -15 10 3 5 -3 15 -15 22 -14 9 -20 23 -20 49 0 32 -3 37 -30 42 l-29 6 -3 253 c-4 298 -1 388 13 388 5 0 19 -6 31 -12z m-862 -68 c0 -60 -3 -70 -17 -70 -10 0 -28 -3 -41 -6 -23 -6 -23 -5 -20 62 3 63 5 69 28 75 49 14 50 13 50 -61z m155 48 c15 -6 10 -7 -17 -5 l-38 3 0 -42 c0 -37 3 -42 25 -46 14 -3 25 -1 25 3 0 5 7 9 15 9 9 0 15 -10 15 -26 0 -23 -3 -25 -26 -20 -15 4 -38 9 -53 12 -25 5 -26 7 -23 70 4 64 4 64 30 57 15 -3 36 -10 47 -15z m965 -48 c0 -38 -4 -70 -9 -70 -5 0 -23 -3 -40 -6 -28 -6 -31 -4 -31 20 0 26 15 36 22 15 2 -5 11 -7 21 -4 12 5 17 18 17 45 0 37 -1 39 -37 42 l-38 4 35 11 c60 19 60 19 60 -57z m139 59 c30 -11 31 -13 31 -70 0 -38 4 -59 12 -59 6 0 9 -3 5 -6 -3 -4 -25 1 -47 10 -23 9 -46 14 -51 11 -5 -4 -9 21 -9 59 0 72 3 74 59 55z m-1615 -49 c37 -12 64 -25 61 -30 -3 -5 -19 -4 -38 1 -17 6 -41 12 -51 14 -11 3 -24 9 -30 15 -21 21 -26 7 -26 -84 0 -104 -4 -98 75 -112 45 -7 82 -23 55 -24 -8 0 -42 7 -75 14 -56 14 -118 10 -187 -10 -16 -5 -18 4 -18 99 l0 105 58 15 c78 21 100 20 176 -3z m576 9 c-14 -6 -33 -12 -43 -14 -10 -2 -27 -7 -38 -10 -10 -4 -19 -2 -19 3 0 9 69 29 105 30 16 1 15 -1 -5 -9z m1511 -5 c51 -14 56 -19 56 -42 0 -26 0 -26 -9 -5 -7 13 -26 25 -53 32 -23 6 -50 13 -59 17 -14 5 -16 -5 -16 -89 l0 -96 58 -11 c55 -12 100 -29 75 -30 -6 0 -40 7 -75 14 -54 13 -72 13 -128 1 -35 -7 -67 -12 -71 -10 -3 2 -6 25 -7 50 -2 34 1 45 13 45 10 0 15 -10 15 -34 l0 -33 50 10 50 10 0 79 c0 65 -3 79 -14 75 -8 -3 -31 -9 -50 -13 -22 -4 -36 -12 -36 -21 0 -8 -6 -13 -12 -10 -7 2 -13 12 -13 23 0 15 13 23 60 36 77 21 96 21 166 2z m-673 0 c27 -8 29 -23 2 -21 -11 1 -20 5 -20 10 0 4 -4 5 -10 2 -5 -3 -10 -1 -10 4 0 12 6 13 38 5z m320 -18 c13 -3 34 -16 46 -29 15 -16 42 -28 84 -36 72 -14 83 -26 17 -17 -53 8 -78 18 -124 51 -20 15 -48 25 -67 25 -19 0 -34 5 -34 11 0 11 19 10 78 -5z m-1582 -34 c-9 -15 -70 -41 -112 -48 -22 -3 -42 -8 -46 -11 -5 -2 -8 0 -8 6 0 11 19 18 75 27 22 3 51 14 65 24 25 19 37 19 26 2z m1944 3 c23 -5 25 -11 25 -60 l0 -55 -35 6 c-50 9 -50 9 -50 70 0 48 2 55 18 50 9 -3 28 -8 42 -11z m-2096 -1 c25 -10 19 -22 -9 -16 -22 4 -25 1 -25 -26 0 -24 5 -31 26 -36 14 -4 34 -4 45 -1 15 5 19 1 19 -19 0 -31 -1 -31 -62 -9 l-48 17 0 48 c0 50 11 58 54 42z m216 -64 c0 -40 4 -70 10 -70 6 0 10 -83 10 -230 0 -215 -1 -230 -18 -230 -25 0 -42 -19 -42 -47 0 -14 -6 -23 -15 -23 -8 0 -15 -6 -15 -14 0 -9 -7 -12 -21 -9 -11 3 -18 11 -15 19 3 7 -6 22 -19 33 -25 19 -25 20 -25 197 0 99 3 223 7 276 6 94 7 97 32 103 14 3 42 19 61 35 19 16 38 30 43 30 4 0 7 -31 7 -70z m758 4 c16 5 17 -12 14 -213 l-3 -218 -34 -1 -35 -1 0 244 c0 224 1 244 18 247 13 3 18 -4 20 -30 3 -26 7 -32 20 -28z m766 45 c20 -12 34 -25 31 -29 -3 -4 11 -11 30 -14 l35 -7 0 -64 c0 -37 4 -65 10 -65 6 0 10 -78 10 -213 l0 -214 -25 -11 c-15 -7 -25 -20 -25 -32 0 -11 -5 -20 -10 -20 -6 0 -15 -10 -20 -22 -8 -21 -9 -20 -9 10 -1 19 -6 32 -14 32 -7 0 -17 15 -22 33 -7 22 -17 33 -32 35 l-23 3 0 230 c0 146 4 229 10 229 6 0 10 30 10 70 0 39 2 70 4 70 3 0 21 -9 40 -21z m226 -33 c0 -40 -4 -55 -16 -60 -28 -11 -54 -6 -54 9 0 9 9 15 25 15 22 0 25 4 25 35 0 33 -2 35 -25 29 -15 -4 -25 -2 -25 4 0 11 20 19 53 21 14 1 17 -8 17 -53z m-1072 -451 c-2 -1 -20 -5 -40 -9 l-38 -7 0 244 c0 208 2 246 15 251 13 5 15 -26 15 -236 0 -133 3 -239 6 -236 3 4 6 110 7 237 2 194 4 233 17 241 13 8 15 -21 18 -237 1 -135 1 -247 0 -248z m142 392 c0 -52 3 -162 7 -245 5 -137 5 -152 -10 -152 -15 0 -17 24 -17 245 0 157 4 245 10 245 6 0 10 -38 10 -93z m-244 -404 c-3 -7 -10 -13 -16 -13 -16 0 -14 487 3 493 9 3 13 -49 15 -232 1 -130 0 -241 -2 -248z m344 232 c0 -157 -4 -245 -10 -245 -6 0 -10 88 -10 245 0 157 4 245 10 245 6 0 10 -88 10 -245z m-1380 226 c0 -11 -94 -35 -112 -29 -7 3 14 11 47 20 33 8 61 16 63 17 1 0 2 -3 2 -8z m2465 -8 c30 -9 55 -20 55 -24 0 -4 -26 1 -58 10 -31 10 -63 16 -70 13 -6 -2 -12 1 -12 7 0 15 20 14 85 -6z m-1875 -287 c0 -190 -2 -225 -15 -230 -13 -5 -15 24 -15 224 0 198 2 230 15 230 13 0 15 -32 15 -224z m42 202 c2 -15 9 -22 21 -22 16 2 17 -14 17 -200 l0 -201 -35 -2 -35 -2 0 225 c0 188 2 224 14 224 8 0 16 -10 18 -22z m1118 -3 c0 -18 5 -25 20 -25 19 0 20 -7 20 -198 l0 -199 -35 -1 -35 -1 0 224 c0 193 2 225 15 225 9 0 15 -9 15 -25z m-1210 -210 c0 -193 -2 -225 -15 -225 -13 0 -15 30 -15 209 0 115 3 216 6 225 18 47 24 -5 24 -209z m170 5 c0 -134 -4 -220 -10 -220 -9 0 -20 427 -11 436 17 17 21 -23 21 -216z m950 -5 c0 -193 -2 -225 -15 -225 -13 0 -15 31 -15 219 0 212 1 222 28 230 1 1 2 -100 2 -224z m50 6 c0 -181 -2 -220 -14 -224 -8 -3 -17 -3 -20 0 -8 8 -8 407 0 427 3 9 12 16 19 16 11 0 14 -44 15 -219z m117 -4 c5 -196 4 -217 -11 -217 -14 0 -16 24 -16 221 0 156 3 220 11 217 7 -2 13 -77 16 -221z m-1057 -7 c0 -140 -4 -220 -10 -220 -6 0 -10 80 -10 220 0 140 4 220 10 220 6 0 10 -80 10 -220z m1120 0 c0 -134 -4 -220 -10 -220 -5 0 -10 88 -12 220 -2 171 0 220 10 220 9 0 12 -51 12 -220z m-1738 155 c-3 -18 0 -25 12 -25 14 0 16 -21 16 -184 0 -181 0 -184 -22 -189 -12 -4 -23 -5 -25 -4 -2 2 -5 386 -3 420 0 4 6 7 14 7 9 0 12 -8 8 -25z m2088 0 c0 -16 6 -25 15 -25 13 0 15 -27 15 -185 0 -194 2 -185 -41 -189 -8 -1 -11 55 -11 194 0 107 0 203 1 213 2 27 21 20 21 -8z m-2130 -195 c0 -180 -2 -210 -15 -210 -13 0 -15 30 -15 210 0 180 2 210 15 210 13 0 15 -30 15 -210z m110 0 c0 -133 -4 -210 -10 -210 -6 0 -10 77 -10 210 0 133 4 210 10 210 6 0 10 -77 10 -210z m1980 0 c0 -180 -2 -210 -15 -210 -13 0 -15 30 -15 210 0 180 2 210 15 210 13 0 15 -30 15 -210z m100 16 c0 -107 3 -201 6 -210 4 -11 1 -16 -10 -16 -14 0 -16 24 -16 210 0 133 4 210 10 210 6 0 10 -71 10 -194z m-2232 -23 c-2 -154 -6 -207 -15 -211 -10 -3 -13 43 -13 207 0 182 2 211 15 211 13 0 15 -27 13 -207z m212 -3 c0 -133 -4 -210 -10 -210 -6 0 -10 77 -10 210 0 133 4 210 10 210 6 0 10 -77 10 -210z m1878 3 c-2 -154 -6 -207 -15 -211 -10 -3 -13 43 -13 207 0 182 2 211 15 211 13 0 15 -27 13 -207z m202 -4 c0 -137 -3 -208 -10 -204 -6 4 -10 85 -10 211 0 129 4 204 10 204 6 0 10 -77 10 -211z m-1043 -129 c110 -15 123 -18 123 -36 0 -11 -8 -14 -32 -10 -18 3 -69 10 -113 16 -43 6 -83 16 -87 23 -6 9 -8 8 -8 -4 0 -13 -22 -18 -112 -29 -133 -15 -133 -15 -133 8 0 31 216 51 362 32z m-514 -75 c9 -4 17 -11 17 -17 0 -10 -90 -3 -147 12 -18 5 -33 5 -33 1 0 -9 -180 -29 -186 -20 -7 12 21 28 61 32 53 7 265 0 288 -8z m522 -5 c154 -17 155 -17 155 -51 0 -33 18 -33 -175 -8 -78 10 -164 7 -295 -11 -99 -14 -100 -14 -100 20 0 17 1 30 3 31 12 5 286 36 297 33 8 -1 60 -8 115 -14z m544 10 c100 -14 104 -34 6 -25 -44 4 -88 11 -97 16 -9 5 -18 5 -20 0 -2 -5 -43 -12 -92 -16 -73 -6 -88 -5 -84 6 8 25 172 36 287 19z m-1632 -31 c43 -6 82 -15 88 -20 11 -11 -44 -11 -105 1 -26 5 -68 4 -100 -1 -123 -21 -120 -21 -120 -5 0 15 23 22 100 29 19 2 40 5 47 5 6 1 47 -3 90 -9z m2131 -5 c23 -4 42 -11 42 -16 0 -7 -22 -8 -62 -3 -76 10 -82 10 -185 0 -58 -5 -83 -5 -83 3 0 6 19 13 43 16 23 3 56 8 72 10 31 4 98 0 173 -10z m-1524 -30 c9 -3 16 -11 16 -16 0 -11 -122 -2 -173 13 -44 12 -47 12 -47 -11 0 -26 -4 -27 -122 -35 l-98 -6 0 24 c0 22 5 25 73 35 72 11 320 8 351 -4z m1094 0 c36 -6 42 -10 42 -30 0 -23 -1 -24 -77 -18 -108 7 -123 11 -117 29 4 9 0 15 -10 15 -9 0 -16 -8 -16 -17 0 -16 -11 -18 -115 -15 -90 3 -115 6 -115 17 0 8 14 16 33 19 17 3 43 8 57 10 31 6 261 -2 318 -10z m-1590 -30 c33 -9 29 -35 -5 -28 -160 29 -183 31 -183 13 0 -14 -13 -18 -62 -23 -35 -4 -80 -9 -102 -12 -36 -6 -38 -5 -31 17 4 13 8 25 9 26 0 1 28 6 61 12 59 10 268 6 313 -5z m2060 0 c26 -5 32 -11 30 -28 -2 -11 -9 -20 -15 -19 -7 2 -44 6 -83 9 -54 5 -70 10 -66 20 3 8 -1 14 -9 14 -8 0 -15 -7 -15 -15 0 -12 -18 -15 -101 -15 -90 0 -100 2 -97 18 2 13 17 19 63 23 67 8 242 3 293 -7z m-984 -28 c291 -24 570 -41 846 -51 191 -7 207 -11 213 -42 4 -24 4 -24 -57 -18 -33 3 -185 10 -336 15 -151 6 -374 15 -495 21 -269 13 -539 13 -813 -1 -114 -5 -333 -14 -487 -20 -154 -5 -301 -13 -327 -16 -47 -6 -48 -6 -48 20 0 20 5 26 23 27 12 0 31 2 42 4 11 2 90 7 175 10 85 3 247 12 360 20 113 8 284 19 380 25 96 6 177 13 179 16 9 8 169 4 345 -10z m141 -121 c33 -2 143 -6 245 -9 102 -4 230 -9 285 -11 55 -2 172 -7 260 -11 199 -8 190 -6 190 -33 0 -23 0 -23 -165 -22 -91 1 -298 6 -460 11 -377 12 -1091 12 -1470 0 -162 -5 -362 -10 -445 -11 -134 -1 -150 1 -153 16 -2 9 0 21 5 25 4 4 94 11 198 14 105 4 210 9 235 11 25 2 135 7 245 11 110 4 274 10 365 14 155 7 531 4 665 -5z m820 -130 c33 -1 102 -3 153 -3 91 -2 92 -2 92 -27 l0 -25 -1430 0 -1430 0 0 25 c0 23 4 25 48 26 475 14 2228 17 2567 4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1222 1660 c0 -92 3 -160 9 -160 5 0 9 59 10 135 1 74 2 145 2 157 1 12 -4 23 -10 25 -7 3 -11 -45 -11 -157z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1220 1440 c0 -27 4 -50 9 -50 12 0 17 27 13 68 -6 50 -22 38 -22 -18z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1759 1909 c0 -2 -2 -75 -3 -161 -2 -112 0 -158 8 -158 13 0 15 304 3 316 -4 4 -7 5 -8 3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1753 1525 c0 -14 5 -25 12 -25 7 0 13 11 13 25 0 14 -6 25 -13 25 -7 0 -12 -11 -12 -25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1504 1660 c0 -96 2 -136 3 -87 2 48 2 126 0 175 -1 48 -3 8 -3 -88z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M944 1480 c0 -80 2 -112 3 -72 2 39 2 105 0 145 -1 39 -3 7 -3 -73z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M663 1450 c0 -16 6 -30 12 -30 6 0 12 14 12 30 0 17 -6 30 -12 30 -6 0 -12 -13 -12 -30z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M709 1478 c-8 -29 -5 -58 5 -58 7 0 13 12 13 30 0 17 -4 30 -9 30 -4 0 -8 -1 -9 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M665 1253 c2 -77 21 -79 21 -3 1 39 -3 60 -11 60 -7 0 -11 -20 -10 -57z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2272 1450 c1 -16 6 -30 13 -30 6 0 12 14 12 30 0 18 -6 30 -13 30 -8 0 -12 -12 -12 -30z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2272 1379 c-1 -37 20 -34 24 4 2 17 -2 27 -10 27 -8 0 -13 -13 -14 -31z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2273 1270 c-1 -48 2 -70 10 -70 8 0 12 23 12 70 0 93 -20 93 -22 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2313 1255 c0 -14 5 -25 12 -25 7 0 13 11 13 25 0 14 -6 25 -13 25 -7 0 -12 -11 -12 -25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M463 1350 c0 -36 2 -50 4 -32 2 17 2 47 0 65 -2 17 -4 3 -4 -33z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2544 1360 c0 -58 1 -81 3 -52 2 28 2 76 0 105 -2 28 -3 5 -3 -53z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1388 1323 c-14 -3 -18 -15 -18 -50 0 -42 2 -45 23 -39 12 3 25 6 30 6 4 0 7 20 7 45 0 45 -3 48 -42 38z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1570 1285 c0 -32 4 -45 14 -45 8 0 21 -3 30 -6 13 -5 16 2 16 39 0 32 -5 47 -16 51 -36 14 -44 7 -44 -39z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1179 1148 c-6 -92 -3 -188 7 -188 8 0 11 31 11 100 0 55 -4 100 -8 100 -5 0 -9 -6 -10 -12z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1219 1121 c-4 -88 -2 -125 9 -129 9 -3 12 15 12 62 0 36 0 69 1 73 0 4 -4 9 -10 11 -6 2 -11 -6 -12 -17z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1178 913 c-10 -22 -1 -137 10 -141 10 -3 12 15 11 72 -1 66 -10 93 -21 69z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1219 825 c-5 -23 -2 -49 7 -52 6 -2 11 10 12 27 0 16 -4 30 -9 30 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1166 744 c-31 -30 -9 -84 34 -84 17 0 50 34 50 52 0 13 -39 48 -54 48 -8 0 -22 -7 -30 -16z m54 -34 c0 -13 -7 -20 -20 -20 -13 0 -20 7 -20 20 0 13 7 20 20 20 13 0 20 -7 20 -20z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755 988 c1 -130 5 -213 11 -215 6 -2 10 74 10 212 0 151 -3 215 -11 215 -8 0 -11 -63 -10 -212z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1798 1143 c-2 -10 -4 -96 -3 -192 1 -123 5 -176 13 -179 8 -2 11 46 9 187 -2 174 -8 230 -19 184z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1768 749 c-26 -15 -23 -65 3 -80 34 -18 69 3 69 40 0 42 -36 62 -72 40z m50 -36 c5 -17 -26 -29 -40 -15 -6 6 -7 15 -3 22 9 14 37 9 43 -7z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M847 1183 c-4 -3 -7 -23 -7 -44 0 -32 3 -36 20 -32 16 4 20 14 20 44 0 37 -15 51 -33 32z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2122 1159 c2 -37 7 -45 26 -47 20 -3 22 1 22 37 0 23 -4 41 -9 41 -5 0 -17 3 -26 6 -14 6 -16 0 -13 -37z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M380 1136 l-45 -12 -3 -72 c-3 -80 -5 -78 71 -66 l37 7 0 78 c0 44 -3 79 -7 78 -5 -1 -28 -6 -53 -13z m28 -127 c-7 -5 -23 -9 -35 -9 -21 0 -23 5 -23 55 0 53 1 55 33 63 l32 8 3 -54 c2 -37 -1 -58 -10 -63z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M377 1093 c-14 -13 -7 -63 8 -63 10 0 15 11 15 35 0 33 -8 43 -23 28z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2602 1068 c2 -22 9 -34 21 -36 14 -3 17 4 17 32 0 30 -4 36 -21 36 -17 0 -20 -5 -17 -32z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M708 1073 c-9 -20 -1 -107 10 -111 8 -2 11 14 10 57 -2 54 -10 76 -20 54z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M669 1049 c-8 -40 -5 -89 6 -89 14 0 16 72 3 86 -5 4 -8 5 -9 3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M664 860 c1 -58 5 -90 12 -90 7 0 11 32 11 90 -1 61 -4 90 -12 90 -8 0 -11 -28 -11 -90z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M704 860 c0 -60 4 -90 12 -90 7 0 11 30 11 90 -1 58 -5 90 -12 90 -7 0 -11 -32 -11 -90z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M674 740 c-28 -11 -36 -43 -17 -69 16 -24 55 -28 73 -7 29 36 -13 93 -56 76z m42 -31 c3 -6 0 -17 -7 -25 -18 -17 -44 -2 -36 20 7 18 33 21 43 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1504 845 c0 -110 2 -156 3 -103 2 53 2 143 0 200 -1 57 -3 13 -3 -97z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2273 940 c0 -91 4 -139 11 -137 14 5 14 269 0 274 -7 2 -11 -43 -11 -137z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2311 990 c-1 -48 1 -60 14 -60 8 0 15 5 15 10 0 6 -6 10 -12 10 -9 0 -8 4 2 10 13 9 13 11 0 20 -9 6 -10 10 -3 10 14 0 10 53 -4 57 -6 2 -11 -22 -12 -57z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2313 895 c0 -14 5 -25 12 -25 7 0 13 11 13 25 0 14 -6 25 -13 25 -7 0 -12 -11 -12 -25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2312 829 c-1 -37 20 -34 24 4 2 17 -2 27 -10 27 -8 0 -13 -13 -14 -31z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2288 743 c-22 -5 -35 -50 -21 -72 13 -21 57 -26 72 -7 27 33 -9 89 -51 79z m37 -33 c4 -6 1 -18 -6 -26 -11 -13 -14 -13 -27 0 -8 8 -11 19 -8 25 9 14 33 14 41 1z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M944 745 c0 -88 2 -123 3 -77 2 46 2 118 0 160 -1 42 -3 5 -3 -83z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1568 223 c23 -2 61 -2 85 0 23 2 4 4 -43 4 -47 0 -66 -2 -42 -4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1618 93 c34 -2 90 -2 125 0 34 2 6 3 -63 3 -69 0 -97 -1 -62 -3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 1694 c-5 -44 -2 -101 6 -107 6 -6 6 -10 -3 -14 -13 -5 -7 -23 9 -23 11 0 7 136 -4 147 -4 3 -7 2 -8 -3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2789 1620 c-1 -11 -2 -30 -2 -42 -1 -12 3 -23 9 -25 6 -2 11 15 11 42 1 43 -16 66 -18 25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2750 1547 c0 -20 0 -40 -1 -44 0 -4 4 -9 9 -11 11 -3 11 73 0 84 -5 4 -8 -9 -8 -29z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235 1548 c2 -31 23 -34 23 -3 0 14 -6 25 -13 25 -6 0 -11 -10 -10 -22z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2784 1435 c0 -27 5 -45 12 -45 6 0 11 18 10 45 0 25 -5 45 -11 45 -6 0 -11 -19 -11 -45z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 1445 c-5 -23 -2 -49 7 -52 6 -2 11 10 12 27 0 16 -4 30 -9 30 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239 1448 c0 -2 -2 -22 -3 -45 -2 -28 1 -43 9 -43 7 0 12 17 11 45 0 25 -4 45 -8 45 -4 0 -8 -1 -9 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2749 1445 c-5 -23 -2 -49 7 -52 6 -2 11 10 12 27 0 16 -4 30 -9 30 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2745 1243 c1 -85 5 -138 11 -140 7 -2 11 45 10 137 0 92 -3 140 -10 140 -7 0 -11 -46 -11 -137z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 1345 c-1 -3 -1 -14 -1 -25 0 -46 3 -60 12 -60 5 0 9 20 8 45 -1 25 -6 45 -10 45 -4 0 -8 -2 -9 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235 1220 c0 -71 3 -130 8 -130 10 0 10 -1 12 138 1 83 -2 122 -9 122 -8 0 -11 -42 -11 -130z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2784 1323 c4 -38 25 -41 24 -4 -1 18 -6 31 -14 31 -8 0 -12 -10 -10 -27z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2785 1210 c0 -46 4 -70 11 -70 8 0 12 24 11 70 0 43 -5 70 -11 70 -7 0 -11 -27 -11 -70z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203 1236 c3 -7 0 -19 -6 -25 -8 -8 -8 -11 2 -11 7 0 9 -5 5 -12 -10 -16 -12 -78 -2 -78 4 0 5 -7 2 -15 -4 -8 -2 -15 4 -15 6 0 10 35 11 85 1 56 -3 85 -10 85 -6 0 -9 -6 -6 -14z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2789 1125 c-1 -3 -2 -14 -2 -25 -2 -29 18 -25 20 5 1 14 -2 25 -8 25 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 985 c-5 -23 -2 -49 7 -52 6 -2 11 10 11 27 0 16 -4 30 -9 30 -4 0 -8 -2 -9 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238 983 c-2 -5 -3 -23 -3 -42 1 -53 21 -49 23 4 2 39 -10 60 -20 38z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2749 988 c-7 -19 -1 -118 7 -118 6 0 11 24 11 60 0 33 -4 60 -8 60 -5 0 -9 -1 -10 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2789 988 c0 -2 -2 -29 -3 -60 -2 -38 2 -58 9 -58 8 0 12 22 12 60 0 33 -4 60 -8 60 -5 0 -9 -1 -10 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195 880 c-3 -5 -1 -10 6 -10 8 0 8 -4 -1 -15 -10 -12 -10 -15 4 -15 10 0 16 9 16 25 0 25 -14 33 -25 15z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2744 815 c0 -30 5 -45 13 -45 9 0 13 14 11 45 -1 26 -6 45 -12 45 -7 0 -12 -18 -12 -45z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2785 818 c3 -58 22 -60 22 -3 0 29 -4 45 -12 45 -8 0 -11 -15 -10 -42z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 828 c-8 -31 -5 -58 6 -58 9 0 13 11 13 30 -1 17 -5 30 -10 30 -4 0 -8 -1 -9 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238 825 c-8 -8 3 -55 13 -55 5 0 9 14 9 30 0 28 -9 38 -22 25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181 718 c-13 -33 9 -63 45 -63 35 0 56 43 34 69 -20 25 -69 20 -79 -6z m65 -9 c3 -6 0 -17 -7 -25 -18 -17 -44 -2 -36 20 7 18 33 21 43 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2741 718 c-20 -52 57 -95 80 -45 16 36 -3 67 -42 67 -22 0 -32 -6 -38 -22z m59 -17 c0 -21 -26 -36 -36 -20 -9 15 3 39 21 39 8 0 15 -9 15 -19z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPorticoLogoBlue);\nexport default __webpack_public_path__ + \"static/media/portico-logo-blue.ca714e1cba3954678f8cf2e8c77adf5d.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {\n  CContainer,\n  CHeader,\n  CHeaderBrand,\n  CHeaderDivider,\n  CHeaderToggler,\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport { cilMenu } from '@coreui/icons'\nimport porticoSVG from 'src/assets/brand/portico-logo-blue.svg'\nimport { CImage } from '@coreui/react'\n\nimport { AppBreadcrumb } from './index'\n\nconst AppHeader = () => {\n  const dispatch = useDispatch()\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  return (\n    <CHeader position=\"sticky\" className=\"mb-4\">\n      <CContainer fluid>\n        <CHeaderToggler\n          className=\"ps-1\"\n          onClick={() => dispatch({ type: 'set', sidebarShow: !sidebarShow })}\n        >\n          <CIcon icon={cilMenu} size=\"lg\" />\n        </CHeaderToggler>\n        <CHeaderBrand className=\"mx-auto d-md-none\" to=\"/\">\n          <CImage rounded align=\"center\" src={porticoSVG} width={50} height={50} />\n        </CHeaderBrand>\n      </CContainer>\n      <CHeaderDivider />\n      <CContainer fluid>\n        <AppBreadcrumb />\n      </CContainer>\n    </CHeader>\n  )\n}\n\nexport default AppHeader\n","import React from 'react'\nimport { NavLink, useLocation } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { CBadge } from '@coreui/react'\n\nimport { useLocalStorageContext } from 'src/contexts/LocalStorageContext'\n\nexport const AppSidebarNav = ({ items }) => {\n\n  const localStorageContext = useLocalStorageContext();\n  const { networkStatus } = localStorageContext;\n\n  const location = useLocation()\n  const navLink = (name, icon, badge) => {\n    return (\n      <>\n        {icon && icon}\n        {name && name}\n        {badge && (\n          <CBadge color={badge.color} className=\"ms-auto\">\n            {badge.text}\n          </CBadge>\n        )}\n      </>\n    )\n  }\n\n  const navItem = (item, index) => {\n    const { component, name, badge, icon, ...rest } = item\n    const Component = component\n    const newWindow = {...rest}.to && {...rest}.to.includes(\"polkadot\") ? \"_blank\" : \"\"; \n    return (\n      <Component\n        {...(rest.to &&\n          !rest.items && {\n            component: NavLink,\n          })}\n        key={index}\n        {...rest}\n        target={newWindow}\n        disabled={networkStatus === 'OK' ? false : true}\n      >\n        {navLink(name, icon, badge)}\n      </Component>\n    )\n  }\n  const navGroup = (item, index) => {\n    const { component, name, icon, to, ...rest } = item\n    const Component = component\n    return (\n      <Component\n        idx={String(index)}\n        key={index}\n        toggler={networkStatus === 'OK' ? navLink(name, icon): false}\n        visible={location.pathname.startsWith(to)}\n        {...rest}\n      >\n        {item.items?.map((item, index) =>\n          item.items ? navGroup(item, index) : navItem(item, index),\n        )}\n      </Component>\n    )\n  }\n\n  return (\n    <React.Fragment>\n      {items &&\n        items.map((item, index) => (item.items ? navGroup(item, index) : navItem(item, index)))}\n    </React.Fragment>\n  )\n}\n\nAppSidebarNav.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.any).isRequired,\n}\n","var _g;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgPorticoLogoWhite(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: \"300.000000pt\",\n    height: \"293.000000pt\",\n    viewBox: \"0 0 300.000000 293.000000\",\n    preserveAspectRatio: \"xMidYMid meet\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(0.000000,293.000000) scale(0.100000,-0.100000)\",\n    fill: \"#e3e3e3\",\n    stroke: \"none\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1425 2856 c-64 -39 -439 -253 -820 -468 -82 -47 -239 -133 -347 -193 -195 -106 -198 -108 -198 -141 0 -28 4 -34 34 -44 19 -6 36 -19 38 -28 3 -11 28 -23 71 -36 66 -18 67 -19 67 -52 0 -28 -5 -36 -25 -44 -22 -8 -25 -15 -25 -58 0 -27 3 -83 6 -125 7 -72 8 -77 35 -86 22 -7 29 -16 29 -35 0 -15 5 -26 10 -26 14 0 14 -347 0 -355 -6 -3 -10 -22 -10 -41 0 -36 -18 -49 -80 -60 -44 -8 -51 -13 -48 -36 2 -19 9 -23 40 -23 21 0 38 3 38 8 0 4 4 6 9 2 5 -3 12 -1 16 5 15 24 25 6 25 -45 0 -30 5 -55 10 -55 6 0 10 -78 10 -215 0 -126 -4 -215 -9 -215 -17 0 -42 -32 -37 -47 4 -9 -1 -17 -14 -20 -16 -4 -20 -14 -20 -44 0 -35 -2 -39 -26 -39 -26 0 -26 -2 -22 -45 l6 -45 -34 0 -34 0 0 -50 0 -50 -45 0 -45 0 1 -65 2 -65 1468 0 1469 0 0 65 0 65 -45 0 -45 0 0 50 c0 49 -1 50 -30 50 -29 0 -30 2 -30 45 0 41 -2 45 -25 45 -22 0 -25 4 -25 40 0 29 -4 40 -15 40 -9 0 -15 9 -15 24 0 14 -8 31 -19 38 -17 12 -19 33 -26 220 -6 189 -5 207 10 216 15 8 17 19 13 61 -4 45 -3 51 11 45 55 -23 93 -27 108 -11 22 21 4 43 -42 51 -19 4 -35 11 -35 16 0 6 -3 9 -7 9 -26 -4 -33 4 -33 41 0 29 -4 40 -15 40 -13 0 -15 26 -15 175 0 149 2 175 15 175 9 0 15 9 15 25 0 17 8 29 24 36 16 8 26 23 31 46 3 19 4 37 1 40 -3 3 -1 14 5 25 6 12 8 45 3 84 -5 56 -10 67 -30 76 -18 9 -24 19 -24 43 0 32 2 33 70 51 54 14 70 22 72 38 2 13 14 23 36 28 31 8 33 12 30 45 -3 36 -4 37 -193 140 -254 140 -532 295 -630 353 -122 72 -614 350 -617 349 -2 0 -34 -20 -73 -43z m249 -97 c88 -51 274 -156 411 -234 320 -182 559 -315 708 -394 71 -38 117 -69 117 -78 0 -11 -7 -14 -25 -9 -34 9 -432 220 -725 386 -509 288 -641 360 -655 360 -12 0 -160 -81 -640 -350 -261 -146 -499 -276 -648 -353 -90 -46 -109 -53 -114 -40 -8 20 5 30 157 110 129 68 279 152 650 363 118 67 287 163 375 212 88 50 169 97 180 104 11 8 26 14 33 14 8 0 87 -41 176 -91z m76 -141 c232 -125 360 -198 360 -205 0 -4 -512 255 -575 292 l-30 18 -192 -101 c-245 -129 -433 -223 -433 -218 0 8 124 78 380 215 l243 130 31 -16 c17 -9 114 -61 216 -115z m7 -55 c142 -71 339 -166 438 -212 507 -238 645 -309 645 -330 0 -12 -4 -21 -9 -21 -4 0 -167 72 -362 161 -195 89 -426 194 -514 234 -88 40 -226 105 -306 144 l-147 71 -183 -89 c-101 -49 -332 -157 -514 -239 -181 -83 -399 -182 -482 -220 -151 -70 -153 -70 -153 -45 0 22 25 36 282 162 156 76 387 186 513 245 177 83 396 192 532 265 1 0 118 -56 260 -126z m-95 -84 c214 -99 736 -335 1048 -475 35 -16 58 -30 50 -32 -15 -2 -596 254 -1053 465 l-208 96 -152 -73 c-84 -39 -255 -118 -382 -175 -126 -56 -331 -149 -455 -205 -261 -118 -270 -122 -270 -111 0 5 125 65 278 134 152 69 376 171 497 226 121 54 276 126 345 159 69 34 130 61 137 61 6 1 80 -31 165 -70z m-176 -85 c-3 -8 -11 -14 -18 -14 -18 0 -15 89 3 101 11 7 15 -1 17 -32 2 -23 1 -48 -2 -55z m64 36 c0 -27 -4 -50 -10 -50 -5 0 -10 23 -10 50 0 28 5 50 10 50 6 0 10 -22 10 -50z m-120 -25 c0 -25 -2 -45 -4 -45 -2 0 -11 -3 -20 -6 -13 -5 -16 2 -16 38 0 47 5 58 27 58 9 0 13 -14 13 -45z m180 -6 c0 -31 -4 -48 -10 -44 -5 3 -10 26 -10 51 0 24 5 44 10 44 6 0 10 -23 10 -51z m-262 -70 c-10 -6 -14 3 -16 38 -2 30 1 49 10 54 10 6 14 -3 16 -38 2 -30 -1 -49 -10 -54z m322 45 c0 -24 -4 -44 -10 -44 -5 0 -10 23 -10 51 0 31 4 48 10 44 6 -3 10 -26 10 -51z m-370 -24 c0 -38 -4 -50 -15 -50 -11 0 -15 11 -15 43 0 24 3 47 7 50 16 17 23 3 23 -43z m432 -8 c2 -26 0 -41 -7 -39 -5 2 -11 26 -13 53 -4 61 14 48 20 -14z m-492 -16 c0 -30 -5 -46 -15 -50 -12 -4 -15 4 -15 38 0 23 3 46 7 49 15 16 23 4 23 -37z m558 -10 c2 -36 0 -47 -10 -44 -8 3 -14 24 -16 52 -2 36 0 47 10 44 8 -3 14 -24 16 -52z m-137 -27 c228 -99 819 -350 967 -411 109 -46 122 -53 122 -75 0 -20 -4 -24 -17 -18 -10 4 -49 18 -88 32 -38 14 -155 63 -260 108 -104 46 -255 108 -335 140 -80 31 -172 70 -205 85 -33 16 -123 55 -200 87 l-140 59 -152 -61 c-83 -34 -157 -66 -165 -72 -7 -6 -121 -55 -253 -108 -132 -53 -244 -101 -250 -105 -13 -10 -421 -180 -432 -180 -3 0 -3 12 -1 27 3 24 15 32 113 74 61 26 254 108 430 183 425 180 685 293 692 300 4 3 7 6 8 6 1 0 76 -32 166 -71z m-481 7 c0 -30 -5 -46 -15 -50 -12 -4 -15 4 -15 38 0 23 3 46 7 49 15 16 23 4 23 -37z m678 -9 c3 -39 0 -46 -12 -41 -11 4 -16 20 -16 51 0 61 24 52 28 -10z m-740 -19 c-4 -59 -28 -63 -28 -4 0 35 4 46 16 46 12 0 14 -9 12 -42z m802 -4 c0 -59 -24 -55 -28 4 -2 33 0 42 12 42 12 0 16 -11 16 -46z m60 -31 c0 -61 -24 -52 -28 10 -3 39 0 46 12 41 11 -4 16 -20 16 -51z m-920 8 c0 -25 -5 -41 -15 -45 -12 -4 -15 4 -15 39 0 33 4 45 15 45 11 0 15 -11 15 -39z m-62 -23 c-4 -55 -28 -64 -28 -10 0 21 3 42 7 45 16 17 24 4 21 -35z m638 -8 c76 -27 139 -50 141 -50 2 0 3 -16 3 -36 0 -21 -4 -33 -10 -29 -5 3 -10 15 -10 26 0 14 -13 25 -46 39 -79 34 -90 35 -120 5 -23 -23 -26 -32 -21 -68 3 -23 11 -43 16 -45 6 -2 8 -9 5 -14 -4 -6 -2 -8 3 -5 6 4 16 0 23 -8 15 -18 71 -20 88 -3 20 20 14 67 -13 93 -30 30 -61 32 -75 4 -15 -26 11 -69 41 -69 28 0 22 43 -6 48 -20 4 -20 3 -1 -11 11 -8 15 -17 9 -20 -16 -10 -44 26 -33 43 13 21 58 -3 66 -34 8 -32 -1 -46 -31 -46 -27 0 -75 51 -75 80 0 24 26 50 51 50 80 0 141 -118 89 -170 -38 -38 -135 -13 -165 44 -22 40 -14 117 15 146 19 19 19 20 -27 40 -25 11 -47 19 -47 18 -1 -2 1 -59 4 -128 l5 -124 98 -34 c53 -19 97 -39 97 -43 0 -14 -13 -11 -114 25 l-96 34 -91 -34 c-95 -35 -119 -40 -119 -25 0 5 43 24 95 42 l95 32 0 124 c0 67 -4 123 -9 123 -17 0 -76 -29 -60 -30 24 0 48 -32 55 -71 4 -26 3 -30 -5 -19 -9 12 -11 11 -11 -8 0 -13 -7 -36 -15 -52 -9 -17 -15 -32 -14 -36 0 -3 -3 -9 -7 -12 -4 -4 -4 0 0 8 5 9 2 8 -7 -2 -8 -10 -16 -15 -19 -13 -3 3 -11 -1 -18 -10 -17 -20 -79 -19 -102 2 -29 26 -24 96 10 133 35 39 98 52 118 25 20 -28 17 -50 -12 -85 -20 -23 -34 -30 -53 -28 -34 4 -41 46 -12 72 22 20 51 15 51 -7 0 -20 -26 -41 -35 -27 -3 5 -1 10 4 10 6 0 11 5 11 10 0 16 -17 11 -24 -7 -10 -24 8 -37 33 -24 26 14 28 57 3 70 -32 17 -81 -24 -82 -69 0 -33 17 -50 50 -50 58 0 110 73 89 127 -19 50 -47 54 -133 22 -44 -17 -55 -26 -53 -42 1 -11 -4 -22 -11 -24 -10 -4 -13 4 -10 28 3 32 6 34 133 85 72 29 135 53 141 53 7 1 74 -21 150 -49z m402 2 c2 -33 0 -42 -12 -42 -12 0 -16 11 -16 46 0 59 24 55 28 -4z m-1110 -63 c-10 -6 -14 2 -16 33 -2 26 1 44 10 49 10 6 14 -2 16 -33 2 -26 -1 -44 -10 -49z m1162 35 c0 -27 -4 -43 -10 -39 -5 3 -10 24 -10 46 0 21 5 39 10 39 6 0 10 -21 10 -46z m-1210 -19 c0 -33 -4 -45 -15 -45 -11 0 -15 11 -15 38 0 21 3 42 7 45 16 16 23 4 23 -38z m1270 -6 c0 -21 -4 -39 -10 -39 -5 0 -10 21 -10 46 0 27 4 43 10 39 6 -3 10 -24 10 -46z m-1326 -15 c-1 -19 -6 -40 -13 -47 -8 -8 -11 1 -11 36 0 31 4 47 13 47 7 0 12 -13 11 -36z m1376 -4 c0 -22 -4 -40 -10 -40 -5 0 -10 18 -10 40 0 22 5 40 10 40 6 0 10 -18 10 -40z m-1432 -22 c-4 -55 -28 -64 -28 -10 0 21 3 42 7 45 16 17 24 4 21 -35z m1482 2 c0 -22 -4 -40 -10 -40 -5 0 -10 18 -10 40 0 22 5 40 10 40 6 0 10 -18 10 -40z m57 -30 c0 -25 -4 -39 -11 -37 -13 4 -20 51 -12 73 10 27 23 6 23 -36z m-1587 0 c0 -29 -4 -40 -15 -40 -11 0 -15 11 -15 40 0 29 4 40 15 40 11 0 15 -11 15 -40z m468 18 c-3 -7 -59 -35 -126 -63 l-122 -49 0 -112 0 -113 55 -20 c30 -11 66 -23 80 -27 25 -6 35 -24 14 -24 -6 0 -43 11 -82 25 l-70 26 -64 -26 c-65 -26 -93 -31 -93 -17 0 4 31 18 70 31 l69 24 3 125 3 126 125 52 c138 58 143 59 138 42z m718 -24 c49 -20 106 -45 127 -55 l38 -20 -7 -118 -7 -118 79 -28 c43 -16 83 -32 89 -37 17 -15 -20 -8 -95 17 l-73 25 -61 -24 c-76 -30 -91 -33 -93 -21 -1 6 30 21 68 34 l69 25 0 121 0 121 -112 46 c-62 25 -114 51 -116 57 -5 15 -7 16 94 -25z m454 -15 c0 -21 -4 -39 -10 -39 -5 0 -10 21 -10 46 0 27 4 43 10 39 6 -3 10 -24 10 -46z m-1690 1 c0 -29 -4 -40 -15 -40 -10 0 -15 10 -15 33 0 19 3 37 7 40 15 16 23 5 23 -33z m-50 -19 c0 -25 -5 -41 -15 -45 -12 -4 -15 3 -15 33 0 21 3 41 7 44 15 16 23 5 23 -32z m1790 -2 c0 -28 -4 -39 -12 -37 -17 6 -17 78 0 78 7 0 12 -15 12 -41z m-477 -42 l22 -15 -30 -8 c-16 -4 -50 -15 -73 -26 -43 -18 -44 -18 -68 1 -13 10 -21 20 -19 23 3 2 7 22 11 44 3 21 8 42 10 46 5 7 107 -38 147 -65z m-1363 24 c0 -16 -7 -34 -15 -41 -13 -11 -15 -7 -15 27 0 22 3 43 6 46 12 12 24 -4 24 -32z m633 32 c3 -5 8 -29 12 -55 6 -40 4 -48 -14 -57 -15 -9 -29 -8 -58 4 -68 26 -117 33 -131 18 -7 -7 -18 -13 -25 -13 -17 1 34 39 53 40 8 1 44 16 80 35 72 37 77 38 83 28z m1255 -37 c2 -28 0 -37 -10 -34 -7 3 -14 22 -16 42 -2 28 0 37 10 34 7 -3 14 -22 16 -42z m52 -22 c0 -21 -4 -34 -11 -32 -6 2 -10 7 -10 11 1 4 1 21 1 38 0 17 4 28 10 24 6 -3 10 -22 10 -41z m-1990 2 c0 -21 -6 -36 -15 -40 -12 -4 -15 3 -15 34 0 29 4 40 15 40 10 0 15 -10 15 -34z m400 14 c0 -6 -18 -19 -41 -29 -40 -18 -40 -19 -14 -25 60 -15 54 -119 -12 -176 -39 -35 -75 -38 -103 -10 -47 47 0 150 69 150 45 0 69 -63 34 -91 -10 -9 -14 -9 -10 -2 11 17 -2 61 -20 67 -37 14 -73 -37 -58 -83 9 -30 59 -28 90 4 46 45 23 125 -36 125 -37 0 -89 -26 -89 -45 0 -7 -4 -17 -10 -20 -6 -4 -10 6 -10 23 0 27 6 32 103 75 56 25 103 46 105 46 1 1 2 -4 2 -9z m1325 -58 c22 -8 43 -20 47 -26 11 -16 10 -56 -2 -56 -5 0 -10 11 -10 24 0 19 -9 27 -40 40 -54 21 -67 20 -95 -9 -28 -27 -32 -70 -10 -101 8 -12 12 -24 9 -26 -2 -3 3 -11 13 -19 14 -12 16 -12 8 0 -6 11 -3 13 17 8 55 -14 82 53 39 96 -28 28 -55 13 -59 -32 -4 -40 -22 -30 -22 13 0 91 114 64 127 -30 4 -34 1 -46 -17 -64 -47 -47 -150 1 -150 71 0 40 23 93 49 111 21 15 20 16 -24 32 -25 10 -43 22 -40 27 3 4 31 -3 63 -17 31 -14 75 -33 97 -42z m315 22 c0 -19 -4 -34 -10 -34 -5 0 -10 18 -10 41 0 24 4 38 10 34 6 -3 10 -22 10 -41z m-2092 -1 c-4 -48 -28 -57 -28 -10 0 18 3 37 7 40 16 16 24 4 21 -30z m-50 -20 c-4 -48 -28 -57 -28 -10 0 18 3 37 7 40 16 16 24 4 21 -30z m2192 2 c0 -24 -5 -35 -15 -35 -10 0 -15 11 -15 35 0 24 5 35 15 35 10 0 15 -11 15 -35z m-2240 -19 c0 -19 -4 -38 -10 -41 -6 -4 -10 10 -10 34 0 23 5 41 10 41 6 0 10 -15 10 -34z m2285 -4 c0 -46 -19 -44 -23 2 -3 28 0 37 10 34 7 -3 13 -19 13 -36z m-2333 -55 c-2 -4 -8 -5 -13 -2 -11 7 -12 58 -1 69 7 8 21 -53 14 -67z m2378 32 c0 -24 -4 -38 -10 -34 -5 3 -10 22 -10 41 0 19 5 34 10 34 6 0 10 -18 10 -41z m-1580 12 c36 -15 46 -24 51 -50 8 -37 -6 -42 -15 -6 -7 26 -59 55 -99 55 -30 0 -57 -29 -57 -62 0 -60 94 -106 120 -58 15 29 -13 80 -44 80 -29 0 -48 -22 -39 -45 4 -13 3 -16 -5 -11 -16 9 -15 49 0 64 33 33 101 -7 112 -66 10 -60 -38 -86 -111 -60 -57 21 -70 111 -23 158 24 24 51 24 110 1z m145 -39 c3 -7 5 -118 6 -245 1 -358 1 -357 -16 -357 -8 0 -15 7 -15 16 0 8 -5 12 -11 9 -6 -4 -8 -13 -5 -20 3 -8 -3 -17 -14 -20 -11 -3 -30 -19 -44 -36 -30 -36 -46 -37 -46 -4 0 14 -4 25 -10 25 -6 0 -10 59 -10 157 0 121 3 154 12 145 7 -7 13 -54 15 -119 2 -60 6 -113 8 -120 2 -7 17 -11 32 -10 28 2 28 4 28 67 0 138 -9 177 -56 232 -37 44 -40 52 -26 60 10 5 17 20 17 34 0 16 8 28 24 35 33 15 46 49 46 119 0 54 2 60 28 72 25 12 27 12 30 -7 2 -11 5 -26 7 -33z m500 42 c21 -14 25 -24 25 -69 0 -70 13 -102 50 -123 22 -12 30 -24 30 -44 0 -18 5 -28 15 -28 23 0 18 -25 -9 -39 -13 -8 -36 -35 -50 -61 -22 -40 -26 -59 -24 -122 1 -41 -1 -79 -4 -84 -10 -17 8 -47 31 -49 32 -2 39 19 37 120 -1 64 2 99 14 120 14 28 15 22 18 -129 2 -131 0 -161 -12 -168 -8 -5 -12 -16 -9 -28 8 -29 -14 -25 -43 9 -14 17 -33 32 -42 35 -15 5 -17 20 -17 111 1 71 -3 105 -10 105 -8 0 -11 -32 -10 -100 1 -86 -2 -100 -15 -98 -13 3 -15 38 -18 258 -3 234 3 400 14 400 3 0 16 -7 29 -16z m249 -6 c19 -26 21 -58 5 -58 -7 0 -9 -11 -6 -30 6 -28 -4 -44 -28 -45 -5 -1 -9 -5 -8 -11 1 -5 -6 -10 -15 -11 -9 -1 -31 -5 -48 -8 -67 -14 -90 71 -33 120 41 34 92 32 97 -3 2 -13 0 -31 -4 -40 -6 -13 -8 -10 -13 13 -8 39 -45 41 -73 5 -23 -31 -15 -58 18 -66 69 -18 125 93 63 126 -32 17 -117 -14 -131 -49 -9 -21 -12 -23 -15 -8 -9 35 3 51 52 68 72 25 120 24 139 -3z m-514 -54 c0 -32 2 -35 22 -29 17 6 20 4 15 -10 -4 -9 -7 -95 -7 -190 0 -159 -1 -174 -17 -173 -10 0 -26 -3 -35 -7 -17 -7 -18 7 -18 213 0 219 1 228 33 231 4 1 7 -15 7 -35z m950 -19 c47 -20 94 -38 105 -40 31 -4 199 -65 209 -76 15 -14 -9 -11 -51 6 -19 8 -44 15 -54 15 -27 0 -49 -28 -49 -64 0 -27 6 -36 34 -51 55 -30 94 2 61 51 -21 32 -57 29 -65 -6 -5 -22 -7 -23 -13 -7 -17 46 35 73 80 42 42 -30 36 -109 -9 -120 -29 -7 -93 19 -102 40 -14 38 0 99 28 117 6 4 -2 11 -18 18 -16 6 -33 13 -37 16 -5 3 -9 -39 -9 -94 l0 -99 63 -18 c75 -22 79 -24 72 -35 -3 -5 -36 2 -73 14 l-69 24 -74 -24 c-85 -27 -92 -28 -87 -13 2 6 35 21 73 33 l70 22 3 95 3 95 -108 45 c-58 25 -108 50 -111 57 -4 14 1 12 128 -43z m-1770 38 c0 -8 -194 -93 -211 -93 -6 0 -9 -40 -7 -97 l3 -96 73 -25 c39 -13 72 -28 72 -33 0 -11 7 -13 -81 15 -75 22 -78 23 -122 6 -65 -25 -97 -32 -97 -21 0 5 29 20 65 33 l65 23 0 92 c0 51 -3 93 -7 93 -5 0 -18 -3 -29 -6 -21 -6 -21 -6 2 -29 24 -25 32 -55 14 -55 -5 0 -10 -11 -10 -23 0 -45 -79 -89 -119 -67 -29 15 -29 76 1 107 41 44 107 20 88 -32 -6 -17 -7 -16 -14 8 -8 32 -35 36 -60 8 -37 -41 3 -88 51 -61 39 22 51 61 29 94 -20 31 -40 32 -100 6 -32 -13 -46 -16 -46 -7 0 13 127 63 195 76 22 5 81 27 130 49 91 41 115 48 115 35z m154 -19 c8 -22 -11 -54 -33 -54 -24 0 -34 26 -21 51 13 23 46 25 54 3z m606 -204 c0 -213 -1 -220 -20 -220 -19 0 -20 7 -20 198 0 208 4 242 26 242 12 0 14 -39 14 -220z m782 195 c8 -19 8 -29 0 -37 -23 -23 -61 14 -48 47 9 23 35 18 48 -10z m-1127 -5 c17 -18 17 -22 4 -36 -20 -20 -49 -8 -49 20 0 40 18 46 45 16z m283 -421 c-10 -7 -14 36 -16 208 -2 167 1 218 10 224 10 7 14 -36 16 -208 2 -167 -1 -218 -10 -224z m206 243 c-2 -235 -1 -232 -14 -232 -6 0 -10 78 -10 215 0 165 3 215 13 215 9 0 12 -46 11 -198z m363 172 c7 -20 -22 -45 -43 -37 -17 6 -18 25 -2 41 17 17 38 15 45 -4z m-607 -208 c0 -181 -2 -215 -15 -220 -13 -5 -15 23 -15 214 0 189 2 220 15 220 13 0 15 -30 15 -214z m340 -1 c0 -137 -4 -215 -10 -215 -6 0 -10 78 -10 215 0 137 4 215 10 215 6 0 10 -78 10 -215z m718 166 c5 -14 -74 -52 -93 -45 -12 5 -14 15 -9 43 4 20 8 39 11 43 5 9 87 -28 91 -41z m-1700 -10 c4 -48 4 -48 -77 -14 l-35 15 39 24 c54 33 69 28 73 -25z m-75 -47 c26 -9 47 -21 47 -27 0 -7 3 -23 7 -36 4 -17 3 -22 -5 -17 -7 4 -12 16 -12 26 0 21 -55 50 -96 50 -29 0 -54 -25 -54 -55 0 -54 87 -89 110 -45 9 17 6 25 -14 45 -30 30 -56 24 -56 -13 0 -19 -3 -23 -11 -15 -6 6 -9 21 -7 34 2 19 10 25 35 27 42 4 73 -26 73 -72 0 -46 -20 -60 -74 -52 -68 11 -94 63 -61 126 23 44 46 49 118 24z m1873 8 c26 -17 34 -49 19 -78 -8 -15 -12 -31 -10 -34 3 -4 -5 -16 -17 -26 -14 -12 -18 -14 -13 -4 6 11 3 10 -12 -2 -64 -57 -138 23 -80 86 28 31 58 40 81 23 15 -11 17 -20 11 -43 l-9 -29 -4 27 c-4 33 -23 41 -51 22 -25 -18 -28 -62 -5 -71 25 -10 67 10 83 38 13 24 13 29 -3 54 -15 23 -23 26 -49 22 -58 -10 -87 -25 -87 -47 0 -11 -5 -20 -11 -20 -6 0 -9 12 -7 27 2 22 12 31 48 45 48 18 98 23 116 10z m-1746 -49 c0 -14 7 -31 16 -37 11 -9 14 -26 12 -69 l-3 -58 -35 37 c-19 20 -29 34 -22 30 6 -4 12 -2 12 3 0 6 -4 11 -10 11 -5 0 -10 5 -10 11 0 5 5 7 10 4 15 -9 12 4 -5 21 -18 19 -20 71 -2 77 22 8 37 -5 37 -30z m1555 -20 c-2 -21 -4 -47 -4 -58 -1 -14 -4 -16 -9 -7 -5 7 -7 33 -5 57 3 29 0 45 -7 45 -7 0 -10 -22 -9 -65 2 -51 -2 -69 -16 -85 -10 -11 -22 -20 -27 -20 -15 0 -9 107 7 120 8 7 15 23 15 35 0 27 17 36 41 24 12 -6 16 -19 14 -46z m-1951 1 c7 -19 -10 -44 -29 -44 -20 0 -26 28 -9 45 20 19 30 19 38 -1z m2334 4 c16 -16 15 -48 -2 -48 -20 0 -39 27 -32 45 7 18 18 19 34 3z m-2088 -13 c15 -18 5 -35 -21 -35 -14 0 -19 7 -19 25 0 28 21 33 40 10z m356 -41 c12 5 14 -20 14 -165 0 -132 -3 -170 -12 -166 -7 2 -23 0 -35 -4 l-23 -9 0 194 c0 147 3 195 13 199 7 2 15 -9 20 -25 5 -20 13 -28 23 -24z m1096 23 c2 -18 8 -27 20 -27 17 0 18 -13 18 -167 l0 -168 -35 -1 -35 -1 0 193 c0 145 3 193 13 197 16 6 17 5 19 -26z m398 13 c0 -23 -26 -38 -41 -23 -14 14 0 43 22 43 12 0 19 -7 19 -20z m-1563 -192 c-2 -180 -3 -193 -21 -196 -14 -3 -17 0 -12 13 3 9 6 97 6 196 0 149 2 179 14 179 13 0 15 -31 13 -192z m123 2 c0 -145 -3 -190 -12 -190 -10 0 -12 43 -10 190 2 112 7 190 12 190 6 0 10 -76 10 -190z m997 -2 c-2 -165 -4 -193 -18 -196 -13 -2 -15 20 -17 172 -3 168 3 216 28 216 5 0 8 -82 7 -192z m121 2 c-2 -118 -7 -190 -13 -190 -6 0 -11 72 -13 190 -2 166 0 190 13 190 13 0 15 -24 13 -190z m-1288 -15 c0 -167 -2 -195 -15 -195 -13 0 -15 28 -15 188 0 104 3 192 7 195 19 20 23 -10 23 -188z m230 -6 c0 -144 -3 -189 -12 -189 -10 0 -12 44 -10 195 2 122 6 193 12 190 6 -4 10 -86 10 -196z m890 6 c0 -167 -2 -195 -15 -195 -13 0 -15 28 -15 189 0 182 1 192 28 200 1 1 2 -87 2 -194z m230 -6 c0 -114 -4 -189 -10 -189 -9 0 -20 377 -11 386 16 15 21 -32 21 -197z m92 99 c-28 -29 -54 -49 -59 -44 -4 5 -2 11 6 14 8 2 32 24 54 48 22 24 43 42 45 39 3 -2 -18 -28 -46 -57z m-1523 -25 c14 -13 21 -23 15 -23 -14 0 -94 80 -94 94 0 6 12 -2 27 -19 14 -16 38 -40 52 -52z m1114 40 c-26 -34 -28 -43 -29 -142 -1 -58 -6 -107 -11 -108 -7 -3 -9 77 -4 193 1 19 9 32 51 82 24 28 19 9 -7 -25z m-1200 -18 c-4 -11 -1 -13 11 -9 12 5 19 1 22 -12 3 -11 20 -26 37 -35 l32 -16 3 -116 c2 -71 -1 -117 -7 -117 -5 0 -11 -19 -13 -42 -2 -29 -8 -44 -18 -46 -13 -2 -15 9 -13 68 2 52 -1 70 -9 68 -8 -3 -12 -30 -13 -75 0 -66 -2 -72 -31 -97 -18 -14 -36 -26 -42 -26 -16 0 -22 66 -22 241 0 142 2 168 16 173 10 4 13 13 9 25 -4 13 0 23 12 29 22 13 34 6 26 -13z m1685 13 c7 -7 12 -20 12 -31 0 -10 7 -25 15 -33 12 -13 15 -48 15 -185 0 -106 -4 -169 -10 -169 -5 0 -10 -11 -10 -25 0 -14 -4 -25 -9 -25 -4 0 -20 11 -35 25 -15 14 -31 25 -37 25 -5 0 -9 7 -9 15 0 18 -17 20 -22 3 -9 -25 -28 5 -28 43 0 21 -4 39 -10 39 -6 0 -10 46 -10 118 l0 118 34 14 c19 7 37 22 40 32 3 15 10 18 25 13 12 -4 21 -2 21 4 0 6 -5 11 -11 11 -5 0 -7 5 -4 10 8 13 18 13 33 -2z m-1195 -50 c3 -18 6 -62 6 -98 1 -36 4 -73 7 -84 4 -13 2 -17 -7 -14 -10 3 -15 28 -16 84 -2 43 -4 94 -6 112 -2 17 0 32 4 32 4 0 9 -15 12 -32z m-713 -3 c0 -9 7 -18 15 -21 12 -5 15 -32 15 -153 l0 -146 -24 -1 -25 -2 -3 162 c-2 88 -2 164 0 169 6 13 22 7 22 -8z m2090 -11 c0 -19 4 -25 15 -20 13 5 15 -15 15 -142 l0 -147 -25 -1 -25 -2 -2 122 c-1 66 -3 142 -3 169 -1 32 3 47 12 47 7 0 13 -11 13 -26z m-2130 -154 c0 -144 -2 -170 -15 -170 -13 0 -15 25 -15 163 0 90 3 167 7 170 19 20 23 -8 23 -163z m110 0 c0 -107 -4 -170 -10 -170 -6 0 -10 63 -10 170 0 107 4 170 10 170 6 0 10 -63 10 -170z m1980 0 c0 -144 -2 -170 -15 -170 -13 0 -15 26 -15 170 0 144 2 170 15 170 13 0 15 -26 15 -170z m101 157 c-1 -4 -1 -79 -1 -168 0 -108 -3 -158 -10 -154 -14 9 -12 337 2 333 5 -2 9 -7 9 -11z m-2231 -167 c0 -144 -2 -170 -15 -170 -13 0 -15 25 -15 164 0 157 2 167 28 175 1 1 2 -75 2 -169z m210 -5 c0 -103 -4 -165 -10 -165 -6 0 -10 62 -10 165 0 103 4 165 10 165 6 0 10 -62 10 -165z m1880 0 c0 -140 -2 -165 -15 -165 -13 0 -15 25 -15 165 0 140 2 165 15 165 13 0 15 -25 15 -165z m200 0 c0 -103 -4 -165 -10 -165 -6 0 -10 62 -10 165 0 103 4 165 10 165 6 0 10 -62 10 -165z m-1057 69 l92 -25 0 -45 c0 -28 -4 -44 -12 -44 -8 0 -13 14 -13 34 0 33 -8 42 -52 52 -5 1 -11 3 -15 4 -16 5 -29 7 -51 8 -13 1 -20 7 -17 12 3 6 4 10 1 10 -2 0 -11 3 -20 6 -14 5 -16 -9 -16 -124 l0 -130 33 -5 c71 -10 153 -30 162 -39 11 -11 -14 -7 -131 19 -68 15 -77 15 -168 -4 l-96 -20 0 52 c0 39 4 52 15 52 10 0 15 -11 15 -32 l0 -32 75 15 75 15 0 104 c0 96 -1 105 -17 98 -10 -4 -36 -11 -58 -16 -66 -13 -75 -19 -75 -50 0 -20 -5 -29 -16 -29 -12 0 -14 10 -12 47 l3 47 85 22 c110 28 105 28 213 -2z m-143 -123 l0 -79 -50 -11 c-28 -6 -55 -11 -60 -11 -4 0 -7 24 -5 53 2 28 4 64 4 78 1 25 14 31 104 48 4 0 7 -35 7 -78z m170 59 c23 -6 25 -11 28 -80 2 -51 6 -70 12 -60 8 13 10 12 10 -2 0 -11 -8 -18 -20 -18 -11 0 -20 3 -20 8 0 4 -16 8 -36 10 -20 1 -40 5 -45 8 -5 3 -9 39 -9 80 l0 74 28 -6 c15 -4 38 -10 52 -14z m-537 -126 c-3 -10 -17 -8 -61 7 -31 11 -61 24 -66 29 -22 22 -26 6 -26 -94 0 -71 4 -107 13 -114 6 -5 35 -13 62 -17 55 -7 97 -25 60 -25 -11 0 -46 6 -78 14 -39 9 -72 11 -105 5 -26 -5 -62 -11 -79 -14 l-33 -6 0 56 c0 30 5 55 10 55 10 0 15 -29 10 -59 -1 -11 9 -12 51 -7 29 4 56 9 61 12 4 3 8 46 8 96 0 82 -2 89 -17 83 -10 -4 -37 -12 -61 -17 -36 -8 -42 -13 -37 -29 4 -13 2 -19 -9 -19 -12 0 -16 10 -16 35 0 27 4 35 18 35 9 0 44 8 77 18 59 18 60 18 141 -7 56 -16 81 -28 77 -37z m237 46 c0 -5 -8 -10 -17 -11 -10 0 -26 -2 -35 -4 -10 -2 -18 1 -18 5 0 5 12 11 28 13 15 2 30 5 35 6 4 0 7 -3 7 -9z m417 -5 c33 -10 58 -25 73 -45 13 -17 37 -34 53 -38 17 -4 32 -13 35 -20 6 -20 -60 8 -85 35 -12 14 -23 29 -25 34 -2 6 -31 15 -66 22 -34 6 -62 15 -62 19 0 12 20 10 77 -7z m403 -4 c57 -16 65 -21 68 -44 2 -16 -2 -27 -9 -27 -6 0 -9 8 -6 19 3 14 1 18 -9 14 -8 -3 -14 0 -14 7 0 7 -7 10 -15 7 -8 -4 -17 -2 -20 4 -4 5 -12 8 -18 7 -7 -1 -23 4 -35 11 -13 7 -24 11 -25 9 -1 -2 -1 -53 1 -114 l3 -112 50 -6 c53 -7 105 -24 97 -31 -2 -2 -39 4 -82 14 -70 17 -84 17 -149 5 -40 -8 -75 -14 -79 -14 -5 0 -8 27 -8 60 0 33 4 60 10 60 6 0 10 -21 10 -46 0 -35 3 -45 14 -41 7 3 34 9 60 12 l46 7 0 93 0 93 -60 -15 c-37 -10 -60 -21 -60 -29 0 -8 -5 -14 -11 -14 -6 0 -9 12 -7 27 3 24 10 29 68 44 84 22 102 22 180 0z m-900 -11 c0 -5 -6 -10 -14 -10 -7 0 -25 -9 -40 -21 -14 -11 -26 -16 -26 -10 0 6 5 11 10 11 6 0 10 6 10 14 0 13 16 22 48 25 6 0 12 -3 12 -9z m20 -410 l-5 -255 -22 -3 c-19 -3 -23 -10 -23 -42 0 -30 -5 -40 -20 -45 -11 -3 -20 -13 -20 -21 0 -8 -7 -14 -15 -14 -9 0 -15 9 -15 25 0 18 -7 26 -25 31 l-25 6 0 229 c0 146 4 229 10 229 6 0 10 33 10 79 0 75 1 79 25 85 13 3 36 22 51 41 14 19 29 33 33 31 4 -3 13 -1 21 4 22 13 26 -73 20 -380z m492 378 c12 -7 35 -28 51 -45 16 -18 38 -33 48 -33 17 0 19 -8 19 -80 0 -47 4 -80 10 -80 6 0 10 -83 10 -230 0 -222 -1 -230 -20 -230 -21 0 -40 -27 -33 -47 3 -8 -4 -13 -17 -13 -12 0 -18 4 -15 10 3 5 -3 15 -15 22 -14 9 -20 23 -20 49 0 32 -3 37 -30 42 l-29 6 -3 253 c-4 298 -1 388 13 388 5 0 19 -6 31 -12z m-862 -68 c0 -60 -3 -70 -17 -70 -10 0 -28 -3 -41 -6 -23 -6 -23 -5 -20 62 3 63 5 69 28 75 49 14 50 13 50 -61z m155 48 c15 -6 10 -7 -17 -5 l-38 3 0 -42 c0 -37 3 -42 25 -46 14 -3 25 -1 25 3 0 5 7 9 15 9 9 0 15 -10 15 -26 0 -23 -3 -25 -26 -20 -15 4 -38 9 -53 12 -25 5 -26 7 -23 70 4 64 4 64 30 57 15 -3 36 -10 47 -15z m965 -48 c0 -38 -4 -70 -9 -70 -5 0 -23 -3 -40 -6 -28 -6 -31 -4 -31 20 0 26 15 36 22 15 2 -5 11 -7 21 -4 12 5 17 18 17 45 0 37 -1 39 -37 42 l-38 4 35 11 c60 19 60 19 60 -57z m139 59 c30 -11 31 -13 31 -70 0 -38 4 -59 12 -59 6 0 9 -3 5 -6 -3 -4 -25 1 -47 10 -23 9 -46 14 -51 11 -5 -4 -9 21 -9 59 0 72 3 74 59 55z m-1615 -49 c37 -12 64 -25 61 -30 -3 -5 -19 -4 -38 1 -17 6 -41 12 -51 14 -11 3 -24 9 -30 15 -21 21 -26 7 -26 -84 0 -104 -4 -98 75 -112 45 -7 82 -23 55 -24 -8 0 -42 7 -75 14 -56 14 -118 10 -187 -10 -16 -5 -18 4 -18 99 l0 105 58 15 c78 21 100 20 176 -3z m576 9 c-14 -6 -33 -12 -43 -14 -10 -2 -27 -7 -38 -10 -10 -4 -19 -2 -19 3 0 9 69 29 105 30 16 1 15 -1 -5 -9z m1511 -5 c51 -14 56 -19 56 -42 0 -26 0 -26 -9 -5 -7 13 -26 25 -53 32 -23 6 -50 13 -59 17 -14 5 -16 -5 -16 -89 l0 -96 58 -11 c55 -12 100 -29 75 -30 -6 0 -40 7 -75 14 -54 13 -72 13 -128 1 -35 -7 -67 -12 -71 -10 -3 2 -6 25 -7 50 -2 34 1 45 13 45 10 0 15 -10 15 -34 l0 -33 50 10 50 10 0 79 c0 65 -3 79 -14 75 -8 -3 -31 -9 -50 -13 -22 -4 -36 -12 -36 -21 0 -8 -6 -13 -12 -10 -7 2 -13 12 -13 23 0 15 13 23 60 36 77 21 96 21 166 2z m-673 0 c27 -8 29 -23 2 -21 -11 1 -20 5 -20 10 0 4 -4 5 -10 2 -5 -3 -10 -1 -10 4 0 12 6 13 38 5z m320 -18 c13 -3 34 -16 46 -29 15 -16 42 -28 84 -36 72 -14 83 -26 17 -17 -53 8 -78 18 -124 51 -20 15 -48 25 -67 25 -19 0 -34 5 -34 11 0 11 19 10 78 -5z m-1582 -34 c-9 -15 -70 -41 -112 -48 -22 -3 -42 -8 -46 -11 -5 -2 -8 0 -8 6 0 11 19 18 75 27 22 3 51 14 65 24 25 19 37 19 26 2z m1944 3 c23 -5 25 -11 25 -60 l0 -55 -35 6 c-50 9 -50 9 -50 70 0 48 2 55 18 50 9 -3 28 -8 42 -11z m-2096 -1 c25 -10 19 -22 -9 -16 -22 4 -25 1 -25 -26 0 -24 5 -31 26 -36 14 -4 34 -4 45 -1 15 5 19 1 19 -19 0 -31 -1 -31 -62 -9 l-48 17 0 48 c0 50 11 58 54 42z m216 -64 c0 -40 4 -70 10 -70 6 0 10 -83 10 -230 0 -215 -1 -230 -18 -230 -25 0 -42 -19 -42 -47 0 -14 -6 -23 -15 -23 -8 0 -15 -6 -15 -14 0 -9 -7 -12 -21 -9 -11 3 -18 11 -15 19 3 7 -6 22 -19 33 -25 19 -25 20 -25 197 0 99 3 223 7 276 6 94 7 97 32 103 14 3 42 19 61 35 19 16 38 30 43 30 4 0 7 -31 7 -70z m758 4 c16 5 17 -12 14 -213 l-3 -218 -34 -1 -35 -1 0 244 c0 224 1 244 18 247 13 3 18 -4 20 -30 3 -26 7 -32 20 -28z m766 45 c20 -12 34 -25 31 -29 -3 -4 11 -11 30 -14 l35 -7 0 -64 c0 -37 4 -65 10 -65 6 0 10 -78 10 -213 l0 -214 -25 -11 c-15 -7 -25 -20 -25 -32 0 -11 -5 -20 -10 -20 -6 0 -15 -10 -20 -22 -8 -21 -9 -20 -9 10 -1 19 -6 32 -14 32 -7 0 -17 15 -22 33 -7 22 -17 33 -32 35 l-23 3 0 230 c0 146 4 229 10 229 6 0 10 30 10 70 0 39 2 70 4 70 3 0 21 -9 40 -21z m226 -33 c0 -40 -4 -55 -16 -60 -28 -11 -54 -6 -54 9 0 9 9 15 25 15 22 0 25 4 25 35 0 33 -2 35 -25 29 -15 -4 -25 -2 -25 4 0 11 20 19 53 21 14 1 17 -8 17 -53z m-1072 -451 c-2 -1 -20 -5 -40 -9 l-38 -7 0 244 c0 208 2 246 15 251 13 5 15 -26 15 -236 0 -133 3 -239 6 -236 3 4 6 110 7 237 2 194 4 233 17 241 13 8 15 -21 18 -237 1 -135 1 -247 0 -248z m142 392 c0 -52 3 -162 7 -245 5 -137 5 -152 -10 -152 -15 0 -17 24 -17 245 0 157 4 245 10 245 6 0 10 -38 10 -93z m-244 -404 c-3 -7 -10 -13 -16 -13 -16 0 -14 487 3 493 9 3 13 -49 15 -232 1 -130 0 -241 -2 -248z m344 232 c0 -157 -4 -245 -10 -245 -6 0 -10 88 -10 245 0 157 4 245 10 245 6 0 10 -88 10 -245z m-1380 226 c0 -11 -94 -35 -112 -29 -7 3 14 11 47 20 33 8 61 16 63 17 1 0 2 -3 2 -8z m2465 -8 c30 -9 55 -20 55 -24 0 -4 -26 1 -58 10 -31 10 -63 16 -70 13 -6 -2 -12 1 -12 7 0 15 20 14 85 -6z m-1875 -287 c0 -190 -2 -225 -15 -230 -13 -5 -15 24 -15 224 0 198 2 230 15 230 13 0 15 -32 15 -224z m42 202 c2 -15 9 -22 21 -22 16 2 17 -14 17 -200 l0 -201 -35 -2 -35 -2 0 225 c0 188 2 224 14 224 8 0 16 -10 18 -22z m1118 -3 c0 -18 5 -25 20 -25 19 0 20 -7 20 -198 l0 -199 -35 -1 -35 -1 0 224 c0 193 2 225 15 225 9 0 15 -9 15 -25z m-1210 -210 c0 -193 -2 -225 -15 -225 -13 0 -15 30 -15 209 0 115 3 216 6 225 18 47 24 -5 24 -209z m170 5 c0 -134 -4 -220 -10 -220 -9 0 -20 427 -11 436 17 17 21 -23 21 -216z m950 -5 c0 -193 -2 -225 -15 -225 -13 0 -15 31 -15 219 0 212 1 222 28 230 1 1 2 -100 2 -224z m50 6 c0 -181 -2 -220 -14 -224 -8 -3 -17 -3 -20 0 -8 8 -8 407 0 427 3 9 12 16 19 16 11 0 14 -44 15 -219z m117 -4 c5 -196 4 -217 -11 -217 -14 0 -16 24 -16 221 0 156 3 220 11 217 7 -2 13 -77 16 -221z m-1057 -7 c0 -140 -4 -220 -10 -220 -6 0 -10 80 -10 220 0 140 4 220 10 220 6 0 10 -80 10 -220z m1120 0 c0 -134 -4 -220 -10 -220 -5 0 -10 88 -12 220 -2 171 0 220 10 220 9 0 12 -51 12 -220z m-1738 155 c-3 -18 0 -25 12 -25 14 0 16 -21 16 -184 0 -181 0 -184 -22 -189 -12 -4 -23 -5 -25 -4 -2 2 -5 386 -3 420 0 4 6 7 14 7 9 0 12 -8 8 -25z m2088 0 c0 -16 6 -25 15 -25 13 0 15 -27 15 -185 0 -194 2 -185 -41 -189 -8 -1 -11 55 -11 194 0 107 0 203 1 213 2 27 21 20 21 -8z m-2130 -195 c0 -180 -2 -210 -15 -210 -13 0 -15 30 -15 210 0 180 2 210 15 210 13 0 15 -30 15 -210z m110 0 c0 -133 -4 -210 -10 -210 -6 0 -10 77 -10 210 0 133 4 210 10 210 6 0 10 -77 10 -210z m1980 0 c0 -180 -2 -210 -15 -210 -13 0 -15 30 -15 210 0 180 2 210 15 210 13 0 15 -30 15 -210z m100 16 c0 -107 3 -201 6 -210 4 -11 1 -16 -10 -16 -14 0 -16 24 -16 210 0 133 4 210 10 210 6 0 10 -71 10 -194z m-2232 -23 c-2 -154 -6 -207 -15 -211 -10 -3 -13 43 -13 207 0 182 2 211 15 211 13 0 15 -27 13 -207z m212 -3 c0 -133 -4 -210 -10 -210 -6 0 -10 77 -10 210 0 133 4 210 10 210 6 0 10 -77 10 -210z m1878 3 c-2 -154 -6 -207 -15 -211 -10 -3 -13 43 -13 207 0 182 2 211 15 211 13 0 15 -27 13 -207z m202 -4 c0 -137 -3 -208 -10 -204 -6 4 -10 85 -10 211 0 129 4 204 10 204 6 0 10 -77 10 -211z m-1043 -129 c110 -15 123 -18 123 -36 0 -11 -8 -14 -32 -10 -18 3 -69 10 -113 16 -43 6 -83 16 -87 23 -6 9 -8 8 -8 -4 0 -13 -22 -18 -112 -29 -133 -15 -133 -15 -133 8 0 31 216 51 362 32z m-514 -75 c9 -4 17 -11 17 -17 0 -10 -90 -3 -147 12 -18 5 -33 5 -33 1 0 -9 -180 -29 -186 -20 -7 12 21 28 61 32 53 7 265 0 288 -8z m522 -5 c154 -17 155 -17 155 -51 0 -33 18 -33 -175 -8 -78 10 -164 7 -295 -11 -99 -14 -100 -14 -100 20 0 17 1 30 3 31 12 5 286 36 297 33 8 -1 60 -8 115 -14z m544 10 c100 -14 104 -34 6 -25 -44 4 -88 11 -97 16 -9 5 -18 5 -20 0 -2 -5 -43 -12 -92 -16 -73 -6 -88 -5 -84 6 8 25 172 36 287 19z m-1632 -31 c43 -6 82 -15 88 -20 11 -11 -44 -11 -105 1 -26 5 -68 4 -100 -1 -123 -21 -120 -21 -120 -5 0 15 23 22 100 29 19 2 40 5 47 5 6 1 47 -3 90 -9z m2131 -5 c23 -4 42 -11 42 -16 0 -7 -22 -8 -62 -3 -76 10 -82 10 -185 0 -58 -5 -83 -5 -83 3 0 6 19 13 43 16 23 3 56 8 72 10 31 4 98 0 173 -10z m-1524 -30 c9 -3 16 -11 16 -16 0 -11 -122 -2 -173 13 -44 12 -47 12 -47 -11 0 -26 -4 -27 -122 -35 l-98 -6 0 24 c0 22 5 25 73 35 72 11 320 8 351 -4z m1094 0 c36 -6 42 -10 42 -30 0 -23 -1 -24 -77 -18 -108 7 -123 11 -117 29 4 9 0 15 -10 15 -9 0 -16 -8 -16 -17 0 -16 -11 -18 -115 -15 -90 3 -115 6 -115 17 0 8 14 16 33 19 17 3 43 8 57 10 31 6 261 -2 318 -10z m-1590 -30 c33 -9 29 -35 -5 -28 -160 29 -183 31 -183 13 0 -14 -13 -18 -62 -23 -35 -4 -80 -9 -102 -12 -36 -6 -38 -5 -31 17 4 13 8 25 9 26 0 1 28 6 61 12 59 10 268 6 313 -5z m2060 0 c26 -5 32 -11 30 -28 -2 -11 -9 -20 -15 -19 -7 2 -44 6 -83 9 -54 5 -70 10 -66 20 3 8 -1 14 -9 14 -8 0 -15 -7 -15 -15 0 -12 -18 -15 -101 -15 -90 0 -100 2 -97 18 2 13 17 19 63 23 67 8 242 3 293 -7z m-984 -28 c291 -24 570 -41 846 -51 191 -7 207 -11 213 -42 4 -24 4 -24 -57 -18 -33 3 -185 10 -336 15 -151 6 -374 15 -495 21 -269 13 -539 13 -813 -1 -114 -5 -333 -14 -487 -20 -154 -5 -301 -13 -327 -16 -47 -6 -48 -6 -48 20 0 20 5 26 23 27 12 0 31 2 42 4 11 2 90 7 175 10 85 3 247 12 360 20 113 8 284 19 380 25 96 6 177 13 179 16 9 8 169 4 345 -10z m141 -121 c33 -2 143 -6 245 -9 102 -4 230 -9 285 -11 55 -2 172 -7 260 -11 199 -8 190 -6 190 -33 0 -23 0 -23 -165 -22 -91 1 -298 6 -460 11 -377 12 -1091 12 -1470 0 -162 -5 -362 -10 -445 -11 -134 -1 -150 1 -153 16 -2 9 0 21 5 25 4 4 94 11 198 14 105 4 210 9 235 11 25 2 135 7 245 11 110 4 274 10 365 14 155 7 531 4 665 -5z m820 -130 c33 -1 102 -3 153 -3 91 -2 92 -2 92 -27 l0 -25 -1430 0 -1430 0 0 25 c0 23 4 25 48 26 475 14 2228 17 2567 4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1222 1660 c0 -92 3 -160 9 -160 5 0 9 59 10 135 1 74 2 145 2 157 1 12 -4 23 -10 25 -7 3 -11 -45 -11 -157z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1220 1440 c0 -27 4 -50 9 -50 12 0 17 27 13 68 -6 50 -22 38 -22 -18z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1759 1909 c0 -2 -2 -75 -3 -161 -2 -112 0 -158 8 -158 13 0 15 304 3 316 -4 4 -7 5 -8 3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1753 1525 c0 -14 5 -25 12 -25 7 0 13 11 13 25 0 14 -6 25 -13 25 -7 0 -12 -11 -12 -25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1504 1660 c0 -96 2 -136 3 -87 2 48 2 126 0 175 -1 48 -3 8 -3 -88z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M944 1480 c0 -80 2 -112 3 -72 2 39 2 105 0 145 -1 39 -3 7 -3 -73z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M663 1450 c0 -16 6 -30 12 -30 6 0 12 14 12 30 0 17 -6 30 -12 30 -6 0 -12 -13 -12 -30z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M709 1478 c-8 -29 -5 -58 5 -58 7 0 13 12 13 30 0 17 -4 30 -9 30 -4 0 -8 -1 -9 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M665 1253 c2 -77 21 -79 21 -3 1 39 -3 60 -11 60 -7 0 -11 -20 -10 -57z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2272 1450 c1 -16 6 -30 13 -30 6 0 12 14 12 30 0 18 -6 30 -13 30 -8 0 -12 -12 -12 -30z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2272 1379 c-1 -37 20 -34 24 4 2 17 -2 27 -10 27 -8 0 -13 -13 -14 -31z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2273 1270 c-1 -48 2 -70 10 -70 8 0 12 23 12 70 0 93 -20 93 -22 0z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2313 1255 c0 -14 5 -25 12 -25 7 0 13 11 13 25 0 14 -6 25 -13 25 -7 0 -12 -11 -12 -25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M463 1350 c0 -36 2 -50 4 -32 2 17 2 47 0 65 -2 17 -4 3 -4 -33z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2544 1360 c0 -58 1 -81 3 -52 2 28 2 76 0 105 -2 28 -3 5 -3 -53z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1388 1323 c-14 -3 -18 -15 -18 -50 0 -42 2 -45 23 -39 12 3 25 6 30 6 4 0 7 20 7 45 0 45 -3 48 -42 38z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1570 1285 c0 -32 4 -45 14 -45 8 0 21 -3 30 -6 13 -5 16 2 16 39 0 32 -5 47 -16 51 -36 14 -44 7 -44 -39z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1179 1148 c-6 -92 -3 -188 7 -188 8 0 11 31 11 100 0 55 -4 100 -8 100 -5 0 -9 -6 -10 -12z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1219 1121 c-4 -88 -2 -125 9 -129 9 -3 12 15 12 62 0 36 0 69 1 73 0 4 -4 9 -10 11 -6 2 -11 -6 -12 -17z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1178 913 c-10 -22 -1 -137 10 -141 10 -3 12 15 11 72 -1 66 -10 93 -21 69z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1219 825 c-5 -23 -2 -49 7 -52 6 -2 11 10 12 27 0 16 -4 30 -9 30 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1166 744 c-31 -30 -9 -84 34 -84 17 0 50 34 50 52 0 13 -39 48 -54 48 -8 0 -22 -7 -30 -16z m54 -34 c0 -13 -7 -20 -20 -20 -13 0 -20 7 -20 20 0 13 7 20 20 20 13 0 20 -7 20 -20z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1755 988 c1 -130 5 -213 11 -215 6 -2 10 74 10 212 0 151 -3 215 -11 215 -8 0 -11 -63 -10 -212z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1798 1143 c-2 -10 -4 -96 -3 -192 1 -123 5 -176 13 -179 8 -2 11 46 9 187 -2 174 -8 230 -19 184z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1768 749 c-26 -15 -23 -65 3 -80 34 -18 69 3 69 40 0 42 -36 62 -72 40z m50 -36 c5 -17 -26 -29 -40 -15 -6 6 -7 15 -3 22 9 14 37 9 43 -7z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M847 1183 c-4 -3 -7 -23 -7 -44 0 -32 3 -36 20 -32 16 4 20 14 20 44 0 37 -15 51 -33 32z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2122 1159 c2 -37 7 -45 26 -47 20 -3 22 1 22 37 0 23 -4 41 -9 41 -5 0 -17 3 -26 6 -14 6 -16 0 -13 -37z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M380 1136 l-45 -12 -3 -72 c-3 -80 -5 -78 71 -66 l37 7 0 78 c0 44 -3 79 -7 78 -5 -1 -28 -6 -53 -13z m28 -127 c-7 -5 -23 -9 -35 -9 -21 0 -23 5 -23 55 0 53 1 55 33 63 l32 8 3 -54 c2 -37 -1 -58 -10 -63z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M377 1093 c-14 -13 -7 -63 8 -63 10 0 15 11 15 35 0 33 -8 43 -23 28z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2602 1068 c2 -22 9 -34 21 -36 14 -3 17 4 17 32 0 30 -4 36 -21 36 -17 0 -20 -5 -17 -32z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M708 1073 c-9 -20 -1 -107 10 -111 8 -2 11 14 10 57 -2 54 -10 76 -20 54z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M669 1049 c-8 -40 -5 -89 6 -89 14 0 16 72 3 86 -5 4 -8 5 -9 3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M664 860 c1 -58 5 -90 12 -90 7 0 11 32 11 90 -1 61 -4 90 -12 90 -8 0 -11 -28 -11 -90z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M704 860 c0 -60 4 -90 12 -90 7 0 11 30 11 90 -1 58 -5 90 -12 90 -7 0 -11 -32 -11 -90z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M674 740 c-28 -11 -36 -43 -17 -69 16 -24 55 -28 73 -7 29 36 -13 93 -56 76z m42 -31 c3 -6 0 -17 -7 -25 -18 -17 -44 -2 -36 20 7 18 33 21 43 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1504 845 c0 -110 2 -156 3 -103 2 53 2 143 0 200 -1 57 -3 13 -3 -97z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2273 940 c0 -91 4 -139 11 -137 14 5 14 269 0 274 -7 2 -11 -43 -11 -137z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2311 990 c-1 -48 1 -60 14 -60 8 0 15 5 15 10 0 6 -6 10 -12 10 -9 0 -8 4 2 10 13 9 13 11 0 20 -9 6 -10 10 -3 10 14 0 10 53 -4 57 -6 2 -11 -22 -12 -57z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2313 895 c0 -14 5 -25 12 -25 7 0 13 11 13 25 0 14 -6 25 -13 25 -7 0 -12 -11 -12 -25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2312 829 c-1 -37 20 -34 24 4 2 17 -2 27 -10 27 -8 0 -13 -13 -14 -31z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2288 743 c-22 -5 -35 -50 -21 -72 13 -21 57 -26 72 -7 27 33 -9 89 -51 79z m37 -33 c4 -6 1 -18 -6 -26 -11 -13 -14 -13 -27 0 -8 8 -11 19 -8 25 9 14 33 14 41 1z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M944 745 c0 -88 2 -123 3 -77 2 46 2 118 0 160 -1 42 -3 5 -3 -83z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1568 223 c23 -2 61 -2 85 0 23 2 4 4 -43 4 -47 0 -66 -2 -42 -4z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1618 93 c34 -2 90 -2 125 0 34 2 6 3 -63 3 -69 0 -97 -1 -62 -3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 1694 c-5 -44 -2 -101 6 -107 6 -6 6 -10 -3 -14 -13 -5 -7 -23 9 -23 11 0 7 136 -4 147 -4 3 -7 2 -8 -3z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2789 1620 c-1 -11 -2 -30 -2 -42 -1 -12 3 -23 9 -25 6 -2 11 15 11 42 1 43 -16 66 -18 25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2750 1547 c0 -20 0 -40 -1 -44 0 -4 4 -9 9 -11 11 -3 11 73 0 84 -5 4 -8 -9 -8 -29z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235 1548 c2 -31 23 -34 23 -3 0 14 -6 25 -13 25 -6 0 -11 -10 -10 -22z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2784 1435 c0 -27 5 -45 12 -45 6 0 11 18 10 45 0 25 -5 45 -11 45 -6 0 -11 -19 -11 -45z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 1445 c-5 -23 -2 -49 7 -52 6 -2 11 10 12 27 0 16 -4 30 -9 30 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M239 1448 c0 -2 -2 -22 -3 -45 -2 -28 1 -43 9 -43 7 0 12 17 11 45 0 25 -4 45 -8 45 -4 0 -8 -1 -9 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2749 1445 c-5 -23 -2 -49 7 -52 6 -2 11 10 12 27 0 16 -4 30 -9 30 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2745 1243 c1 -85 5 -138 11 -140 7 -2 11 45 10 137 0 92 -3 140 -10 140 -7 0 -11 -46 -11 -137z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 1345 c-1 -3 -1 -14 -1 -25 0 -46 3 -60 12 -60 5 0 9 20 8 45 -1 25 -6 45 -10 45 -4 0 -8 -2 -9 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M235 1220 c0 -71 3 -130 8 -130 10 0 10 -1 12 138 1 83 -2 122 -9 122 -8 0 -11 -42 -11 -130z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2784 1323 c4 -38 25 -41 24 -4 -1 18 -6 31 -14 31 -8 0 -12 -10 -10 -27z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2785 1210 c0 -46 4 -70 11 -70 8 0 12 24 11 70 0 43 -5 70 -11 70 -7 0 -11 -27 -11 -70z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M203 1236 c3 -7 0 -19 -6 -25 -8 -8 -8 -11 2 -11 7 0 9 -5 5 -12 -10 -16 -12 -78 -2 -78 4 0 5 -7 2 -15 -4 -8 -2 -15 4 -15 6 0 10 35 11 85 1 56 -3 85 -10 85 -6 0 -9 -6 -6 -14z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2789 1125 c-1 -3 -2 -14 -2 -25 -2 -29 18 -25 20 5 1 14 -2 25 -8 25 -5 0 -9 -2 -10 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 985 c-5 -23 -2 -49 7 -52 6 -2 11 10 11 27 0 16 -4 30 -9 30 -4 0 -8 -2 -9 -5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238 983 c-2 -5 -3 -23 -3 -42 1 -53 21 -49 23 4 2 39 -10 60 -20 38z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2749 988 c-7 -19 -1 -118 7 -118 6 0 11 24 11 60 0 33 -4 60 -8 60 -5 0 -9 -1 -10 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2789 988 c0 -2 -2 -29 -3 -60 -2 -38 2 -58 9 -58 8 0 12 22 12 60 0 33 -4 60 -8 60 -5 0 -9 -1 -10 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M195 880 c-3 -5 -1 -10 6 -10 8 0 8 -4 -1 -15 -10 -12 -10 -15 4 -15 10 0 16 9 16 25 0 25 -14 33 -25 15z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2744 815 c0 -30 5 -45 13 -45 9 0 13 14 11 45 -1 26 -6 45 -12 45 -7 0 -12 -18 -12 -45z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2785 818 c3 -58 22 -60 22 -3 0 29 -4 45 -12 45 -8 0 -11 -15 -10 -42z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M199 828 c-8 -31 -5 -58 6 -58 9 0 13 11 13 30 -1 17 -5 30 -10 30 -4 0 -8 -1 -9 -2z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M238 825 c-8 -8 3 -55 13 -55 5 0 9 14 9 30 0 28 -9 38 -22 25z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M181 718 c-13 -33 9 -63 45 -63 35 0 56 43 34 69 -20 25 -69 20 -79 -6z m65 -9 c3 -6 0 -17 -7 -25 -18 -17 -44 -2 -36 20 7 18 33 21 43 5z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M2741 718 c-20 -52 57 -95 80 -45 16 36 -3 67 -42 67 -22 0 -32 -6 -38 -22z m59 -17 c0 -21 -26 -36 -36 -20 -9 15 3 39 21 39 8 0 15 -9 15 -19z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgPorticoLogoWhite);\nexport default __webpack_public_path__ + \"static/media/portico-logo-white.23ebdb857631b87a7ecce6eab84d1fc8.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react'\nimport CIcon from '@coreui/icons-react'\nimport {\n  cilSpeedometer,\n  cilWallet,\n  cilMagnifyingGlass,\n  cilCog\n} from '@coreui/icons'\nimport { CNavGroup, CNavItem, CNavTitle, CNavLink } from '@coreui/react'\n\nconst generateNav = (networkInfo, networkStatus) => {\n  let relayChainValidators = [];\n  let paraCollators = [];\n\n  if (networkStatus === 'OK') {\n    //this means that we have successfully launched the networks.\n    //objective is to generate now the rest of the nav array with the information of the collators and validators\n    relayChainValidators = networkInfo.relay.map(node => {\n      return {\n        component: CNavItem,\n        name: node.name,\n        to: `https://polkadot.js.org/apps/?rpc=${node.wsUri}#/explorer`\n      }\n    })\n\n    for (const para in networkInfo.paras) {\n      //each para is an an array of paranodes\n      paraCollators = networkInfo.paras[para].map(node => {\n        return {\n          component: CNavItem,\n          name: node.name,\n          to: `https://polkadot.js.org/apps/?rpc=${node.wsUri}#/explorer`\n        }\n      }).sort((node1, node2) => node1.name > node2.name )\n    }\n  }\n\n  \n  const nav = [\n    {\n     component: CNavTitle,\n     name: \"Account\"\n   },\n   {\n     component: CNavTitle,\n     name: 'Current Deployment',\n   },\n   {\n     component: CNavItem,\n     name: 'Dashboard',\n     to: '/dashboard',\n     icon: <CIcon icon={cilSpeedometer} customClassName=\"nav-icon\" />,\n   },\n   {\n     component: CNavItem,\n     name: 'Coretime Credits',\n     to: '/coretime',\n     icon: <CIcon icon={cilWallet} customClassName=\"nav-icon\" />,\n   },\n   {\n     component: CNavItem,\n     name: 'Runtime Upgrades',\n     to: '/runtime-upgrade',\n     icon: <CIcon icon={cilCog} customClassName=\"nav-icon\" />,\n   },\n   {\n      component: CNavGroup,\n        name: 'Explorer',\n        icon: <CIcon icon={cilMagnifyingGlass} customClassName=\"nav-icon\" />,\n        items: [\n          {\n            component: CNavGroup,\n            name: 'Relaychain',\n            items:relayChainValidators\n          },\n          {\n            component: CNavGroup,\n            name: 'Parachain',\n            items:paraCollators\n          }\n        ]\n   }\n  ]\n\n  return nav\n  \n}\n\nexport default generateNav\n","import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\n\nimport { CSidebar, CSidebarBrand, CSidebarNav } from '@coreui/react'\n// import CIcon from '@coreui/icons-react'\n\nimport { CImage } from '@coreui/react'\n\nimport { AppSidebarNav } from './AppSidebarNav'\n\nimport porticoSVG from 'src/assets/brand/portico-logo-white.svg'\n\nimport SimpleBar from 'simplebar-react'\nimport 'simplebar/dist/simplebar.min.css'\n\nimport { useLocalStorageContext } from 'src/contexts/LocalStorageContext'\n\n// sidebar nav config\nimport generateNav from '../_nav'\n\nconst AppSidebar = () => {\n  const dispatch = useDispatch()\n  const unfoldable = useSelector((state) => state.sidebarUnfoldable)\n  const sidebarShow = useSelector((state) => state.sidebarShow)\n\n  const localStorageContext = useLocalStorageContext();\n  const { networkStatus, network } = localStorageContext;\n\n  const navigation = generateNav(network, networkStatus)\n\n  return (\n    <CSidebar\n      position=\"fixed\"\n      unfoldable={unfoldable}\n      visible={sidebarShow}\n      onVisibleChange={(visible) => {\n        dispatch({ type: 'set', sidebarShow: visible })\n      }}\n    >\n      <CSidebarBrand className=\"d-none d-md-flex\" to=\"/\">\n      <div className=\"clearfix\" style={{\"margin\":\"2rem\"}}>\n        <CImage rounded align=\"center\" src={porticoSVG} width={150} height={150} />\n        <h3 style={{'textAlign':'center', 'margin':'0', 'fontWeight':'200'}}>PORTICO</h3>\n      </div>\n      </CSidebarBrand>\n      <CSidebarNav>\n        <SimpleBar>\n          <AppSidebarNav items={navigation} />\n        </SimpleBar>\n      </CSidebarNav>\n    </CSidebar>\n  )\n}\n\nexport default React.memo(AppSidebar)\n","import PropTypes from 'prop-types'\nimport React from 'react'\nimport { CLink } from '@coreui/react'\n\nconst DocsLink = (props) => {\n  const { href, name, text, ...rest } = props\n\n  const _href = name ? `https://coreui.io/react/docs/components/${name}` : href\n\n  return (\n    <div className=\"float-end\">\n      <CLink\n        {...rest}\n        href={_href}\n        rel=\"noreferrer noopener\"\n        target=\"_blank\"\n        className=\"card-header-action\"\n      >\n        <small className=\"text-medium-emphasis\">{text || 'docs'}</small>\n      </CLink>\n    </div>\n  )\n}\n\nDocsLink.propTypes = {\n  href: PropTypes.string,\n  name: PropTypes.string,\n  text: PropTypes.string,\n}\n\nexport default React.memo(DocsLink)\n","import React from 'react'\nimport { AppContent, AppSidebar, AppFooter, AppHeader } from '../components/index'\n\nconst DefaultLayout = () => {\n  return (\n    <div>\n      <AppSidebar />\n      <div className=\"wrapper d-flex flex-column min-vh-100 bg-light\">\n        <AppHeader />\n        <div className=\"body flex-grow-1 px-3\">\n          <AppContent />\n        </div>\n        <AppFooter />\n      </div>\n    </div>\n  )\n}\n\nexport default DefaultLayout\n"],"names":["_ref","wasmHash","paraID","rcApi","useApiContextRC","api","_jsx","CButton","color","className","children","CIcon","onClick","async","element","document","createElement","wasm","query","paras","codeByHash","toHuman","file","Blob","type","href","URL","createObjectURL","download","concat","body","appendChild","click","exportWasm","size","icon","cilCloudDownload","blockColumns","key","label","_props","scope","collatorsColumns","cutHash","hash","start","slice","end","length","Dashboard","_localStorageContext$","_localStorageContext$2","_localStorageContext$3","configurationContext","useConfiguratorFormContext","localStorageContext","useLocalStorageContext","apiContextPara","useApiContextPara","apiContextRC","paraHeadInfo","coretimeSchedule","paraHead","paraCodeHash","paraStatus","coretimeLeft","filter","val","paraId","reduce","acc","amount","paraNodes","network","map","node","address","account","sort","node1","node2","name","toast","setToast","useState","toaster","useRef","blockItems","useCallback","console","log","response","fetch","process","method","headers","data","json","setNetworkStatus","result","restart","restartForm","cleanupState","cancelDeployment","_jsxs","CContainer","CRow","CCol","xl","span","cilExitToApp","gutterX","CCard","style","width","CCardBody","CCardTitle","CCardText","md","CPopover","content","placement","trigger","tabIndex","Link","to","cilPlus","handleCopyClick","navigator","clipboard","writeText","message","CToast","autohide","visible","CToastBody","CToastClose","white","cilCopy","CToaster","ref","push","ExportWasm","cilCog","CTable","columns","items","ThemeView","setColor","createRef","useEffect","el","current","parentNode","firstChild","varColor","window","getComputedStyle","getPropertyValue","rgbToHex","ThemeColor","classes","classNames","xs","sm","paddingTop","Colors","_Fragment","CCardHeader","DocsLink","Typography","setVisible","minBlock","coretime","setCoretime","rcHeadInfo","scheduleAdditional","validWhen","setValidWhen","validAmount","setValidAmount","validEvery","setValidEvery","validated","setValidated","CForm","noValidate","onSubmit","event","currentTarget","checkValidity","preventDefault","stopPropagation","CModalHeader","CModalTitle","id","CModalBody","CFormInput","onChange","proposedWhen","Math","floor","Number","target","valueAsNumber","when","handleWhenChange","min","invalid","step","required","value","feedbackInvalid","max","handleAmountChange","every","handleEveryChange","CModalFooter","variant","Coretime","toastCopy","setToastCopy","cancellingID","setCancellingID","cancelScheduled","statusAditional","statusCancel","paraCoretime","ticket1","ticket2","block","lastBlockScheduled","frequency","minPossibleBlock","parseInt","CSpinner","CModal","alignment","onClose","GetMore","cols","gutter","coretimeTicket","schedulerId","height","cilXCircle","handleDeleteTicket","cilAlarm","cilLoopCircular","cilWallet","CCardFooter","RuntimeUpgrade","tokenSymbol","chainLoading","setChainLoading","blocks","setBlocks","config","setConfig","endpoint","chopsticksApi","setChopsticksApi","chain","setChain","fileContent","setFileContent","loading","setLoading","alice","bob","createTestPairs","runtimeVersions","setRuntimeVersions","enableRuntimeUpgrade","setEnableRuntimeUpgrade","lines","setLines","runtime","setRuntime","runtime_path","then","text","catch","error","fork","_network$paras","_network$paras$paraID","_network$paras$paraID2","wsUri","setup","head","mockSignatureHost","db","IdbDatabase","provider","ChopsticksProvider","ApiPromise","noInitWarn","isReadyOrError","spec","rpc","state","getRuntimeVersion","toJSON","specVersion","number","setupChain","old","disabled","bob_balance","system","free","tx","newPallet","doSomething","signAndSend","e","res","sudo","sudoUncheckedWeight","setCode","toHex","newBlock","balances","transferKeepAlive","storage_value","something","runtimeUpgrade","marginLeft","blob","url","a","removeChild","revokeObjectURL","line","index","Empty","fluid","setStateStatus","collators","ss58","decimals","specs","jsonData","para_id","template","collators_count","properties","symbol","executing","status","JSON","stringify","setNetwork","scheduled","Configurator","formStatus","ready","setReady","navigate","useNavigate","handleSubmit","submit","CAvatar","cilArrowCircleRight","component","ConfiguratorRuntime","runtimes","runtimeInfo","CCardImage","orientation","src","img","shortDescription","handleClick","github","cibGithub","ConfiguratorRuntimeSpecs","_runtime$specs","_runtime$specs2","_runtime$specs3","_runtime$specs4","ss58Valid","setSs58Valid","paraIdValid","setParaIdValid","tokenSymbolValid","setTokenSymbolValid","decimalsValid","setDecimalsValid","setter","path","newRuntime","parse","split","obj","array","handleTokenSymbolChange","exact","ConfiguratorCollators","setCollators","qty","maxAmount","Array","from","fill","item","numberOfCollators","collatorImage","active","ConfiguratorCoretime","AppBreadcrumb","currentLocation","useLocation","pathname","networkStatus","breadcrumbs","location","prev","curr","currentPathname","routeName","getRouteName","routes","currentRoute","find","route","getBreadcrumbs","CBreadcrumb","CBreadcrumbItem","breadcrumb","_createElement","React","AppContent","lg","Suspense","fallback","Routes","idx","Route","Navigate","replace","AppFooter","CFooter","AppHeader","dispatch","useDispatch","sidebarShow","useSelector","CHeader","position","CHeaderToggler","cilMenu","CHeaderBrand","CImage","rounded","align","porticoSVG","CHeaderDivider","AppSidebarNav","navLink","badge","CBadge","navItem","rest","Component","newWindow","includes","NavLink","navGroup","_item$items","String","toggler","startsWith","generateNav","networkInfo","relayChainValidators","paraCollators","relay","CNavItem","para","CNavTitle","cilSpeedometer","customClassName","CNavGroup","cilMagnifyingGlass","AppSidebar","unfoldable","sidebarUnfoldable","navigation","CSidebar","onVisibleChange","CSidebarBrand","CSidebarNav","SimpleBar","props","_href","CLink","rel","DefaultLayout"],"sourceRoot":""}